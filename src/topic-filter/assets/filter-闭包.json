[{"collectionCount":1238,"commentsCount":60,"gfw":false,"entryView":"58f1fee8da2f60005d2bc814","subscribersCount":37,"ngxCachedTime":1572571723,"updatedAt":"2019-11-01T00:50:07.081Z","tags":[{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571624,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"},{"ngxCachedTime":1572571605,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"},{"ngxCachedTime":1572571615,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"},{"ngxCachedTime":1572571696,"ngxCached":true,"title":"源码","id":"583be269ac502e006c27ed41"}],"objectId":"58f1fee88d6d810057a7c975","rankIndex":0.00089990135825642,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/58f1fa6a44d904006cf25d22","buildTime":1572569407.0974,"createdAt":"2017-04-15T11:07:20.251Z","user":{"community":null,"collectedEntriesCount":104,"company":"ArcBlock","followersCount":13575,"followeesCount":10,"role":"editor","postedPostsCount":43,"level":5,"isAuthor":true,"postedEntriesCount":8,"totalCommentsCount":610,"ngxCachedTime":1572571701,"ngxCached":true,"viewedEntriesCount":1036,"jobTitle":"高级前端工程师","subscribedTagsCount":17,"totalCollectionsCount":14603,"username":"王仕军","avatarLarge":"https://user-gold-cdn.xitu.io/2018/9/13/165d16e03dcb1462?w=330&h=330&f=png&s=171292","objectId":"57a7f634d342d300576b738d"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/2f0820583748fed594ca.jpg","original":true,"hotIndex":2998.9214,"content":"修订说明：发布《80% 应聘者都不及格的 JS 面试题》之后，全网阅读量超过 6W，在知乎、掘金、cnodejs 都引发了很多讨论，还被多个前端微信公号和技术媒体转载。酝酿许久之后，笔者准备接下来撰写前端面试题系列文章，内容涵盖 DOM、HTTP、浏览器、框架、编码、工程化等方…","title":"破解前端面试（80% 应聘者不及格系列）：从闭包说起","lastCommentTime":"2019-08-21T08:24:07.721Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":34017,"summaryInfo":"招聘前端工程师，尤其是中高级前端工程师，扎实的 JS 基础绝对是必要条件，基础不扎实的工程师在面对前端开发中的各种问题时大概率会束手无策。在考察候选人 JS 基础的时候，我经常会提供下面这段代码，然后让候选人分析它实际运行的结果： 这段代码很短，只有 7 行，我想，能读到这里的同学应该不需要我逐行...","isCollected":false},{"collectionCount":1004,"userRankIndex":11.262332005096,"buildTime":1572569994.8034,"commentsCount":131,"gfw":false,"objectId":"5cf468cf6fb9a07eaa226571","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571625,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571516,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"updatedAt":"2019-11-01T00:59:54.786Z","rankIndex":0.013172251319704,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cf468a9f265da1bb77652aa","verifyCreatedAt":"2019-06-03T00:39:10.880Z","createdAt":"2019-06-03T00:39:10.880Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ7qjRGwP5t74BWKb3UAzyYHqrSyBgHNYI3WbsB1UGubuL3915ywQqibDDWhQnWZJ3jllUR3LIWAwA/132"}},"collectedEntriesCount":62,"company":"","followersCount":13557,"followeesCount":21,"role":"guest","postedPostsCount":121,"level":6,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1173,"ngxCachedTime":1572571592,"ngxCached":true,"viewedEntriesCount":3036,"jobTitle":"公众号 @ 大迁世界","subscribedTagsCount":40,"totalCollectionsCount":16118,"username":"前端小智","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08a02f4dda88289","objectId":"59df61ec51882578ce26ee6e"},"author":"","screenshot":"","original":true,"hotIndex":2864.044,"content":"正如标题所述，JavaScript闭包对我来说一直有点神秘,看过很多闭包的文章，在工作使用过闭包，有时甚至在项目中使用闭包，但我确实是这是在使用闭包的知识。 最近看到的一些文章，终于，有人用于一种让我明白方式对闭包进行了解释，我将在本文中尝试使用这种方法来解释闭包。 在理解闭包…","title":"我从来不理解JavaScript闭包，直到有人这样向我解释它","lastCommentTime":"2019-10-11T15:26:48.998Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":34563,"summaryInfo":"正如标题所述，JavaScript闭包对我来说一直有点神秘,看过很多闭包的文章，在工作使用过闭包，有时甚至在项目中使用闭包，但我确实是这是在使用闭包的知识。 最近看到的一些文章，终于，有人用于一种让我明白方式对闭包进行了解释，我将在本文中尝试使用这种方法来解释闭包。 想阅读更多优质文章请猛戳GIT...","isCollected":false},{"collectionCount":1004,"autoPass":false,"commentsCount":85,"gfw":false,"buildTime":1572570127.3465,"checkStatus":true,"objectId":"5b1fa7b76fb9a01e657a5c50","entryView":"","subscribersCount":0,"ngxCachedTime":1572571723,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571723,"ngxCached":true,"title":"MVVM","id":"5597a314e4b08a686ce5be90"},{"ngxCachedTime":1572571647,"ngxCached":true,"title":"正则表达式","id":"55d0cb7360b2e3559fd9ed64"}],"isEvent":false,"rankIndex":0.001614400581892,"hot":false,"updatedAt":"2019-11-01T01:02:07.330Z","originalUrl":"https://juejin.im/post/5b1fa77451882513ea5cc2ca","verifyCreatedAt":"2018-06-13T02:17:28.129Z","createdAt":"2018-06-13T02:17:28.129Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqLYUAgw5H3CZRIo2Z2F26rJaicJzdqajMRdsqZXjLbSibDMpM57YBFpFrAHdia0fHNxZHkfuskd0R8w/132"},"github":{"username":"imaoda","avatarLarge":"https://avatars1.githubusercontent.com/u/28912714?v=4","uid":"28912714"}},"collectedEntriesCount":6,"company":"Meituan","followersCount":1346,"followeesCount":22,"role":"guest","postedPostsCount":4,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":138,"ngxCachedTime":1572571644,"ngxCached":true,"viewedEntriesCount":5047,"jobTitle":"前端","subscribedTagsCount":18,"totalCollectionsCount":3021,"username":"maodayeyeye","avatarLarge":"https://user-gold-cdn.xitu.io/2018/6/10/163e9f12792a8b57?w=1239&h=1242&f=png&s=1126820","objectId":"589b47350ce46300561ee7e9"},"author":"","screenshot":"","original":true,"hotIndex":2160.4301,"content":"name 和 age 被响应式的渲染出来，在 2s 后我们修改了 name 的值，同样能在页面正确更新。","title":"50行代码的MVVM，感受闭包的艺术","lastCommentTime":"2019-10-22T12:43:22.327Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":21422,"summaryInfo":"name 和 age 被响应式的渲染出来，在 2s 后我们修改了 name 的值，同样能在页面正确更新。 【重点分析】接下来梳理一下这段代码的思路，顺便了解一下 MVVM 闭包的艺术：","isCollected":false},{"collectionCount":630,"commentsCount":36,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571726,"updatedAt":"2019-10-31T12:45:31.366Z","tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"59aa7bb96fb9a0249c007e18","rankIndex":0.00044629264527094,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/59aa71d56fb9a0248d24fae3","buildTime":1572525931.3822,"createdAt":"2017-09-02T09:36:57.121Z","user":{"community":{"weibo":{"selfDescription":"黑化的相学长","uid":"1778623604","blogAddress":"http://weibo.com/xiangxuezhang","username":"相学长","avatarLarge":"https://tvax2.sinaimg.cn/crop.0.0.1342.1342.180/6a03a474ly8fgpaf6uqn5j211a11adi2.jpg?KID=imgbed,tva&Expires=1569435685&ssig=H7TwCRzOf6"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erQsDLG3OGjr36ASEJ4PTefryysnibLlbOfm8AfasogNF3ZrEo0TmJw9rcVCmlquNOicUX19qn3wj9Q/132"},"github":{"username":"wuomzfx","avatarLarge":"https://avatars3.githubusercontent.com/u/8017237?v=4","uid":"8017237"}},"collectedEntriesCount":77,"company":"蚂蚁金服","followersCount":3455,"followeesCount":81,"role":"editor","postedPostsCount":16,"level":3,"isAuthor":true,"postedEntriesCount":6,"totalCommentsCount":318,"ngxCachedTime":1572571726,"viewedEntriesCount":2161,"jobTitle":"前端","subscribedTagsCount":12,"totalCollectionsCount":3002,"username":"相学长","avatarLarge":"https://user-gold-cdn.xitu.io/2017/6/22/851377d22c5c7561ca1635154a564cd1","objectId":"58f876dc5c497d0058e38ae1"},"author":"","screenshot":"","original":true,"hotIndex":1163.3077,"content":"日常开发中，我们经常用到this。例如用Jquery绑定事件时，this指向触发事件的DOM元素；编写Vue、React组件时，this指向组件本身。对于新手来说，常会用一种意会的感觉去判断this的指向。以至于当遇到复杂的函数调用时，就分不清this的真正指向。 本文将通过两道…","title":"从这两套题，重新认识JS的this、作用域、闭包、对象","lastCommentTime":"2019-06-02T23:25:49.217Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":9939,"summaryInfo":"日常开发中，我们经常用到this。例如用Jquery绑定事件时，this指向触发事件的DOM元素；编写Vue、React组件时，this指向组件本身。对于新手来说，常会用一种意会的感觉去判断this的指向。以至于当遇到复杂的函数调用时，就分不清this的真正指向。 本文将通过两道题去慢慢分析thi...","isCollected":false},{"collectionCount":602,"commentsCount":15,"gfw":false,"entryView":"58a0bc9c570c350057781fd6","subscribersCount":10,"ngxCachedTime":1572571727,"updatedAt":"2019-10-31T14:33:10.611Z","tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58a0bc942f301e0069ed6d55","rankIndex":0.0002728268505344,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/21a16d44f150","buildTime":1572532390.6294,"createdAt":"2017-02-12T19:50:44.804Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/zfXNHMZo2ErRIT1HQnFdMGztfE0UP7WKodoOl43IWvCaicqX8eQAUGRQN22XNibicULEAibOMxI4mDUDfveia0zH52A/132"},"github":{"username":"yangbo5207","avatarLarge":"https://avatars3.githubusercontent.com/u/13758605?v=4","uid":"13758605"}},"collectedEntriesCount":110,"company":"公号: 梧桐Luo","followersCount":2168,"followeesCount":3,"role":"editor","postedPostsCount":11,"level":3,"isAuthor":true,"postedEntriesCount":17,"totalCommentsCount":314,"ngxCachedTime":1572571727,"viewedEntriesCount":1981,"jobTitle":"大前端实践者","subscribedTagsCount":14,"totalCollectionsCount":5990,"username":"这波能反杀","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/27/16cd165de9836f74?w=400&h=400&f=jpeg&s=31859","objectId":"577a770ea633bd00573520f7"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/d6258f6d88601c26902b.png","original":false,"hotIndex":1000.4534,"content":"详细图解，彻底搞懂闭包与作用域链","title":"前端基础进阶：详细图解，彻底搞懂闭包与作用域链","lastCommentTime":"2018-04-28T10:32:45.210Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":7657,"summaryInfo":"初学JavaScript的时候，我在学习闭包上，走了很多弯路。而这次重新回过头来对基础知识进行梳理，要讲清楚闭包，也是一个非常大的挑战。 闭包有多重要？如果你是初入前端的朋友，我没有办法直观的告诉你闭包在实际开发中的无处不在，但是我可以告诉你，前端面试，必问闭包。面试官们常常用对闭包的了解程度来判...","isCollected":false},{"collectionCount":547,"commentsCount":29,"gfw":false,"entryView":"58d1e51461ff4b0060410f30","subscribersCount":24,"ngxCachedTime":1572571727,"updatedAt":"2019-10-29T09:34:21.662Z","tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58d1343144d90400684fb02c","rankIndex":0.00026122412388891,"hot":false,"autoPass":false,"originalUrl":"http://zhqgit.top/2017/03/20/JS%E8%BF%9B%E9%98%B6%E7%AF%87-%E7%BB%88%E7%BB%93%E4%BD%A0%E5%AF%B9%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83%E5%92%8C%E9%97%AD%E5%8C%85%E7%9A%84%E7%96%91%E6%83%91/","buildTime":1572341661.6791,"createdAt":"2017-03-21T14:09:53.375Z","user":{"community":{"github":{"username":"zhqgit","avatarLarge":"https://avatars0.githubusercontent.com/u/21311834?v=4","uid":"21311834"},"wechat":{"expires_at":"1478280530801","nickname":"自此无阳明。"}},"collectedEntriesCount":355,"company":"","followersCount":262,"followeesCount":25,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":31,"ngxCachedTime":1572571626,"ngxCached":true,"viewedEntriesCount":1039,"jobTitle":"学生","subscribedTagsCount":49,"totalCollectionsCount":544,"username":"zhqgit","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/ec780f5656b5d76afd6b8ce5b9f461ba","objectId":"581ca7938ac247004fe878fb"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/cc8a11b58b251552f68d.jpg","original":true,"hotIndex":901.9514,"content":"描述前端闭包问题","title":"JS 进阶篇: 这可能是关于闭包最好的一篇文章","lastCommentTime":"2017-03-30T01:33:08.489Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":6505,"summaryInfo":"每次下午打完球之后，晚上的学习总是提不起什么精神，趁着看不下新知识的空，把前两天总结的知识发出来给大家参考参考，挺多是摘抄的，也有一些是自己写的，如果有什么错误的，敬请指正！ ES6之前的原始数据类型有Undefined、Null、布尔值（Boolean）、字符串（String）、数值（Numbe...","isCollected":false},{"collectionCount":396,"autoPass":true,"commentsCount":18,"gfw":false,"buildTime":1572567448.5464,"checkStatus":true,"objectId":"5b081ff0f265da0db179e8a6","entryView":"","subscribersCount":0,"ngxCachedTime":1572571727,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571688,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.00061284171143113,"hot":false,"updatedAt":"2019-11-01T00:17:28.528Z","originalUrl":"https://juejin.im/post/5b081f8d6fb9a07a9b3664b6","verifyCreatedAt":"2018-05-25T14:38:40.511Z","createdAt":"2018-05-25T14:38:40.511Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKgrcbDrMyBCG6vxECP7hQH7Iw5WA3ibsJjvlOXY7qGY2L8apE71M2ibXv69HPvlBQRu0Vo2X1Hic7g/132"}},"collectedEntriesCount":293,"company":"","followersCount":599,"followeesCount":17,"role":"editor","postedPostsCount":4,"level":3,"isAuthor":true,"postedEntriesCount":11,"totalCommentsCount":52,"ngxCachedTime":1572571727,"viewedEntriesCount":2820,"jobTitle":"一个爱学习的前端程序员。","subscribedTagsCount":74,"totalCollectionsCount":2045,"username":"lce_shou","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/9bbd2572fb8bc98df074a515fa2181ef","objectId":"57ccbfab165abd0068f2e8db"},"author":"","screenshot":"","original":true,"hotIndex":865.393,"content":"现在去面试前端开发的岗位，如果你对面试官也是个前端，并且不是太水的话，你有很大的概率会被问到JavaScript中的闭包。因为这个闭包这个知识点真的很重要，还非常难掌握。 什么是闭包，你可能会搜出很多答案.... 我最认同的是《你不知道的JavaScript》中的描述，虽然前面…","title":"闭包详解一","lastCommentTime":"2019-03-04T09:51:59.466Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":9016,"summaryInfo":"在正式学习闭包之前，请各位同学一定要确保自己对词法作用域已经非常的熟悉了，如果对词法作用域还不够熟悉的话，可以先看： 现在去面试前端开发的岗位，如果你对面试官也是个前端，并且不是太水的话，你有很大的概率会被问到JavaScript中的闭包。因为这个闭包这个知识点真的很重要，还非常难掌握。 什么是闭...","isCollected":false},{"collectionCount":363,"commentsCount":7,"gfw":false,"entryView":"58a9a390128fe10064a36a23","subscribersCount":4,"ngxCachedTime":1572571627,"updatedAt":"2019-10-29T13:29:56.406Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571508,"ngxCached":true,"title":"Chrome","id":"555e9ae0e4b00c57d99562ee"}],"objectId":"58a9a3848d6d8100583acbf4","rankIndex":0.00016538566017531,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/73122bb3d262","buildTime":1572355796.4235,"createdAt":"2017-02-19T13:54:12.399Z","user":{"community":{"github":{"username":"yangbo5207","avatarLarge":"https://avatars3.githubusercontent.com/u/13758605?v=4","uid":"13758605"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/zfXNHMZo2ErRIT1HQnFdMGztfE0UP7WKodoOl43IWvCaicqX8eQAUGRQN22XNibicULEAibOMxI4mDUDfveia0zH52A/132"}},"collectedEntriesCount":110,"company":"公号: 梧桐Luo","followersCount":2168,"followeesCount":3,"role":"editor","postedPostsCount":11,"level":3,"isAuthor":true,"postedEntriesCount":17,"totalCommentsCount":314,"ngxCachedTime":1572571626,"ngxCached":true,"viewedEntriesCount":1981,"jobTitle":"大前端实践者","subscribedTagsCount":14,"totalCollectionsCount":5990,"username":"这波能反杀","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/27/16cd165de9836f74?w=400&h=400&f=jpeg&s=31859","objectId":"577a770ea633bd00573520f7"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/0baa5ad7866944db0025.png","original":false,"hotIndex":598.4094,"content":"与大家分享如何利用 chrome 的开发者工具，进行代码的断点调试，观察函数调用栈，作用域链，闭包，this 等关键信息。","title":"前端高手必备技能：如何在 chrome 开发者工具中观察函数调用栈、作用域链与闭包","lastCommentTime":"2018-04-28T10:33:47.737Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":4558,"summaryInfo":"在前端开发中，有一个非常重要的技能，叫做断点调试。 在chrome的开发者工具中，通过断点调试，我们能够非常方便的一步一步的观察JavaScript的执行过程，直观感知函数调用栈，作用域链，变量对象，闭包，this等关键信息的变化。因此，断点调试对于快速定位代码错误，快速了解代码的执行过程有着非常...","isCollected":false},{"collectionCount":354,"autoPass":true,"commentsCount":12,"gfw":false,"buildTime":1572567528.5477,"checkStatus":true,"objectId":"5ac21eb8f265da2392368433","entryView":"","subscribersCount":0,"ngxCachedTime":1572571731,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.0003725532138254,"hot":false,"updatedAt":"2019-11-01T00:18:48.529Z","originalUrl":"http://hpoenixf.com/一次搞定闭包和this.html","verifyCreatedAt":"2018-04-02T12:14:48.592Z","createdAt":"2018-04-02T12:14:48.592Z","user":{"community":{"github":{"username":"hpoenixf","avatarLarge":"https://avatars2.githubusercontent.com/u/14359427?v=4","uid":"14359427"}},"collectedEntriesCount":71,"company":"alibaba","followersCount":1895,"followeesCount":46,"role":"editor","postedPostsCount":3,"level":3,"isAuthor":false,"postedEntriesCount":19,"totalCommentsCount":137,"ngxCachedTime":1572571628,"ngxCached":true,"viewedEntriesCount":3387,"jobTitle":"前端","subscribedTagsCount":21,"totalCollectionsCount":4909,"username":"hpoenixf","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082f33c048abbf8","objectId":"57af2399128fe10055b50189"},"author":"","screenshot":null,"original":true,"hotIndex":607.9716,"content":"闭包和this，是两个相当高频的考点，然而你有没有想过，实际上他们两个都跟同一个知识点相关？\n有请我们的这篇文章的主角，执行上下文。","title":"一次搞定闭包和this","lastCommentTime":"2019-04-01T02:43:27.217Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":4829,"summaryInfo":"闭包和this，是两个相当高频的考点，然而你有没有想过，实际上他们两个都跟同一个知识点相关？ 有请我们的这篇文章的主角，执行上下文 可以简单理解执行上下文是js代码执行的环境，他的组成如下 由于JS是单线程的，一次只能发生一件事情，其他事情会放在指定上下文栈中排队。js解释器在初始化执行代码时，会...","isCollected":false},{"collectionCount":336,"commentsCount":2,"gfw":false,"entryView":"58db196fb123db199f52fa9f","subscribersCount":2,"ngxCachedTime":1572571628,"updatedAt":"2019-10-30T14:27:48.301Z","tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58dafaf561ff4b006ce236da","rankIndex":0.0001590789503264,"hot":false,"autoPass":false,"originalUrl":"http://www.cnblogs.com/wangfupeng1988/p/3977924.html","buildTime":1572445668.3172,"createdAt":"2017-03-29T00:08:21.599Z","user":{"community":{"github":{"username":"yeyuqiudeng","avatarLarge":"https://avatars0.githubusercontent.com/u/10278227?v=4","uid":"10278227"}},"collectedEntriesCount":106,"company":"","followersCount":1960,"followeesCount":5,"role":"editor","postedPostsCount":41,"level":3,"isAuthor":true,"postedEntriesCount":25,"totalCommentsCount":88,"ngxCachedTime":1572571618,"ngxCached":true,"viewedEntriesCount":3095,"jobTitle":"","subscribedTagsCount":82,"totalCollectionsCount":2315,"username":"对角","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0830c1ce50f08d0","objectId":"57ccd20f7db2a200789c33d5"},"author":"","screenshot":"","original":false,"hotIndex":543.8978,"content":"我见过分析原型和闭包最详细，最易理解的文章了","title":"深入理解 JavaScript 原型和闭包","lastCommentTime":"2017-03-29T18:02:34.909Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":4112,"summaryInfo":"　　该教程绕开了javascript的一些基本的语法知识，直接讲解javascript中最难理解的两个部分，也是和其他主流面向对象语言区别最大的两个部分——原型和闭包，当然，肯定少不了原型链和作用域链。帮你揭开javascript最神秘的面纱。 　　这是我在这么多年学习javascript的经历中...","isCollected":false},{"collectionCount":323,"commentsCount":8,"gfw":false,"entryView":"589c01621b69e60059b29cdd","subscribersCount":7,"ngxCachedTime":1572571627,"updatedAt":"2019-10-31T07:06:51.072Z","tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571548,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"}],"objectId":"589be51b2f301e00692ff583","rankIndex":0.00021250264502593,"hot":false,"autoPass":false,"originalUrl":"http://www.zcfy.cc/article/master-the-javascript-interview-what-is-a-closure-2127.html","buildTime":1572505611.0892,"createdAt":"2017-02-09T03:42:19.908Z","user":{"community":{"weibo":{"avatar_url":"http://tva1.sinaimg.cn/crop.0.0.750.750.180/716e519cjw8f71p3y2r1zj20ku0kujsp.jpg","uid":"1903055260","nickname":"瓦是榴莲哥"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJicftDiaSTbbRnmvox12T7HDNplcXLpT846VtwE2pTyZvE8iaBtn3koK1JrFiaHmuGecnAgocicbzWKMw/132"},"github":{"username":"Jaction","avatarLarge":"https://avatars2.githubusercontent.com/u/17811893?v=4","uid":"17811893"}},"collectedEntriesCount":526,"company":"信必优","followersCount":1343,"followeesCount":15,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":20,"totalCommentsCount":85,"ngxCachedTime":1572571598,"ngxCached":true,"viewedEntriesCount":4025,"jobTitle":"前端","subscribedTagsCount":48,"totalCollectionsCount":2721,"username":"sponing","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/17/160652e6b37c8f91?w=1182&h=788&f=jpeg&s=160181","objectId":"57de99f4a341310058584590"},"author":"","screenshot":"","original":false,"hotIndex":783.2153,"content":"征服 JavaScript 面试：什么是闭包","title":"征服 JavaScript 面试：什么是闭包","lastCommentTime":"2019-04-10T13:35:58.969Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":9043,"summaryInfo":"“征服 JavaScript 面试”是我写的一系列文章，来帮助面试者准备他们在面试 JavaScript 中、高级职位中将可能会遇到的一些问题。这些问题我自己在面试中也经常会问。 在我面试时问出的一系列问题里，闭包通常是我问的第一个或最后一个问题。坦白地说，如果你连闭包也弄不明白，你是不会在 Ja...","isCollected":false},{"collectionCount":321,"commentsCount":15,"gfw":false,"entryView":"58833012570c350062bc77b7","subscribersCount":9,"ngxCachedTime":1572571731,"updatedAt":"2019-10-31T03:20:17.396Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"588330121b69e60059130e9f","rankIndex":0.00014975368379754,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/58832fe72f301e00697b672d","buildTime":1572492017.4132,"createdAt":"2017-01-21T09:55:30.447Z","user":{"community":{"weibo":{"selfDescription":"","uid":"5269827708","blogAddress":"http://weibo.com/tanjizhen","username":"Damonare","avatarLarge":"https://tvax3.sinaimg.cn/crop.0.0.1080.1080.180/005KDEV6ly8fys7p8govcj30u00u0jsb.jpg?KID=imgbed,tva&Expires=1569764513&ssig=7TNbGg3HNF"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/XswI5l3A2vXicgRXn2egbIwcicy6WZlbR547wiaYWjQJbS1Dz1kVA5YMNFicZjh7MhJBWfZgybnrfvMF6nWgcL2fxw/132"},"github":{"uid":"15198148","nickname":"Damonare","username":"damonare","avatar_url":"https://avatars1.githubusercontent.com/u/15198148?v=3","bio":"A developer","html_url":"https://github.com/damonare"}},"collectedEntriesCount":52,"company":"微保","followersCount":6620,"followeesCount":119,"role":"editor","postedPostsCount":32,"level":5,"isAuthor":true,"postedEntriesCount":2,"totalCommentsCount":307,"ngxCachedTime":1572571722,"ngxCached":true,"viewedEntriesCount":1998,"jobTitle":"前端工程师","subscribedTagsCount":59,"totalCollectionsCount":12333,"username":"Damonare","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/11/16044eade9713330?w=256&h=256&f=jpeg&s=13796","objectId":"5753abd0207703006cf5449f"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/310f2e2212d1c1a25877.png","original":true,"hotIndex":567.4908,"content":"前言 总括 ：这篇文章使用有效的javascript代码向程序员们解释了闭包，大牛和功能型程序员请自行忽略。 译者 ：文章写在2006年，可直到翻译的21小时之前作者还在完善这篇文章，在Stackoverflow的How do JavaScript closures work?…","title":" JavaScript 闭包入门（译文）","lastCommentTime":"2019-04-08T01:05:17.268Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":4622,"summaryInfo":"总括 ：这篇文章使用有效的javascript代码向程序员们解释了闭包，大牛和功能型程序员请自行忽略。 译者 ：文章写在2006年，可直到翻译的21小时之前作者还在完善这篇文章，在Stackoverflow的How do JavaScript closures work?这个问题里更是得到了400...","isCollected":false},{"collectionCount":309,"commentsCount":3,"gfw":false,"entryView":"57d9074a816dfa0067d58e39","subscribersCount":3,"ngxCachedTime":1572571734,"updatedAt":"2019-10-30T19:33:29.072Z","tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"57d8fb35a22b9d0061f3a692","rankIndex":0.00010261575314862,"hot":false,"autoPass":false,"originalUrl":"http://jasonliao.me/posts/2016-05-06-use-javascript-closures-efficiently.html","buildTime":1572464009.0941,"createdAt":"2016-09-14T07:24:37.990Z","user":{"community":{"weibo":{"selfDescription":"大口吃瓜 快意飞马","uid":"2094660511","blogAddress":"http://weibo.com/u/2094660511","username":"竹之__","avatarLarge":"https://tvax3.sinaimg.cn/crop.0.0.751.751.180/7cd9fb9fly8g5x7z46lpuj20kv0kvwfr.jpg?KID=imgbed,tva&Expires=1567335640&ssig=dksLVgDpW2"}},"collectedEntriesCount":79,"company":"","followersCount":22,"followeesCount":40,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":4,"ngxCachedTime":1572571734,"viewedEntriesCount":2107,"jobTitle":"前端开发","subscribedTagsCount":27,"totalCollectionsCount":477,"username":"竹之同学","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/d388e74da4b6c181ef777d218e756856","objectId":"56cc6253df0eea0053b8311d"},"author":"","screenshot":"","original":false,"hotIndex":465.3418,"content":"闭包普遍地用在 Node.js 中，以支持各种形式的异步和事件驱动这两种编程模式。如果你对闭包有一个很好的理解，就可以保证你所开发的应用不仅有正确的功能，还有良好的稳定性和可扩展性。","title":"[译] 高效地使用闭包","lastCommentTime":"2016-09-17T09:50:45.254Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":3063,"summaryInfo":"翻译能力有限，原文请点这里 Use JavaScript Closures Efficiently，越到后面，内容才越重要，如果想看，请耐心看完(我也是翻译之后才知道的) 闭包普遍地用在 Node.js 中，以支持各种形式的异步和事件驱动这两种编程模式。如果你对闭包有一个很好的理解，就可以保证你所...","isCollected":false},{"collectionCount":304,"commentsCount":3,"gfw":false,"objectId":"59df405251882551bf7e58c6","checkStatus":true,"buildTime":1572517808.653,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571731,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571705,"ngxCached":true,"title":"服务器","id":"58c16b6444d9040069773bdf"},{"ngxCachedTime":1572571674,"ngxCached":true,"title":"Node.js","id":"555e9a77e4b00c57d9955d64"}],"autoPass":false,"rankIndex":0.0002364878714026,"hot":false,"updatedAt":"2019-10-31T10:30:08.636Z","originalUrl":"https://www.ibm.com/developerworks/cn/web/wa-use-javascript-closures-efficiently/index.html","verifyCreatedAt":"2017-10-12T10:13:38.920Z","createdAt":"2017-10-12T10:13:38.920Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/aS7TVkJuJzleC4ZCPQM0hJCUAAP1YiaSicQYSvteHhH7U1gqzENyMA9kAeSribFYtnhCuU5lJ3uYMTy4S87jAqryQ/132"}},"collectedEntriesCount":1121,"company":"掘金","followersCount":11940,"followeesCount":1750,"role":"guest","postedPostsCount":45,"level":4,"isAuthor":true,"postedEntriesCount":302,"totalCommentsCount":1732,"ngxCachedTime":1572571625,"ngxCached":true,"viewedEntriesCount":19437,"jobTitle":"膜法师一等","subscribedTagsCount":78,"totalCollectionsCount":26269,"username":"膜法小编","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/15/160584314593c258?w=285&h=285&f=png&s=80381","objectId":"56fa9a7c2db6ce00478e6bda"},"author":"","screenshot":null,"original":false,"hotIndex":570.026,"content":"在 Node.js 中，广泛采用不同形式的闭包来支持 Node 的异步和事件驱动编程模型。通过很好地理解闭包，您可以确保所开发应用程序的功能正确性、稳定性和可伸缩性。","title":"高效使用 JavaScript 闭包","lastCommentTime":"2019-03-11T14:33:53.283Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":5248,"summaryInfo":"在 Node.js 中，广泛采用不同形式的闭包来支持 Node 的异步和事件驱动编程模型。通过很好地理解闭包，您可以确保所开发应用程序的功能正确性、稳定性和可伸缩性。 闭包是一种将数据与处理数据的代码相关联的自然方式，它使用 作为主要的语义风格。使用闭包时，您在一个封闭范围内定义的数据源可供该范围...","isCollected":false},{"collectionCount":249,"commentsCount":76,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571627,"updatedAt":"2019-10-31T07:51:46.082Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"5979b7016fb9a03c6209d631","rankIndex":0.00021009702697663,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5979b5755188253df1067397","buildTime":1572508306.0983,"createdAt":"2017-07-27T09:48:49.382Z","user":{"community":{"github":{"username":"lucefer","avatarLarge":"https://avatars1.githubusercontent.com/u/17608569?v=4","uid":"17608569"}},"collectedEntriesCount":762,"company":"Alifafa","followersCount":1248,"followeesCount":23,"role":"editor","postedPostsCount":13,"level":3,"isAuthor":true,"postedEntriesCount":1,"totalCommentsCount":162,"ngxCachedTime":1572571583,"ngxCached":true,"viewedEntriesCount":5169,"jobTitle":"软件工程师","subscribedTagsCount":28,"totalCollectionsCount":4230,"username":"lucefer","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/14/1697bf1c8f8bdbb1?w=1233&h=1209&f=png&s=857395","objectId":"589d28ce86b599006b2c0c63"},"author":"","screenshot":"","original":true,"hotIndex":586.3752,"content":" 文章备份地址点这里 闭包，是javascript的一大理解难点，网上关于闭包的文章也很多，但是很少有能让人看了就彻底明白的文章。究其原因，我想是因为闭包涉及了一连串的知识点。只有把这一连串的知识点都理解透彻，实现一个概念的闭环，才可以真正理解它。今天打算换个角度来理解闭包，从内…","title":"浏览器是怎么看闭包的。","lastCommentTime":"2019-10-21T14:30:36.782Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":5224,"summaryInfo":"闭包，是javascript的一大理解难点，网上关于闭包的文章也很多，但是很少有能让人看了就彻底明白的文章。究其原因，我想是因为闭包涉及了一连串的知识点。只有把这一连串的知识点都理解透彻，实现一个概念的闭环，才可以真正理解它。今天打算换个角度来理解闭包，从内存分配与回收的角度阐述，希望能帮助你真正...","isCollected":false},{"collectionCount":198,"isEvent":false,"commentsCount":24,"gfw":false,"buildTime":1572523832.8055,"checkStatus":true,"objectId":"5cabe2455188251b070f6aef","entryView":"","subscribersCount":0,"ngxCachedTime":1572571731,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-31T12:10:32.788Z","rankIndex":0.0016417431178912,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cabde85e51d456e6e3891e0","verifyCreatedAt":"2019-04-09T00:34:51.294Z","createdAt":"2019-04-09T00:34:51.294Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoZt3obx4ELNaCDuvY2UbR62xrwicDRAQmiaG0vN1fB63vQybh7Vypn536DicIRCTEJxQDzYac66SuNQ/132"}},"collectedEntriesCount":107,"company":"金金金","followersCount":112,"followeesCount":25,"role":"guest","postedPostsCount":4,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":28,"ngxCachedTime":1572571731,"viewedEntriesCount":1502,"jobTitle":"前端工程师","subscribedTagsCount":9,"totalCollectionsCount":301,"username":"lionel爱学习","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0936854b2c6ef62","objectId":"5b7562b651882533222a457d"},"author":"","screenshot":"","original":true,"hotIndex":568.746,"content":"最近忙着公司的项目，没有时间去继续面试受虐，只抽空读了一遍《javascript 忍者秘籍》。 今天晚上有点焦虑失眠，就干脆写一篇自己总结的闭包知识。 内容基本全部来自忍者秘籍，觉得写的好的话，可以仔细再看一遍书；觉得写的不好的，可能是因为我理解不到位，导致文中自己思考的地方出…","title":"为了前端的深度-闭包概念与应用","lastCommentTime":"2019-04-11T10:44:31.818Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":6918,"summaryInfo":"定义：闭包可以让一个函数访问并操作其声明时的作用域中的变量和函数，并且，即使声明时的作用域消失了，也可以调用 最近忙着公司的项目，没有时间去继续面试受虐，只抽空读了一遍《javascript 忍者秘籍》。 今天晚上有点焦虑失眠，就干脆写一篇自己总结的闭包知识。 内容基本全部来自忍者秘籍，觉得写的好...","isCollected":false},{"collectionCount":189,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571739,"updatedAt":"2019-10-31T03:19:50.778Z","tags":[{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"596c407d6fb9a06ba2688bcb","rankIndex":0.00012629085889727,"hot":false,"autoPass":false,"originalUrl":"https://zhuanlan.zhihu.com/p/27857268","buildTime":1572491990.798,"createdAt":"2017-07-17T05:51:50.430Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erkZYnpDuNBg6MeMmh1hEibeb9oYdppIjnmwdwA3vkkiczp5yZ2gLtiaYUxmlAGT70JAyKofwbNp8siaw/132"},"github":{"username":"xx19941215","avatarLarge":"https://avatars0.githubusercontent.com/u/10104328?v=4","uid":"10104328"}},"collectedEntriesCount":39,"company":"","followersCount":3021,"followeesCount":22,"role":"editor","postedPostsCount":23,"level":3,"isAuthor":true,"postedEntriesCount":8,"totalCommentsCount":55,"ngxCachedTime":1572571620,"ngxCached":true,"viewedEntriesCount":639,"jobTitle":"Web开发","subscribedTagsCount":26,"totalCollectionsCount":1665,"username":"萧潇","avatarLarge":"https://user-gold-cdn.xitu.io/2018/9/16/165dff14331e077a?w=245&h=245&f=jpeg&s=49114","objectId":"596c3f7a5188252a092fa9fc"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/7/17/212ba830a58c54a4359c01ad27fe2192","original":true,"hotIndex":358.8793,"content":"一篇很赞的Javascript闭包特点分析文章","title":"图解JS闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":3381,"summaryInfo":"","isCollected":false},{"collectionCount":186,"commentsCount":5,"gfw":false,"objectId":"59db3f68f265da43294cfe61","checkStatus":true,"buildTime":1572512942.3734,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571736,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571722,"ngxCached":true,"title":"安全","id":"5597a500e4b08a686ce5efc3"},{"ngxCachedTime":1572571684,"ngxCached":true,"title":"程序员","id":"55c1748160b28fd99e49ea68"}],"autoPass":false,"rankIndex":0.00017598550321266,"hot":false,"updatedAt":"2019-10-31T09:09:02.346Z","originalUrl":"https://my.oschina.net/u/3693769/blog/1544436","verifyCreatedAt":"2017-10-09T09:20:40.735Z","createdAt":"2017-10-09T09:20:40.735Z","user":{"community":null,"collectedEntriesCount":1191,"company":"","followersCount":15095,"followeesCount":145,"role":"editor","postedPostsCount":20,"level":3,"isAuthor":true,"postedEntriesCount":403,"totalCommentsCount":1498,"ngxCachedTime":1572571629,"ngxCached":true,"viewedEntriesCount":25097,"jobTitle":"","subscribedTagsCount":46,"totalCollectionsCount":21907,"username":"已禁用","avatarLarge":"https://user-gold-cdn.xitu.io/2019/1/7/168241351ef02be9?w=160&h=160&f=jpeg&s=1027","objectId":"59a7a5a96fb9a02487554b86"},"author":"","screenshot":null,"original":false,"hotIndex":426.7265,"content":"关于 JavaScript 闭包的东西已经被写烂了，但是这一篇写得简单且不「掉书袋」。","title":"JavaScript 闭包","lastCommentTime":"2018-05-23T07:25:28.621Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":4706,"summaryInfo":"JavaScript的闭包是一个特色。官方解释是：闭包是一个拥有许多变量和绑定了这些变量的环境的表达式（通常是一个函数），因而这些变量也是该表达式的一部分。这句话相信有许多人看不懂。我来表述一下我对JavaScript闭包的理解： add()的返回值是一个函数，首先第一次调用s()的时候，是执行a...","isCollected":false},{"collectionCount":184,"isEvent":false,"commentsCount":36,"gfw":false,"buildTime":1572524327.0013,"checkStatus":true,"objectId":"5c490802f265da61290a7e27","entryView":"","subscribersCount":0,"ngxCachedTime":1572571731,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-31T12:18:46.984Z","rankIndex":0.0010922861698607,"hot":false,"autoPass":true,"originalUrl":"https://juejin.im/post/5c4907ce6fb9a049ee80ce47","verifyCreatedAt":"2019-01-24T00:34:10.345Z","createdAt":"2019-01-24T00:34:10.345Z","user":{"community":{"github":{"username":"yygmind","avatarLarge":"https://avatars0.githubusercontent.com/u/18049290?v=4","uid":"18049290"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq9pa0CKXV7he92fIgiciaH6tibnq9Licjj1UoeG2hNNjQicI1kt8gCvKywBJpicyR7p3gDplVFmEHW0dCQ/132"}},"collectedEntriesCount":110,"company":"前网易","followersCount":23751,"followeesCount":19,"role":"editor","postedPostsCount":43,"level":6,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":791,"ngxCachedTime":1572571637,"ngxCached":true,"viewedEntriesCount":4116,"jobTitle":"资深前端开发","subscribedTagsCount":20,"totalCollectionsCount":14959,"username":"木易杨说","avatarLarge":"https://user-gold-cdn.xitu.io/2018/10/19/16689e2bb057f60d?w=400&h=400&f=jpeg&s=16335","objectId":"56dea4aa7664bf00559f002d"},"author":"","screenshot":"","original":true,"hotIndex":603.4267,"content":"JavaScript语言是“动态”或“解释执行”语言，但事实上是一门编译语言。但它不是提前编译的，编译结果也不能在分布式系统中移植。 传统编译语言流程中，程序在执行之前会经历三个步骤，统称为“编译”。 将由字符组成的字符串分解成（对编程语言来说）有意义的代码块。 上面这段程序会…","title":"精华提炼「你不知道的 JavaScript」之作用域和闭包","lastCommentTime":"2019-02-03T11:32:57.645Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":7649,"summaryInfo":"JavaScript语言是“动态”或“解释执行”语言，但事实上是一门编译语言。但它不是提前编译的，编译结果也不能在分布式系统中移植。 传统编译语言流程中，程序在执行之前会经历三个步骤，统称为“编译”。 1.2.3 LHS和RHS查询 和分别代表一个赋值操作的左侧和右侧，当变量出现在赋值操作的左侧时...","isCollected":false},{"collectionCount":181,"commentsCount":5,"gfw":false,"objectId":"5a03efaa51882554b836fe34","checkStatus":true,"buildTime":1572494356.5006,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571744,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571683,"ngxCached":true,"title":"Node.js","id":"555e9a77e4b00c57d9955d64"},{"ngxCachedTime":1572571627,"ngxCached":true,"title":"微信","id":"55b9036700b0cecc83240cb7"}],"autoPass":true,"rankIndex":0.00012639929666383,"hot":false,"updatedAt":"2019-10-31T03:59:16.482Z","originalUrl":"http://www.cnblogs.com/okaychen/p/7806739.html","verifyCreatedAt":"2017-11-09T08:49:40.422Z","createdAt":"2017-11-09T08:49:40.422Z","user":{"community":{"github":{"username":"okaychen","avatarLarge":"https://avatars1.githubusercontent.com/u/32173521?v=4","uid":"32173521"},"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2RVOn3b3wuibL6fMhJfJZguO1b7IpKmyLmEbQ552H4vIWETuIbibdicf7FoS8SlsSZ6h41afuOCQxQ/0"}},"collectedEntriesCount":109,"company":"百度","followersCount":600,"followeesCount":25,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":10,"ngxCachedTime":1572571631,"ngxCached":true,"viewedEntriesCount":821,"jobTitle":"前端","subscribedTagsCount":65,"totalCollectionsCount":430,"username":"OkayChen","avatarLarge":"https://user-gold-cdn.xitu.io/2018/10/10/1665ba2685ca2159?w=748&h=728&f=png&s=502563","objectId":"59e3efdf6fb9a0451a756b78"},"author":"","screenshot":null,"original":false,"hotIndex":287.6205,"content":"同步，异步，回调，我们傻傻分不清楚，\n有一天，你找到公司刚来的程序员小T，跟他说：“我们要加个需求，你放下手里的事情优先支持，我会一直等你做完再离开”。小T微笑着答应了，眼角却滑过一丝不易觉察的杀意。\n世界上的所有事情大致可以分为同步去做和异步去做两种。你打电话去订酒店，电话另…","title":"JavaScrip同步、异步、回调执行顺序之经典闭包setTimeout分析","lastCommentTime":"2017-11-10T22:12:13.501Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":2023,"summaryInfo":"同步，异步，回调，我们傻傻分不清楚， 有一天，你找到公司刚来的程序员小T，跟他说：“我们要加个需求，你放下手里的事情优先支持，我会一直等你做完再离开”。小T微笑着答应了，眼角却滑过一丝不易觉察的杀意。 世界上的所有事情大致可以分为同步去做和异步去做两种。你打电话去订酒店，电话另一边的工作人员需要查...","isCollected":false},{"collectionCount":180,"isEvent":false,"commentsCount":21,"gfw":false,"buildTime":1572520235.7543,"checkStatus":true,"objectId":"5c50ffc8f265da616b1115c4","entryView":"","subscribersCount":0,"ngxCachedTime":1572571731,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-31T11:10:35.735Z","rankIndex":0.001114146326085,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c4e6a90e51d4552266576d2","verifyCreatedAt":"2019-01-30T02:15:45.712Z","createdAt":"2019-01-30T02:15:45.712Z","user":{"community":{"weibo":{"selfDescription":"","uid":"1851763907","blogAddress":"http://weibo.com/u/1851763907","username":"拾雪在海边","avatarLarge":"https://tvax1.sinaimg.cn/default/images/default_avatar_male_180.gif?KID=imgbed,tva&Expires=1566980318&ssig=szGFO0hCXa"}},"collectedEntriesCount":137,"company":"","followersCount":37,"followeesCount":50,"role":"guest","postedPostsCount":2,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":29,"ngxCachedTime":1572571731,"viewedEntriesCount":1970,"jobTitle":"","subscribedTagsCount":94,"totalCollectionsCount":236,"username":"拾雪儿在海边","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/e761c2bd69409613d4222d2884275b5b","objectId":"5656939c00b0bf3785d3e8ff"},"author":"","screenshot":"","original":true,"hotIndex":595.4788,"content":"闭包是一个可以访问外部作用域的内部函数，即使这个外部作用域已经执行结束。 作用域决定这个变量的生命周期及其可见性。 当我们创建了一个函数或者 {} 块，就会生成一个新的作用域。需要注意的是，通过 var 创建的变量只有函数作用域，而通过 let 和 const 创建的变量既有函…","title":"[译]发现 JavaScript 中闭包的强大威力","lastCommentTime":"2019-02-15T11:29:11.910Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":7875,"summaryInfo":"闭包是一个可以访问外部作用域的内部函数，即使这个外部作用域已经执行结束。 作用域决定这个变量的生命周期及其可见性。当我们创建了一个函数或者 块，就会生成一个新的作用域。需要注意的是，通过 创建的变量只有函数作用域，而通过 和 创建的变量既有函数作用域，也有块作用域。 在 中函数里面可以嵌套函数，如...","isCollected":false},{"collectionCount":179,"commentsCount":17,"gfw":false,"objectId":"5a3e53966fb9a045204c6e32","checkStatus":true,"buildTime":1572445539.2039,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571631,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"autoPass":true,"rankIndex":0.000155305866887,"hot":false,"updatedAt":"2019-10-30T14:25:39.186Z","originalUrl":"https://juejin.im/post/5a3e3cfdf265da431e16f802","verifyCreatedAt":"2017-12-25T06:31:48.575Z","createdAt":"2017-12-25T06:31:48.575Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/jA97yib7VetWhH9CJVNLpQZz3yjrRQwE7ajgobBXYXpjo8kwb5vgT8uR1p0sibso1b0VuZaxgIibiagyFndlPJusKg/132"}},"collectedEntriesCount":142,"company":"好未来","followersCount":16,"followeesCount":35,"role":"guest","postedPostsCount":6,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":5,"ngxCachedTime":1572571631,"viewedEntriesCount":1113,"jobTitle":"前端工程师","subscribedTagsCount":30,"totalCollectionsCount":191,"username":"westlife","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/16/1605e00a945885ed?w=640&h=640&f=jpeg&s=28523","objectId":"595baf53f265da6c2518dcd3"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/12/23/1608337c4616a19c?w=512&h=512&f=jpeg&s=12504","original":false,"hotIndex":319.7811,"content":"今天我来说下我所理解的闭包。 首先闭包产生地条件：有两个。 2.变量在外面那个函数声明，在里面呢个函数调用。 是不是很神奇，就用了一个变量i。本来变量i for循环了就变成9（因为事件会产生异步）；嘿嘿嘿嘿....利用闭包，巧妙了实现了i值得再次利用 就这样写出来了。利用匿名函…","title":"浅谈闭包和异步","lastCommentTime":"2018-02-02T22:36:49.220Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":2472,"summaryInfo":"引言-----你知道嫦娥为什么那么善变吗？？？ 因为chang er啊，哈哈哈哈！ 2.变量在外面那个函数声明，在里面呢个函数调用。 这就是一个简单的闭包，在浏览器调试器下可以看到分别打印了 11 12； 大家记得做tab选项卡是怎么做的吗？恩，对，应该很多人都会做，无非就是找按钮的下标，找内容区...","isCollected":false},{"collectionCount":177,"autoPass":true,"commentsCount":9,"gfw":false,"buildTime":1572559110.7501,"checkStatus":true,"objectId":"5afb0b5b51882542c832e8cc","entryView":"","subscribersCount":0,"ngxCachedTime":1572571734,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571725,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"}],"isEvent":false,"rankIndex":0.00031092223909393,"hot":false,"updatedAt":"2019-10-31T21:58:30.731Z","originalUrl":"https://juejin.im/post/5afb0ae56fb9a07aa2138425","verifyCreatedAt":"2018-05-15T16:31:23.251Z","createdAt":"2018-05-15T16:31:23.251Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKgrcbDrMyBCG6vxECP7hQH7Iw5WA3ibsJjvlOXY7qGY2L8apE71M2ibXv69HPvlBQRu0Vo2X1Hic7g/132"}},"collectedEntriesCount":293,"company":"","followersCount":599,"followeesCount":17,"role":"editor","postedPostsCount":4,"level":3,"isAuthor":true,"postedEntriesCount":11,"totalCommentsCount":52,"ngxCachedTime":1572571634,"ngxCached":true,"viewedEntriesCount":2820,"jobTitle":"一个爱学习的前端程序员。","subscribedTagsCount":74,"totalCollectionsCount":2045,"username":"lce_shou","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/9bbd2572fb8bc98df074a515fa2181ef","objectId":"57ccbfab165abd0068f2e8db"},"author":"","screenshot":"","original":true,"hotIndex":451.4487,"content":"这两天刚好和朋友讨论到闭包，这个JavaScript中的“神兽”，很多同学会觉得闭包这玩意太闹心了，怎么着都理解不了...其实刚接触JavaScript的时候我也是这样的。 但是呢，闭包却非常重要！非常重要！非常重要！ 在《你不知道的JavaScript》中甚至这样写道“对于那…","title":"深入理解闭包之前置知识→作用域与词法作用域","lastCommentTime":"2019-03-26T17:37:26.497Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":5293,"summaryInfo":"这两天刚好和朋友讨论到闭包，这个JavaScript中的“神兽”，很多同学会觉得闭包这玩意太闹心了，怎么着都理解不了...其实刚接触JavaScript的时候我也是这样的。 但是呢，闭包却非常重要！非常重要！非常重要！ 在《你不知道的JavaScript》中甚至这样写道“对于那些有一点 JAVAS...","isCollected":false},{"collectionCount":173,"commentsCount":6,"gfw":false,"entryView":"58500a23ac502e00693c3159","subscribersCount":4,"ngxCachedTime":1572571741,"updatedAt":"2019-10-31T14:26:03.857Z","tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58500a21128fe10069319e4f","rankIndex":0.000084162583559918,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/58500a02128fe10069319d83","buildTime":1572531963.8733,"createdAt":"2016-12-13T14:48:01.738Z","user":{"community":{"weibo":{"selfDescription":"阿里影业开发专家，熟悉 Java、.NET、前端 技术栈，微信公众号「劼哥舍」、知识星球「劼哥每日分享」。","uid":"1760390531","blogAddress":"http://weibo.com/605494869","username":"劼哥stone","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.230.230.180/68ed6d83jw8f9tb21rgdrj206f06fgm4.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/e2wPCUDXuVOian5kP0wFt9Y6n2vzCqM3VLZf2WEDxTBjh5ib2kvrXjibkGicBlx39YDHvEpCkHMVnicYJbCaqDDkb8Q/132"},"github":{"uid":"1546345","bio":"no pain, no gain.","avatar_url":"https://avatars.githubusercontent.com/u/1546345?v=3","username":"stone0090","nickname":"stone","html_url":"https://github.com/stone0090"}},"collectedEntriesCount":54,"company":"阿里影业","followersCount":3125,"followeesCount":0,"role":"editor","postedPostsCount":24,"level":3,"isAuthor":true,"postedEntriesCount":8,"totalCommentsCount":95,"ngxCachedTime":1572571698,"ngxCached":true,"viewedEntriesCount":328,"jobTitle":"开发专家","subscribedTagsCount":9,"totalCollectionsCount":3659,"username":"劼哥stone","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/890e8c0215457a0c341649142c5ab836","objectId":"57b83a6fa633bd0066590d37"},"author":"","screenshot":"","original":true,"hotIndex":337.6571,"content":"作用域和闭包是 JavaScript 最重要的概念之一，想要进一步学习 JavaScript，就必须理解 JavaScript 作用域和闭包的工作原理。 作用域 任何程序设计语言都有作用域的概念，简单的说，作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命…","title":"《JavaScript 闯关记》之作用域和闭包","lastCommentTime":"2016-12-14T14:41:24.614Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":3155,"summaryInfo":"作用域和闭包是 JavaScript 最重要的概念之一，想要进一步学习 JavaScript，就必须理解 JavaScript 作用域和闭包的工作原理。 任何程序设计语言都有作用域的概念，简单的说，作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命周期。在 JavaScrip...","isCollected":false},{"collectionCount":168,"isEvent":false,"commentsCount":58,"gfw":false,"buildTime":1572447989.8115,"checkStatus":true,"objectId":"5c243648e51d4574bd7fa904","entryView":"","subscribersCount":0,"ngxCachedTime":1572571627,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T15:06:29.794Z","rankIndex":0.0010886383747437,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c22f13b5188252b56273a00","verifyCreatedAt":"2018-12-27T04:05:54.015Z","createdAt":"2018-12-27T04:05:54.015Z","user":{"community":{"weibo":{"selfDescription":"No man is an islang!No one is coming","uid":"5445408294","blogAddress":"http://weibo.com/u/5445408294","username":"Yo_Pai","avatarLarge":"http://tvax3.sinaimg.cn/crop.0.0.996.996.180/005Wwns2ly8ffz65jqgihj30ro0roq49.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGtG01ksyBtjJqJGLfniaW2FAtsUgreFlByPfek2aibYiaAu75uj9l2vsyEQhOHymYeeD3iamjBCia7yg/132"},"github":{"username":"HerryLo","avatarLarge":"https://avatars2.githubusercontent.com/u/20215975?v=4","uid":"20215975"}},"collectedEntriesCount":49,"company":"一条视频","followersCount":97,"followeesCount":23,"role":"guest","postedPostsCount":15,"level":2,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":82,"ngxCachedTime":1572571610,"ngxCached":true,"viewedEntriesCount":1322,"jobTitle":"前端","subscribedTagsCount":28,"totalCollectionsCount":416,"username":"HerryLo","avatarLarge":"https://user-gold-cdn.xitu.io/2019/1/17/1685a8d604972a7e?w=1600&h=1600&f=jpeg&s=267841","objectId":"5b3ec4e9e51d4519162e2779"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/12/26/167e8816c8556e21?w=1920&h=1080&f=jpeg&s=376106","original":true,"hotIndex":690.1906,"content":"原文永久链接： https://github.com/AttemptWeb/Record... 尴尬了，遇到了一个闭包的问题，然后我说错了答案，装逼失败了，之前我以为自己完全理解了闭包，现在发现其实并没有,赶紧翻书找答案-ing。 发现打印的都是3，原因是匿名函数中的i共享了同…","title":"闭包装逼失败(闭包使用)","lastCommentTime":"2019-01-01T22:44:35.134Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":9268,"summaryInfo":"      尴尬了，遇到了一个闭包的问题，然后我说错了答案，装逼失败了，之前我以为自己完全理解了闭包，现在发现其实并没有,赶紧翻书找答案-ing。 看下面的代码，在循环中向数组导入函数, 希望可以打印  : 发现打印的都是3，原因是匿名函数中的共享了同一个词法作用域 。当变量数组调用匿名函数时, ...","isCollected":false},{"collectionCount":164,"commentsCount":0,"gfw":false,"objectId":"59f32c64f265da43346f2a8f","checkStatus":true,"buildTime":1572508534.4713,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571749,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571631,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571733,"ngxCached":true,"title":"API","id":"55979f27e4b08a686ce550a6"}],"autoPass":false,"rankIndex":0.00010244670233467,"hot":false,"updatedAt":"2019-10-31T07:55:34.455Z","originalUrl":"http://www.zcfy.cc/article/2127","verifyCreatedAt":"2017-10-27T15:29:41.927Z","createdAt":"2017-10-27T15:29:41.927Z","user":{"community":{"weibo":{"selfDescription":"博观而约取,厚积而薄发!","uid":"6355570295","blogAddress":"http://weibo.com/u/6355570295","username":"前端-小小坤","avatarLarge":"http://tvax4.sinaimg.cn/crop.8.0.496.496.180/006W7kajly8fjd2icghk8j30e80dsglo.jpg"},"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmopen/vi_32/TwxlqXMMdiaavtiasYqJPWll6NHEoPaDYhKuL54rSpdjorm24t8Hib7DWE9asFydsbaV8D0N41jXlrWdnAMfHcrRQ/132"}},"collectedEntriesCount":159,"company":"小公司","followersCount":2222,"followeesCount":51,"role":"guest","postedPostsCount":27,"level":3,"isAuthor":false,"postedEntriesCount":17,"totalCommentsCount":127,"ngxCachedTime":1572571749,"viewedEntriesCount":1566,"jobTitle":"研发攻城狮","subscribedTagsCount":31,"totalCollectionsCount":3130,"username":"小小坤","avatarLarge":"https://user-gold-cdn.xitu.io/2017/9/17/25de9701ed8a66ecc4301f62f24d177a","objectId":"5850d3d661ff4b00683b7c34"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/10/27/fab281d644302391e160bcef9b85e688","original":false,"hotIndex":239.3955,"content":"“征服 JavaScript 面试”是我写的一系列文章，来帮助面试者准备他们在面试 JavaScript 中、高级职位中将可能会遇到的一些问题。这些问题我自己在面试中也经常会问。\n在我面试时问出的一系列问题里，闭包通常是我问的第一个或最后一个问题。坦白地说，如果你连闭包也弄不明…","title":"征服 JavaScript 面试：什么是闭包？| Eric Elliott","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":1499,"summaryInfo":"“征服 JavaScript 面试”是我写的一系列文章，来帮助面试者准备他们在面试 JavaScript 中、高级职位中将可能会遇到的一些问题。这些问题我自己在面试中也经常会问。 在我面试时问出的一系列问题里，闭包通常是我问的第一个或最后一个问题。坦白地说，如果你连闭包也弄不明白，你是不会在 Ja...","isCollected":false},{"collectionCount":157,"commentsCount":4,"gfw":false,"entryView":"5815ba0867f3560058611e4f","subscribersCount":4,"ngxCachedTime":1572571632,"updatedAt":"2019-10-31T09:11:12.553Z","tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58158887128fe100558b7380","rankIndex":0.000060506728427119,"hot":false,"autoPass":false,"originalUrl":"https://yuzmb.github.io/2016/10/29/%E7%90%86%E8%A7%A3JavaScript---%E9%97%AD%E5%8C%85/","buildTime":1572513072.5944,"createdAt":"2016-10-30T05:43:35.125Z","user":{"community":{"github":{"uid":"13777514","nickname":"韦志豪","username":"yuzmb","avatar_url":"https://avatars2.githubusercontent.com/u/13777514?v=3","bio":null,"html_url":"https://github.com/yuzmb"}},"collectedEntriesCount":24,"company":"东莞理工学院","followersCount":11,"followeesCount":5,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":24,"ngxCachedTime":1572571632,"viewedEntriesCount":196,"jobTitle":"学生","subscribedTagsCount":44,"totalCollectionsCount":534,"username":"yuzmb","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0830ff09c3ef72b","objectId":"57d14cf5a0bb9f0057c75a94"},"author":"","screenshot":"","original":false,"hotIndex":258.1944,"content":"帮助理解闭包","title":"深刻理解 JavaScript--- 闭包","lastCommentTime":"2017-05-02T01:49:35.834Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":1932,"summaryInfo":"闭包是指那些能够访问独立(自由)变量的函数 (变量在本地使用，但定义在一个封闭的作用域中)。换句话说，这些函数可以“记忆”它被创建时候的环境。——这句话其实有点难以理解。我觉得应该用一些例子来理解闭包的含义。 这个函数含有一个局部变量b，它在全局空间里面是不可见的。而f()的返回值是另一个匿名函数...","isCollected":false},{"collectionCount":154,"commentsCount":3,"gfw":false,"entryView":"56cff9a5128fe10053ead462","subscribersCount":0,"ngxCachedTime":1572571631,"updatedAt":"2019-10-26T03:33:59.254Z","tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"56cfe850c507b600507cf6c9","rankIndex":0.000053657109947,"hot":false,"autoPass":false,"originalUrl":"http://www.html-js.com/article/JavaScriptxuexibiji-%203440","buildTime":1572060839.2723,"createdAt":"2016-02-26T05:53:20.207Z","user":{"community":{"weibo":{"selfDescription":"杭州大搜车无线架构部负责人","uid":"1717808700","blogAddress":"http://weibo.com/676588498","username":"小芋头君","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.2048.2048.180/6663ae3cjw1e7hdr0s5i5j21kw1kw7ss.jpg"}},"collectedEntriesCount":33,"company":"大搜车","followersCount":7055,"followeesCount":11,"role":"editor","postedPostsCount":19,"level":3,"isAuthor":true,"postedEntriesCount":37,"totalCommentsCount":394,"ngxCachedTime":1572571631,"viewedEntriesCount":444,"jobTitle":"资深技术专家","subscribedTagsCount":3,"totalCollectionsCount":5412,"username":"小芋头君","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/eebf305063749b7d30172df78331b157","objectId":"5589432fe4b0416bdfc8fe60"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/8354aa8dfab7f38d798f.jpg","original":false,"hotIndex":308.7461,"content":"JavaScript虽是一门面向对象的编程语言，但同时也有许多函数式编程的特性，如Lambda表达式，闭包，高阶函数等。","title":"JavaScript 之闭包与高阶函数（一）","lastCommentTime":"2019-02-18T17:11:33.587Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":3030,"summaryInfo":"JavaScript虽是一门面向对象的编程语言，但同时也有许多函数式编程的特性，如Lambda表达式，闭包，高阶函数等。 何谓闭包？对于闭包众位各有己见，今我试说之，闭包，常指有权访问其外部作用域中变量和参数的函数。最常见的就是在某函数内部创建另一个函数。如： 闭包其实并不是很好阐述，与我而言，自...","isCollected":false},{"collectionCount":152,"commentsCount":26,"gfw":false,"entryView":"59015d1e8d6d810058b64a76","subscribersCount":7,"ngxCachedTime":1572571731,"updatedAt":"2019-10-31T09:03:55.109Z","tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"59015d1e5c497d00581fc178","rankIndex":0.00018126421888041,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/590159d8a22b9d0065c2d918","buildTime":1572512635.1264,"createdAt":"2017-04-27T02:53:18.855Z","user":{"community":{"github":{"username":"mqyqingfeng","avatarLarge":"https://avatars3.githubusercontent.com/u/11458263?v=4","uid":"11458263"}},"collectedEntriesCount":114,"company":"","followersCount":19310,"followeesCount":13,"role":"editor","postedPostsCount":64,"level":5,"isAuthor":true,"postedEntriesCount":5,"totalCommentsCount":906,"ngxCachedTime":1572571612,"ngxCached":true,"viewedEntriesCount":8724,"jobTitle":"前端","subscribedTagsCount":7,"totalCollectionsCount":13277,"username":"冴羽","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e084832fd5ec238f","objectId":"58e4b9b261ff4b006b3227f4"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/244924557fd49aabf513.jpg","original":true,"hotIndex":592.1004,"content":"JavaScript深入系列第八篇，介绍理论上的闭包和实践上的闭包，以及从作用域链的角度解析经典的闭包题。 定义 MDN 对闭包的定义为： 闭包是指那些能够访问自由变量的函数。 那什么是自由变量呢？ 自由变量是指在函数中使用的，但既不是函数参数也不是函数的局部变量的变量。 由此…","title":"JavaScript深入之闭包","lastCommentTime":"2019-08-17T11:33:04.038Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":8280,"summaryInfo":"由此，我们可以看出闭包共有两部分组成： foo 函数可以访问变量 a，但是 a 既不是 foo 函数的局部变量，也不是 foo 函数的参数，所以 a 就是自由变量。 那么，函数 foo + foo 函数访问的自由变量 a 不就是构成了一个闭包嘛…… 所以在《JavaScript权威指南》中就讲到：...","isCollected":false},{"collectionCount":151,"commentsCount":2,"gfw":false,"entryView":"","subscribersCount":3,"ngxCachedTime":1572571633,"updatedAt":"2019-10-27T09:21:21.919Z","tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"581efc505bbb500059e6ce24","rankIndex":0.000055033486125005,"hot":false,"autoPass":false,"originalUrl":"https://i-solar.github.io/2016/11/05/%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%97%AD%E5%8C%85%EF%BC%8C%E4%BD%A0%E7%9C%9F%E7%9A%84%E6%87%82%E4%BA%86%E5%90%97%EF%BC%9F-JavaScript/","buildTime":1572168081.9358,"createdAt":"2016-11-06T09:48:00.434Z","user":{"community":{"github":{"username":"vabaly","avatarLarge":"https://avatars2.githubusercontent.com/u/11691664?v=4","uid":"11691664"}},"collectedEntriesCount":34,"company":"腾讯","followersCount":12,"followeesCount":5,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":3,"ngxCachedTime":1572571633,"viewedEntriesCount":796,"jobTitle":"前端工程师","subscribedTagsCount":53,"totalCollectionsCount":192,"username":"vabaly","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/25/16cc6e0617a83cc3?w=2079&h=2599&f=jpeg&s=1765225","objectId":"57fc4381da2f60004fa61944"},"author":"","screenshot":"","original":true,"hotIndex":231.261,"content":"曾几何时，闭包好像就是一个十分难以捉摸透的东西，看了很多文章，对闭包都各有说法，以致让我十分晕，什么内部变量、外部变量的，而且大多数都只描述一个过程，没有给闭包的定义，最后，举几个例子，告诉你这就是闭包。于是乎，我从来都是带有疑问使用闭包的：闭包是指作用域，还是指函数，还是指访问外部变量的过程？还有外部变量有多外面？直到最近的学习，我才渐渐清晰……","title":"作用域闭包，你真的懂了吗？","lastCommentTime":"2016-11-09T08:54:20.421Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":1547,"summaryInfo":"","isCollected":false},{"collectionCount":133,"commentsCount":2,"gfw":false,"entryView":"","subscribersCount":2,"ngxCachedTime":1572571756,"updatedAt":"2019-10-14T12:32:49.912Z","tags":[{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"581f50702f301e005c1fdcba","rankIndex":0.000045417712567264,"hot":false,"autoPass":false,"originalUrl":"http://www.cnblogs.com/xianyulaodi/p/5887937.html","buildTime":1571056369.9287,"createdAt":"2016-11-06T15:46:56.092Z","user":{"community":{"github":{"username":"xianyulaodi","avatarLarge":"https://avatars3.githubusercontent.com/u/11438564?v=4","uid":"11438564"}},"collectedEntriesCount":45,"company":"网易","followersCount":844,"followeesCount":1,"role":"guest","postedPostsCount":6,"level":2,"isAuthor":false,"postedEntriesCount":21,"totalCommentsCount":54,"ngxCachedTime":1572571756,"viewedEntriesCount":1994,"jobTitle":"前端开发工程师","subscribedTagsCount":13,"totalCollectionsCount":2004,"username":"咸鱼老弟","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/ddef816c8bbfd0c37e327d76841cda5d","objectId":"580e222b2e958a005511179d"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/ba4ce537bae2582bd7e4.png","original":true,"hotIndex":187.4035,"content":"闭包在 javascript 来说是比较重要的概念，平时工作中也是用的比较多的一项技术。","title":"理解 javascript 中的闭包","lastCommentTime":"2016-11-13T06:17:15.051Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":1030,"summaryInfo":"","isCollected":false},{"collectionCount":132,"userRankIndex":7.2618800490743,"buildTime":1572565481.9623,"commentsCount":52,"gfw":false,"objectId":"5d5509ca51882529fa61fb25","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571627,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T23:44:41.945Z","rankIndex":0.0099520261818928,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d54b91fe51d45620b21c3a0","verifyCreatedAt":"2019-08-15T09:26:39.721Z","createdAt":"2019-08-15T09:26:39.721Z","user":{"community":{"weibo":{"selfDescription":"你远道而来这世间，想必也是为了热爱吧。","uid":"2771284557","blogAddress":"http://weibo.com/u/2771284557","username":"童欧巴Tongobama","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.0.1080.1080.180/a52e724dly8g0kscaysidj20u00u0dha.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ82biacpiasG3aHVuylLKFdZQRVBicZjebAdRMoYicIzcUgC6eywQZIRkd7OIB5hed9NROQPwA54GwCQ/132"},"github":{"username":"Geekhyt","avatarLarge":"https://avatars2.githubusercontent.com/u/25742988?v=4","uid":"25742988"}},"collectedEntriesCount":22,"company":"","followersCount":91,"followeesCount":92,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":51,"ngxCachedTime":1572571627,"viewedEntriesCount":1051,"jobTitle":"前端工匠师","subscribedTagsCount":91,"totalCollectionsCount":242,"username":"童欧巴","avatarLarge":"https://user-gold-cdn.xitu.io/2019/7/5/16bc27995fc4a050?w=1079&h=1071&f=jpeg&s=107006","objectId":"5a2de8a8f265da4320032fc4"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/8/15/16c93e205e50925b?w=900&h=500&f=png&s=38565","original":true,"hotIndex":793.1912,"content":"撩妹守则第一条，女孩子都喜欢童话故事。 这个故事来自于stackoverflow的一则回答，看不懂没关系，等阅读完本文后，回头再来看这个故事，你会发现你已经完全了解了我的魅力，咳咳@¥%#…………JavaScript中闭包的魅力。 当函数可以记住并访问所在的词法作用域时，就产生…","title":"公司新来的女实习生问我什么是闭包？","lastCommentTime":"2019-09-14T20:52:05.096Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":12165,"summaryInfo":"撩妹守则第一条，女孩子都喜欢童话故事。 这个故事来自于stackoverflow的一则回答，看不懂没关系，等阅读完本文后，回头再来看这个故事，你会发现你已经完全了解了我的魅力，咳咳@¥%#…………中闭包的魅力。 闭包由两部分构成：函数，以及创建该函数的环境。 环境由闭包创建时在作用域中的任何局部变...","isCollected":false},{"collectionCount":131,"commentsCount":13,"gfw":false,"entryView":"590b625bb123db00549e688e","subscribersCount":10,"ngxCachedTime":1572571746,"updatedAt":"2019-10-31T02:04:25.372Z","tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"590b625b0ce46300588cf335","rankIndex":0.000083858373158449,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/59022e730ce463006156fdf3","buildTime":1572487465.3914,"createdAt":"2017-05-04T17:18:19.031Z","user":{"community":{"weibo":{"selfDescription":"种一棵树最好的时间是在十年前,其次就是现在了。","uid":"5468303800","blogAddress":"http://weibo.com/u/5468303800","username":"OBKoro1","avatarLarge":"http://tvax4.sinaimg.cn/crop.24.0.1194.1194.180/005Y4rColy8fm4g2lvey9j30yi0x6gp5.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/qPic9iawDn2EsFybdibyLqo3XibRznQzPoV4T9W9pqaCBKgF7ELibsic721ibrXBBIuvm3C0U8UfsC2wFIymiaGKYz5n8g/132"},"github":{"username":"OBKoro1","avatarLarge":"https://avatars1.githubusercontent.com/u/24698201?v=4","uid":"24698201"}},"collectedEntriesCount":266,"company":"上海","followersCount":15914,"followeesCount":29,"role":"editor","postedPostsCount":71,"level":6,"isAuthor":true,"postedEntriesCount":8,"totalCommentsCount":1037,"ngxCachedTime":1572571660,"ngxCached":true,"viewedEntriesCount":7837,"jobTitle":"前端","subscribedTagsCount":29,"totalCollectionsCount":21077,"username":"OBKoro1","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/22/1607d2bb387d545d?w=1920&h=1080&f=jpeg&s=343675","objectId":"58714f0eb123db4a2eb95372"},"author":"","screenshot":"","original":true,"hotIndex":270.3963,"content":"写在前面： 闭包是被讲烂的内容，但是当我不了解的情况下，看过很多教程，听过很多道理，还是无法完全理解闭包这个东西。所以想要写一篇比较详细，前端小白也能够真正理解闭包概念的干货文章，本文参考很多闭包资料，希望能真正把闭包这个东西讲清楚，喜欢的朋友可以点个赞，或者点波关注。 首先需…","title":"【闭包概念】关于闭包概念不同解读——你可以自己理解。","lastCommentTime":"2018-12-01T13:39:41.814Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":2519,"summaryInfo":"闭包是被讲烂的内容，但是当我不了解的情况下，看过很多教程，听过很多道理，还是无法完全理解闭包这个东西。所以想要写一篇比较详细，前端小白也能够真正理解闭包概念的干货文章，本文参考很多闭包资料，希望能真正把闭包这个东西讲清楚，喜欢的朋友可以点个赞，或者点波关注。 首先需要了解一波JS变量的作用域以及变...","isCollected":false},{"collectionCount":129,"commentsCount":4,"gfw":false,"objectId":"59ffd3bc518825299a469392","checkStatus":true,"buildTime":1572543154.6761,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571631,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"autoPass":false,"rankIndex":0.00012275360425254,"hot":false,"updatedAt":"2019-10-31T17:32:34.519Z","originalUrl":"https://juejin.im/post/59ffd2c86fb9a045055d832f","verifyCreatedAt":"2017-11-06T09:25:52.797Z","createdAt":"2017-11-06T09:25:52.797Z","user":{"community":{"weibo":{"selfDescription":"简单点","uid":"5139293363","blogAddress":"http://weibo.com/u/5139293363","username":"---Nealyang","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.25.1242.1242.180/005BNWYrly8fgr0rq7pxgj30yi0zxmzq.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgs75zBvdRIRs05Tlbb7JtNXcibutOKApmDYOzqLyxkaibJv1T9xq74oLiaiaEFp2P0aO2nShv2AicqJw/132"}},"collectedEntriesCount":373,"company":"全栈前端精选","followersCount":11337,"followeesCount":64,"role":"guest","postedPostsCount":47,"level":5,"isAuthor":false,"postedEntriesCount":10,"totalCommentsCount":651,"ngxCachedTime":1572571571,"ngxCached":true,"viewedEntriesCount":5157,"jobTitle":"公众号","subscribedTagsCount":42,"totalCollectionsCount":11630,"username":"Neal_yang","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/18/1606900c1392ea33?w=2122&h=1406&f=jpeg&s=486693","objectId":"59be059c5188256c6d77cf2e"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/12/26/1609186dc5b01e3d?w=2122&h=1406&f=jpeg&s=486693","original":true,"hotIndex":281.3847,"content":"为什么我们需要理解并且掌握闭包，且不说大道理，就问你要不要成为JavaScript高手？不要？那你要不要面试找工作嘛。。。 再者，对于任何一个前端er或者JavaScript开发者来说，理解闭包可以看做是另一种意义上的重生。闭包是纯函数编程语言的一个特性，因为他大大简化复杂的操…","title":"还担心面试官问闭包？","lastCommentTime":"2017-12-26T14:06:02.653Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":2957,"summaryInfo":"为什么我们需要理解并且掌握闭包，且不说大道理，就问你要不要成为JavaScript高手？不要？那你要不要面试找工作嘛。。。 再者，对于任何一个前端er或者JavaScript开发者来说，理解闭包可以看做是另一种意义上的重生。闭包是纯函数编程语言的一个特性，因为他大大简化复杂的操作，所以很容易在一些...","isCollected":false},{"collectionCount":127,"commentsCount":7,"gfw":false,"entryView":"58b45c3c570c3500697814f0","subscribersCount":5,"ngxCachedTime":1572571633,"updatedAt":"2019-10-30T12:07:25.095Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58b45c348fd9c50063e50d90","rankIndex":0.000065316202033348,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/9b4a54a98660","buildTime":1572437245.1137,"createdAt":"2017-02-27T17:04:52.661Z","user":{"community":{"github":{"username":"yangbo5207","avatarLarge":"https://avatars3.githubusercontent.com/u/13758605?v=4","uid":"13758605"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/zfXNHMZo2ErRIT1HQnFdMGztfE0UP7WKodoOl43IWvCaicqX8eQAUGRQN22XNibicULEAibOMxI4mDUDfveia0zH52A/132"}},"collectedEntriesCount":110,"company":"公号: 梧桐Luo","followersCount":2168,"followeesCount":3,"role":"editor","postedPostsCount":11,"level":3,"isAuthor":true,"postedEntriesCount":17,"totalCommentsCount":314,"ngxCachedTime":1572571626,"ngxCached":true,"viewedEntriesCount":1981,"jobTitle":"大前端实践者","subscribedTagsCount":14,"totalCollectionsCount":5990,"username":"这波能反杀","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/27/16cd165de9836f74?w=400&h=400&f=jpeg&s=31859","objectId":"577a770ea633bd00573520f7"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/288c7161d026ae9fe96e.png","original":false,"hotIndex":233.7408,"content":"不写描述可以不可以？","title":"图例详解那道 setTimeout 与循环闭包的经典面试题","lastCommentTime":"2019-03-08T08:55:33.792Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":1993,"summaryInfo":"我在详细图解作用域链与闭包一文中的结尾留下了一个关于setTimeout与循环闭包的思考题。 值得高兴的是很多朋友在读了文章之后确实对闭包有了更加深刻的了解，并准确的给出了几种写法。一些朋友能够认真的阅读我的文章并且一个例子一个例子的上手练习，这种认可对我而言真的非常感动。但是也有一些基础稍差的朋...","isCollected":false},{"collectionCount":123,"commentsCount":5,"gfw":false,"entryView":"58d0c22c2f301e007e5ac239","subscribersCount":3,"ngxCachedTime":1572571750,"updatedAt":"2019-10-30T07:06:35.584Z","tags":[{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58d0a8c95c497d0057d29cea","rankIndex":0.00006629973487302,"hot":false,"autoPass":false,"originalUrl":"http://www.yaya12.com/archives/525","buildTime":1572419195.6007,"createdAt":"2017-03-21T04:15:05.030Z","user":{"community":null,"collectedEntriesCount":412,"company":"","followersCount":1864,"followeesCount":41,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":12,"totalCommentsCount":34,"ngxCachedTime":1572571652,"ngxCached":true,"viewedEntriesCount":1296,"jobTitle":"前端工程师","subscribedTagsCount":89,"totalCollectionsCount":596,"username":"heyff","avatarLarge":"https://leancloud-gold-cdn.xitu.io/80a8a8a13cbd4dfab4d2.png?imageView/2/w/100/h/100/q/80/format/png","objectId":"582595a90ce4630058bd0c31"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/de9a27cda9e15cddbc49.jpg","original":false,"hotIndex":229.3918,"content":"闭包的形成跟变量的作用域以及变量的生存周期密切先关。","title":"闭包详解","lastCommentTime":"2018-04-16T14:40:07.377Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":2015,"summaryInfo":"闭包的形成跟变量的作用域以及变量的生存周期密切先关。 一、变量的作用域,是指变量的有效范围 当在函数中声明一个变量的时候,如果该变量前面没有带上关键字 var,这个变量就会成为全局变量 ,这当然是一种很容易造成命名冲突的做法。 另外一种情况是用 var 关键字在函数中声明变量,这时候的变量即是局部...","isCollected":false},{"collectionCount":115,"commentsCount":2,"gfw":false,"entryView":"5675467100b01b78ac32566b","subscribersCount":1,"ngxCachedTime":1572571752,"updatedAt":"2019-08-17T05:49:14.982Z","tags":[{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"5674314300b0bf37ccb54a82","rankIndex":0.000037521875934118,"hot":true,"autoPass":false,"originalUrl":"http://web.jobbole.com/84456/","buildTime":1566020954.999,"createdAt":"2015-12-18T16:16:03.305Z","user":{"community":{"weibo":{"selfDescription":"","uid":"1730952453","blogAddress":"http://weibo.com/twoguan","username":"关关_关关","avatarLarge":"http://tva4.sinaimg.cn/crop.1.14.477.477.180/672c3d05gw1ejbjkmdiqoj20dc0hswku.jpg"}},"collectedEntriesCount":465,"company":"","followersCount":608,"followeesCount":0,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":466,"totalCommentsCount":125,"ngxCachedTime":1572571740,"ngxCached":true,"viewedEntriesCount":8,"jobTitle":"","subscribedTagsCount":0,"totalCollectionsCount":15787,"username":"关关_关关","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/ad57d8fb2b458c3fbff8bc60ed5b2861","objectId":"561f297400b07c4da6b7d3bb"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/bd0e3ddbaa1d177aa139.jpg","original":false,"hotIndex":215.8211,"content":"几年前，我还是一名高中生时，我的一个朋友向我讲述了闭包的概念。虽然我当时一点也不明白他想表达的内容，但他在向我讲述时却表现得非常高大上。对于当时的我来说，闭包看来是一个深不可测的魔法。即使 Google 后也不能解除我的疑惑。而所有我能查阅的科技文章，都为高中生所难以理解。","title":"其实闭包并不高深莫测","lastCommentTime":"2018-02-11T19:23:19.264Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":1957,"summaryInfo":"几年前，我还是一名高中生时，我的一个朋友向我讲述了闭包的概念。虽然我当时一点也不明白他想表达的内容，但他在向我讲述时却表现得非常高大上。对于当时的我来说，闭包看来是一个深不可测的魔法。即使 Google 后也不能解除我的疑惑。而所有我能查阅的科技文章，都为高中生所难以理解。 现在的我回想起高中编程...","isCollected":false},{"collectionCount":114,"commentsCount":1,"gfw":false,"entryView":"583fbf0ea22b9d007a824ae7","subscribersCount":1,"ngxCachedTime":1572571758,"updatedAt":"2019-10-29T11:32:54.158Z","tags":[{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"583f9eaa128fe1006c341be0","rankIndex":0.000043438733044141,"hot":false,"autoPass":false,"originalUrl":"https://segmentfault.com/a/1190000007650548","buildTime":1572348774.1754,"createdAt":"2016-12-01T03:53:14.840Z","user":{"community":{"github":{"username":"Val-Zhang","avatarLarge":"https://avatars0.githubusercontent.com/u/15924149?v=4","uid":"15924149"}},"collectedEntriesCount":12,"company":"知乎","followersCount":32,"followeesCount":1,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":6,"totalCommentsCount":2,"ngxCachedTime":1572571758,"viewedEntriesCount":84,"jobTitle":"前端开发工程师","subscribedTagsCount":35,"totalCollectionsCount":250,"username":"zhangwang123","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082e5c63a055c6c","objectId":"57996b787db2a2005a33b76f"},"author":"","screenshot":"","original":false,"hotIndex":176.8488,"content":"JavaScript 的作用域和闭包是一个老生常谈的问题，但是这篇总结文章把这两个讲透了，值得推荐。","title":"弄懂 JavaScript 的作用域和闭包","lastCommentTime":"2016-12-01T07:13:07.495Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":1234,"summaryInfo":"《你不知道的JavaScript》真的是一本好书，阅读这本书，我有多次“哦，原来是这样”的感觉，以前自以为理解了（其实并非真的理解）的概念，这一次真的理解得更加透彻了。关于本书，我会写好几篇读书笔记用以记录那些让我恍然大悟的瞬间，本文是第一篇《弄懂JavaScript的作用域和闭包》。 很久以来我...","isCollected":false},{"collectionCount":113,"commentsCount":1,"gfw":false,"entryView":"584e41c48d6d810054550761","subscribersCount":1,"ngxCachedTime":1572571635,"updatedAt":"2019-10-31T02:06:17.075Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"584d2f19ac502e00692b9ff8","rankIndex":0.000048673160339304,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/d24d014190d1","buildTime":1572487577.0905,"createdAt":"2016-12-11T10:48:57.960Z","user":{"community":null,"collectedEntriesCount":13,"company":" 22世纪火星第三殖民地","followersCount":1812,"followeesCount":6,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":true,"postedEntriesCount":17,"totalCommentsCount":13,"ngxCachedTime":1572571635,"viewedEntriesCount":514,"jobTitle":"高级打杂工程师","subscribedTagsCount":1,"totalCollectionsCount":1066,"username":"tonnie","avatarLarge":"https://leancloud-gold-cdn.xitu.io/2b6b450e1d919ee92640.png?imageView/1/w/100/h/100/q/80/format/png","objectId":"56edfe27816dfa005163043e"},"author":"","screenshot":"","original":false,"hotIndex":195.7351,"content":"JS 中的闭包概念","title":"JS 中的闭包概念","lastCommentTime":"2016-12-11T17:39:21.108Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":1632,"summaryInfo":"像其他大多数动态编程语言一样，js也采用词法作用域，换而言之，函数的执行依赖于变量作用域，这个作用域是在函数定义时决定的，而不是函数调用时决定的。 观察上面这段代码，首先在外层定义了一个名为scope的全局变量，接着定义了一个函数checkscope()，在函数中也定义了一个名为scope的局部变...","isCollected":false},{"collectionCount":110,"autoPass":false,"commentsCount":24,"gfw":false,"buildTime":1572446080.3106,"checkStatus":true,"objectId":"5aca253e5188255c5668b7bb","entryView":"","subscribersCount":0,"ngxCachedTime":1572571743,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571702,"ngxCached":true,"title":"Chrome","id":"555e9ae0e4b00c57d99562ee"},{"ngxCachedTime":1572571633,"ngxCached":true,"title":"GitHub","id":"555e9abee4b00c57d9956152"}],"isEvent":false,"rankIndex":0.00018424153920416,"hot":false,"updatedAt":"2019-10-30T14:34:40.292Z","originalUrl":"https://github.com/prettyEcho/deep-js/issues/4","verifyCreatedAt":"2018-04-10T02:27:00.008Z","createdAt":"2018-04-10T02:27:00.008Z","user":{"community":{"github":{"username":"prettyEcho","avatarLarge":"https://avatars1.githubusercontent.com/u/22290721?v=4","uid":"22290721"}},"collectedEntriesCount":29,"company":"去哪儿","followersCount":250,"followeesCount":1,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":5,"totalCommentsCount":28,"ngxCachedTime":1572571631,"ngxCached":true,"viewedEntriesCount":236,"jobTitle":"前端工程师","subscribedTagsCount":40,"totalCollectionsCount":387,"username":"prettyEcho","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e087bc66990960f4","objectId":"599b891551882524316f3d5a"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/4/8/162a5a1789a5a483?w=533&h=300&f=jpeg&s=23240","original":false,"hotIndex":293.6662,"content":"从艺术的角度看闭包","title":"闭包，是真的美","lastCommentTime":"2019-06-25T03:00:31.364Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":3185,"summaryInfo":"写这篇文章时的心情是十分忐忑的 💢，因为对于我们今天的主角：闭包，很多小伙伴都写过关于它的文章，相信大家也读过不少，那些文章到底有没有把JS中这个近似神话的东西讲清楚，说实心里，真的有，但为数不多。 开文之所以说心情是忐忑的，就是怕达不到我写该文的初衷，但是我有信心同时我也会努力的完成我的目标。如...","isCollected":false},{"collectionCount":109,"autoPass":false,"commentsCount":7,"gfw":false,"buildTime":1572525895.0105,"checkStatus":true,"objectId":"5aab3ec2518825557e7822c0","entryView":"","subscribersCount":0,"ngxCachedTime":1572571755,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.00011242986809481,"hot":false,"updatedAt":"2019-10-31T12:44:54.992Z","originalUrl":"https://juejin.im/post/5aab3e946fb9a028be35bdf8","verifyCreatedAt":"2018-03-16T05:39:39.150Z","createdAt":"2018-03-16T05:39:39.150Z","user":{"community":null,"collectedEntriesCount":46,"company":"咪咕","followersCount":116,"followeesCount":2,"role":"guest","postedPostsCount":8,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":67,"ngxCachedTime":1572571635,"ngxCached":true,"viewedEntriesCount":1274,"jobTitle":"低级前端汪","subscribedTagsCount":5,"totalCollectionsCount":994,"username":"就那","avatarLarge":"https://user-gold-cdn.xitu.io/2017/11/6/a07fbd5b431288a21c481f50ad624b6c","objectId":"57ba494ba633bd005d323506"},"author":"","screenshot":"","original":true,"hotIndex":191.5348,"content":"相信很多前端小伙伴在工作和学习中，都会或多或少的接触和了解到匿名函数和闭包。被这俩知识点所困扰，也去网上搜索了不少的资料，查到资料和解释都各有说辞，甚至有些解释本身就是不正确的，这更加让人头疼。今天就来聊一聊匿名函数和闭包，浅谈一下他们之间的关系（实际上他们之间并没有什么直接关…","title":"浅谈匿名函数和闭包","lastCommentTime":"2018-07-11T14:23:11.327Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":1491,"summaryInfo":"###前言相信很多前端小伙伴在工作和学习中，都会或多或少的接触和了解到匿名函数和闭包。也去网上搜索了不少的资料，查到资料和解释都各有说辞，甚至有些解释本身就是不正确的，这更加让人头疼。今天就来聊一聊匿名函数和闭包，浅谈一下他们之间的关系（实际上他们之间并没有什么直接关系！important）。##...","isCollected":false},{"collectionCount":108,"commentsCount":9,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571084,"updatedAt":"2019-10-30T11:04:23.418Z","tags":[{"ngxCachedTime":1572571029,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571061,"ngxCached":true,"title":"函数式编程","id":"584628f161ff4b006c3c147f"}],"objectId":"59b669bc6fb9a00a67611f1e","rankIndex":0.000092390908657525,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/59b66943f265da065e3207a4","buildTime":1572433463.4353,"createdAt":"2017-09-11T10:47:24.293Z","user":{"community":{"weibo":{"selfDescription":"www.ikcamp.com；专注Web前端领域；著:《移动Web前端高效开发实战》","uid":"6363487155","blogAddress":"http://weibo.com/ikcamp","username":"iKcamp","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.0.648.648.180/006WExHBly8fjgz8xnsi1j30i20i0gmi.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIGW78jqCb6bzx2eRAE0gc9m2OJIODTlc0gwf8XV1Gj2UTQnmkgXqgVvbkaXIELb7WQZOaOLUp1aA/132"},"github":{"username":"zhouyao","avatarLarge":"https://avatars0.githubusercontent.com/u/2985953?v=4","uid":"2985953"}},"collectedEntriesCount":119,"company":"美团点评广告平台","followersCount":13211,"followeesCount":48,"role":"editor","postedPostsCount":90,"level":5,"isAuthor":true,"postedEntriesCount":31,"totalCommentsCount":402,"ngxCachedTime":1572571068,"ngxCached":true,"viewedEntriesCount":2167,"jobTitle":"FE，www.ikcamp.com","subscribedTagsCount":312,"totalCollectionsCount":12108,"username":"iKcamp","avatarLarge":"https://user-gold-cdn.xitu.io/2017/9/6/265369c159f86668c94ba08ab55f7441","objectId":"57d665e95bbb50005bc6a0c4"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/9/15/8461fab34f538404aa02f20ea6def6f0","original":true,"hotIndex":236.2093,"content":" 原文地址：Functional-Light-JS 原文作者：Kyle Simpson－《You-Dont-Know-JS》作者 关于译者：这是一个流淌着沪江血液的纯粹工程：认真，是 HTML 最坚实的梁柱；分享，是 CSS 里最闪耀的一瞥；总结，是 JavaScript 中最严…","title":"翻译连载 | JavaScript轻量级函数式编程-第7章: 闭包vs对象 |《你不知道的JS》姊妹篇","lastCommentTime":"2017-09-13T14:41:59.675Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571004},"viewsCount":2376,"summaryInfo":"数年前，Anton van Straaten 创造了一个非常有名且被常常引用的 禅理 来举例和证实一个闭包和对象之间重要的关系。 原帖尽管简短，却有更多关于起源和动机的内容，我强烈推荐为了理解本章去阅读原帖来调整你的观念。 我观察到很多人读完这个会对其中的聪明智慧傻笑，却继续不改变他们的想法。但是...","isCollected":false},{"collectionCount":108,"commentsCount":1,"gfw":false,"entryView":"","subscribersCount":1,"ngxCachedTime":1572096816,"updatedAt":"2019-10-25T03:25:16.202Z","tags":[{"ngxCachedTime":1572096706,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"},{"ngxCachedTime":1572096715,"ngxCached":true,"title":"程序员","id":"55c1748160b28fd99e49ea68"}],"objectId":"583e9fb9128fe1006bf97203","rankIndex":0.000056804558041216,"hot":false,"autoPass":false,"originalUrl":"https://segmentfault.com/q/1010000007578832","buildTime":1571973916.2182,"createdAt":"2016-11-30T09:45:29.909Z","user":{"community":{"weibo":{"selfDescription":"iOS、前端小王子，爱好木艺，在线教育践行者","uid":"2100639502","blogAddress":"http://weibo.com/binlogo","username":"Binboy_彬","avatarLarge":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/7d35370ejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1570975229&ssig=B2sGgYIvJ1"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIJTEGJia8YNjNyoRVsYDN2iayID6mtWKfOCJmMe3qs80apX5gvfHfe1J0kFA7pmPgrIwPeMkStHVWA/132"},"github":{"username":"Binlogo","avatarLarge":"https://avatars3.githubusercontent.com/u/7845507?v=4","uid":"7845507"}},"collectedEntriesCount":104,"company":"滴滴出行","followersCount":3266,"followeesCount":53,"role":"editor","postedPostsCount":21,"level":3,"isAuthor":true,"postedEntriesCount":31,"totalCommentsCount":82,"ngxCachedTime":1572096744,"ngxCached":true,"viewedEntriesCount":819,"jobTitle":"高级软件研发工程师","subscribedTagsCount":40,"totalCollectionsCount":1975,"username":"Dylan_王兴彬","avatarLarge":"https://user-gold-cdn.xitu.io/2018/4/6/1629b952b29a5f12?w=1113&h=1053&f=png&s=269732","objectId":"56a029d2128fe1005134e7fe"},"author":"","screenshot":"","original":false,"hotIndex":230.095,"content":"闭包，顾名思义，就是把馒头变成包子~ 就是带调料包的方便面  哈哈哈 😄 这个理解生动形象又不失深度，没毛病","title":"面试题：为什么要用闭包？","lastCommentTime":"2016-11-30T14:42:56.604Z","type":"article","english":false,"category":{"ngxCached":true,"title":"freebie","id":"5562b422e4b00c57d9b94b53","name":"开发工具","ngxCachedTime":1572096720},"viewsCount":2418,"summaryInfo":"","isCollected":false},{"collectionCount":105,"commentsCount":1,"gfw":false,"entryView":"58f424dc8d6d810057b52897","subscribersCount":1,"ngxCachedTime":1572571741,"updatedAt":"2019-10-31T12:05:27.788Z","tags":[{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58f424d5570c3500563d7541","rankIndex":0.000097034988785806,"hot":false,"autoPass":false,"originalUrl":"http://blog.csdn.net/u011240877/article/details/70202456","buildTime":1572523527.8045,"createdAt":"2017-04-17T02:13:41.752Z","user":{"community":{"github":{"username":"shixinzhang","avatarLarge":"https://avatars3.githubusercontent.com/u/17017832?v=4","uid":"17017832"}},"collectedEntriesCount":205,"company":"喜马拉雅FM","followersCount":4484,"followeesCount":50,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":true,"postedEntriesCount":69,"totalCommentsCount":199,"ngxCachedTime":1572571733,"ngxCached":true,"viewedEntriesCount":1213,"jobTitle":"打杂","subscribedTagsCount":16,"totalCollectionsCount":7108,"username":"张拭心","avatarLarge":"https://leancloud-gold-cdn.xitu.io/d30cc37adeb8b6998524.jpg?imageView/1/w/100/h/100/q/80/format/png","objectId":"579232fd6be3ff0066fa0ec8"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/4/17/8b24f6cbb9051e56c900ab5ceff49da2.png","original":false,"hotIndex":322.2425,"content":"实战中掌握闭包的使用场景","title":"说说 JavaScript 的闭包用于什么场景","lastCommentTime":"2017-05-04T11:02:52.522Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":4308,"summaryInfo":"函数创建了本地变量 和函数 。 是定义在 内部的内部函数，因此只能在 函数内被访问。 没有内部变量，但是由于内部函数可以访问外部函数的变量， 可以访问 中的变量 。 运行上述代码，我们可以看到 的值成功地被打印出来。 这是“词法作用域”（其描述了 JS 解析器如何处理嵌套函数中的变量）的一个例子。...","isCollected":false},{"collectionCount":103,"isEvent":false,"commentsCount":29,"gfw":false,"buildTime":1572490583.3073,"checkStatus":true,"objectId":"5ca37991e51d4558bc341984","entryView":"","subscribersCount":0,"ngxCachedTime":1572571739,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-31T02:56:23.288Z","rankIndex":0.00098972279099256,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ca33cdfe51d451fc12208d7","verifyCreatedAt":"2019-04-06T07:32:07.364Z","createdAt":"2019-04-06T07:32:07.364Z","user":{"community":{"github":{"username":"kingCYL","avatarLarge":"https://avatars2.githubusercontent.com/u/25944903?v=4","uid":"25944903"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKabrSY1Qm2zuhDZkAmXicVFY6PtVxuz1UYkg5lOaXqBOII6J7FQK7kzOZDm1PNuTXMCNKSe4RJveA/132"}},"collectedEntriesCount":15,"company":"前中关村某司","followersCount":265,"followeesCount":24,"role":"guest","postedPostsCount":5,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":134,"ngxCachedTime":1572571739,"viewedEntriesCount":481,"jobTitle":"前端开发工程师","subscribedTagsCount":35,"totalCollectionsCount":254,"username":"红衣教主","avatarLarge":"https://user-gold-cdn.xitu.io/2018/3/12/1621aea63d41d031?w=886&h=887&f=jpeg&s=475929","objectId":"5aa6a10f5188257bf550b684"},"author":"","screenshot":"","original":true,"hotIndex":348.7033,"content":"这一篇开始总结2019年春季前端面试的高频题型。会以题型+问法/考点+参考答案的形式呈现，如有错漏，希望诸位大佬及时斧正，以正视听。 这个问题出现频率最高，几乎每场面试都问。 显而易见，前端性能优化越来越受重视，目前各种流行技术的更新迭代也是围绕性能而进行。然而这个问题的范围太…","title":"【2019经典面试题解答】前端性能优化&闭包（解析和举例）","lastCommentTime":"2019-04-11T13:48:41.486Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":4328,"summaryInfo":"面试一个多月以来，发现面试题的重复率好高，为了擦掉上一篇被喷的水，这一篇开始总结2019年春季前端面试的高频题型。会以题型+问法/考点+参考答案的形式呈现，如有错漏，希望诸位大佬及时斧正，以正视听。 （备注：本人非应届生，这些面试题应该是针对至少一年工作经验的） 这个问题出现频率最高，几乎每场面试...","isCollected":false},{"collectionCount":102,"commentsCount":0,"gfw":false,"entryView":"58a40e5aac502e006cbeecec","subscribersCount":0,"ngxCachedTime":1572571758,"updatedAt":"2019-10-29T05:02:07.108Z","tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58a40e4fac502e0068b32604","rankIndex":0.000048588378916733,"hot":false,"autoPass":false,"originalUrl":"http://blog.csdn.net/owen1190/article/details/53418097","buildTime":1572325327.1252,"createdAt":"2017-02-15T08:16:15.021Z","user":{"community":{"github":{"uid":"17617063","bio":null,"avatar_url":"https://avatars.githubusercontent.com/u/17617063?v=3","username":"owen1190","nickname":"owen1190","html_url":"https://github.com/owen1190"},"wechat":{"nickname":"☀﹍Mr.余℡","avatar_url":"http://wx.qlogo.cn/mmopen/Q3auHgzwzM4P6OduYtSNlJf5lM9EN5n5I3qfTYia6ic6nN4uxkJywkwh6x8FzJciaE5l2pmhTXrNpSQnXyyFUKIAw/0"}},"collectedEntriesCount":139,"company":"去哪儿","followersCount":710,"followeesCount":27,"role":"editor","postedPostsCount":16,"level":3,"isAuthor":true,"postedEntriesCount":13,"totalCommentsCount":106,"ngxCachedTime":1572571736,"ngxCached":true,"viewedEntriesCount":2311,"jobTitle":"FE","subscribedTagsCount":21,"totalCollectionsCount":2496,"username":"yuyurenjie","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/9/16a9b04f970c66e9?w=640&h=640&f=jpeg&s=111798","objectId":"57ea68462e958a00545477e8"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/9adda9e0416b3dcfa8e7.png","original":true,"hotIndex":176.8492,"content":"讲解闭包","title":"初始 JavaScript - 闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":1495,"summaryInfo":"闭包是指有权访问另一个函数作用域中的变量的函数。创建闭包的常见方式，就是在一个函数内部创建另一个函数。 和都能访问到函数的属性，是因为和函数的作用域中包含的作用域。 当某个函数被调用时，会创建一个执行环境（execution context）及相应的作用域链。然后，使用 arguments 和其他...","isCollected":false},{"collectionCount":101,"commentsCount":6,"gfw":false,"entryView":"58749ab5a22b9d0058a1b03e","subscribersCount":5,"ngxCachedTime":1572571755,"updatedAt":"2019-10-21T08:01:11.760Z","tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58749ab08d6d810058a203f1","rankIndex":0.000050153670294124,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/ffa126731b1c","buildTime":1571644871.7753,"createdAt":"2017-01-10T08:26:24.626Z","user":{"community":{"weibo":{"selfDescription":"热爱生活，心系未来，好好学习✧٩(ˊωˋ*)و✧","uid":"5322642628","blogAddress":"http://weibo.com/u/5322642628","username":"挺问中圆","avatarLarge":"https://tva3.sinaimg.cn/crop.159.0.361.361.180/005OdguEjw8ezsjmtqn4dg30i30a9qv6.gif?KID=imgbed,tva&Expires=1571385661&ssig=MCil7sHxkm"},"github":{"username":"Char-Ten","avatarLarge":"https://avatars1.githubusercontent.com/u/17474452?v=4","uid":"17474452"}},"collectedEntriesCount":110,"company":"前端围观党","followersCount":38,"followeesCount":8,"role":"guest","postedPostsCount":3,"level":2,"isAuthor":false,"postedEntriesCount":5,"totalCommentsCount":129,"ngxCachedTime":1572571635,"ngxCached":true,"viewedEntriesCount":3051,"jobTitle":"前端划水工程师","subscribedTagsCount":49,"totalCollectionsCount":494,"username":"CharTen","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e083407e43d8e8d5","objectId":"57f5285d7db2a2005931b729"},"author":"","screenshot":"","original":false,"hotIndex":190.411,"content":"通俗易懂理解作用域和闭包。","title":"毫无节操地理解 js 的作用域、闭包","lastCommentTime":"2018-02-27T14:35:03.189Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":1651,"summaryInfo":"然后问c是谁的。。。我一看，诶呀我擦，这又不是作用域的问题吗？刚想说c是b的变量，但是定睛一看，不对，妈的有陷阱，c前没加var，又不是严格模式，然后我就跟他说：\"c是全局变量。\"然后他就咚咚咚地用nodejs敲了一下然后：  噗，。额，这个嘛，我猜这个环境是严格模式下的吧。 不过，既然又遇到这种...","isCollected":false},{"collectionCount":95,"autoPass":false,"commentsCount":1,"gfw":false,"buildTime":1571811357.1494,"checkStatus":true,"objectId":"5b9484d0e51d450e8d762bb4","entryView":"","subscribersCount":0,"ngxCachedTime":1572571638,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.00015125428302755,"hot":false,"updatedAt":"2019-10-23T06:15:57.131Z","originalUrl":"https://blog.hhking.cn/2018/09/08/i-never-understood-javascript-closures/","verifyCreatedAt":"2018-09-11T07:10:17.308Z","createdAt":"2018-09-11T07:10:17.308Z","user":{"community":{"github":{"username":"hhking","avatarLarge":"https://avatars2.githubusercontent.com/u/11470599?v=4","uid":"11470599"}},"collectedEntriesCount":57,"company":"广州","followersCount":1275,"followeesCount":13,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":16,"totalCommentsCount":11,"ngxCachedTime":1572571638,"viewedEntriesCount":1617,"jobTitle":"前端","subscribedTagsCount":9,"totalCollectionsCount":313,"username":"hhking","avatarLarge":"https://user-gold-cdn.xitu.io/2018/7/21/164bc0f4bcee4ac6?w=744&h=750&f=png&s=579110","objectId":"5712e9f6128fe1006cf35b3f"},"author":"","screenshot":null,"original":false,"hotIndex":146.0234,"content":"作者从 JavaScript 的原理出发，详细解读执行过程，通过“背包”的形象比喻，来解释闭包。","title":"[译] 我从没理解过 JavaScript 闭包","lastCommentTime":"2018-09-11T23:38:01.541Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":998,"summaryInfo":"","isCollected":false},{"collectionCount":94,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572568008.0642,"checkStatus":true,"objectId":"5b1f5e936fb9a01e3a5eebd1","entryView":"","subscribersCount":0,"ngxCachedTime":1572571632,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.00018716046814765,"hot":false,"updatedAt":"2019-11-01T00:26:48.047Z","originalUrl":"https://juejin.im/post/5b1f36e6f265da6e1a603e34","verifyCreatedAt":"2018-06-12T06:02:40.844Z","createdAt":"2018-06-12T06:02:40.844Z","user":{"community":{"github":{"username":"qiudaoermu","avatarLarge":"https://avatars2.githubusercontent.com/u/13454418?v=4","uid":"13454418"}},"collectedEntriesCount":124,"company":"vipkid","followersCount":3,"followeesCount":16,"role":"guest","postedPostsCount":1,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571632,"viewedEntriesCount":981,"jobTitle":"前端","subscribedTagsCount":2,"totalCollectionsCount":93,"username":"qiudaoermu","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e084313b9fdf8f30","objectId":"58b63760ac502e006bb54b5f"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/6/12/163f3488de8d393a?w=600&h=428&f=jpeg&s=51000","original":true,"hotIndex":251.0711,"content":"","title":"闭包实际场景应用","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":3139,"summaryInfo":"比如要缩放窗口 触发onresize 事件 需要在这时候做一件事情,但是我们希望拖动的时候只触发一次,比如 需要为每个容器元素声明一个独立id,不然会报错","isCollected":false},{"collectionCount":94,"autoPass":false,"commentsCount":10,"gfw":false,"buildTime":1572015486.1127,"checkStatus":true,"objectId":"5b253cfe51882574b3473d14","entryView":"","subscribersCount":0,"ngxCachedTime":1572571755,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571657,"ngxCached":true,"title":"jQuery","id":"5599f577e4b08a686d142949"}],"isEvent":false,"rankIndex":0.00014842393327325,"hot":false,"updatedAt":"2019-10-25T14:58:06.094Z","originalUrl":"https://juejin.im/post/5b2529dde51d4558aa04e683","verifyCreatedAt":"2018-06-19T09:33:27.513Z","createdAt":"2018-06-19T09:33:27.513Z","user":{"community":{"github":{"username":"kangling098","avatarLarge":"https://avatars1.githubusercontent.com/u/20222196?v=4","uid":"20222196"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epgkS56CsibAM65kSH2m3sWv5nzEbgeav7CxMJMjLte3h3efcK0xEa3C16H9j8tuQ6lLub2BdMia0ZQ/132"}},"collectedEntriesCount":76,"company":"明源云","followersCount":55,"followeesCount":31,"role":"guest","postedPostsCount":14,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":35,"ngxCachedTime":1572571635,"ngxCached":true,"viewedEntriesCount":984,"jobTitle":"前端工程师","subscribedTagsCount":67,"totalCollectionsCount":564,"username":"鲍康霖","avatarLarge":"https://user-gold-cdn.xitu.io/2019/1/18/1686087d74c2ea83?w=748&h=728&f=png&s=623261","objectId":"5ad584fe5188255566702f78"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/6/17/16409705b25561c1?w=543&h=317&f=jpeg&s=36372","original":true,"hotIndex":191.1807,"content":"重载，简单说，就是函数或者方法有相同的名称，但是参数列表不相同的情形，这样的同名不同参数的函数或者方法之间，互相称之为重载函数或者方法。 上面的也是同理,根据这个输出结果,不难看出,当没有传递参数时,通过闭包的old变量,我们可以一路向上找到这个方法.","title":"美丽的闭包,在js中实现函数重载","lastCommentTime":"2018-06-22T21:40:40.669Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":1740,"summaryInfo":"最近在js的学习中,看到了函数重载的问题，一开始，只看到了实现代码，看着代码冥思苦想了半个小时，总算是理清了其实现的原理，也为其实现的巧妙感到赞叹，也是在自己搞懂原理之后，去网络上搜索了下，才知道，这个实现方法是jQuery作者John Resig在《JavaScript忍者秘籍》中对函数重载的实...","isCollected":false},{"collectionCount":92,"autoPass":true,"commentsCount":3,"gfw":false,"buildTime":1572530703.165,"checkStatus":true,"objectId":"5b167c4ce51d450688134bf7","entryView":"","subscribersCount":0,"ngxCachedTime":1572571755,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571735,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571722,"ngxCached":true,"title":"jQuery","id":"5599f577e4b08a686d142949"}],"isEvent":false,"rankIndex":0.00014308083744645,"hot":false,"updatedAt":"2019-10-31T14:05:03.148Z","originalUrl":"https://juejin.im/post/5b167b476fb9a01e5b10f19b","verifyCreatedAt":"2018-06-05T12:04:28.936Z","createdAt":"2018-06-05T12:04:28.936Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKgrcbDrMyBCG6vxECP7hQH7Iw5WA3ibsJjvlOXY7qGY2L8apE71M2ibXv69HPvlBQRu0Vo2X1Hic7g/132"}},"collectedEntriesCount":293,"company":"","followersCount":599,"followeesCount":17,"role":"editor","postedPostsCount":4,"level":3,"isAuthor":true,"postedEntriesCount":11,"totalCommentsCount":52,"ngxCachedTime":1572571755,"viewedEntriesCount":2820,"jobTitle":"一个爱学习的前端程序员。","subscribedTagsCount":74,"totalCollectionsCount":2045,"username":"lce_shou","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/9bbd2572fb8bc98df074a515fa2181ef","objectId":"57ccbfab165abd0068f2e8db"},"author":"","screenshot":"","original":true,"hotIndex":195.5391,"content":"有Java、C#等开发经验的同学对代码抽象的思想一定不会陌生，抽象类、接口平时写的非常多，但是对于一直都从事前端开发的同学来说，“抽象”这个词就比较陌生了，毕竟JavaScript中没有abstract、interface。 这是Java中的一个类，类里面有一个抽象方法doSo…","title":"闭包详解二：JavaScript中的高阶函数","lastCommentTime":"2018-06-10T09:31:15.741Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":2008,"summaryInfo":"注：文章最末尾有个人公众号二维码，会分享更多技术文章等，敬请关注 本文讲解的高阶函数是之前讲解的闭包的续集，所以在学习高阶函数之前，一定要确保对闭包以及作用域的概念已经有了解： 有Java、C#等开发经验的同学对代码抽象的思想一定不会陌生，抽象类、接口平时写的非常多，但是对于一直都从事前端开发的同...","isCollected":false},{"collectionCount":90,"commentsCount":1,"gfw":false,"entryView":"5850dbc48e450a006c804064","subscribersCount":1,"ngxCachedTime":1572571639,"updatedAt":"2019-10-27T07:47:24.994Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"5850b836128fe1006d9117bb","rankIndex":0.000034897773641363,"hot":false,"autoPass":false,"originalUrl":"http://www.cnblogs.com/langjt/p/4224937.html","buildTime":1572162445.0114,"createdAt":"2016-12-14T03:10:46.883Z","user":{"community":{"github":{"username":"langjt","avatarLarge":"https://avatars1.githubusercontent.com/u/2832575?v=4","uid":"2832575"}},"collectedEntriesCount":58,"company":"","followersCount":12,"followeesCount":1,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":true,"postedEntriesCount":4,"totalCommentsCount":5,"ngxCachedTime":1572571639,"viewedEntriesCount":789,"jobTitle":"","subscribedTagsCount":36,"totalCollectionsCount":466,"username":"阿郎","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082ae4afb78fa5c","objectId":"5754c1cc7db2a200698f133d"},"author":"","screenshot":"","original":false,"hotIndex":139.0529,"content":"平时写代码、第三方框架和组件都或多或少用到了闭包。\n所以，了解闭包是非常必要的。","title":"Javascript 闭包简单理解","lastCommentTime":"2016-12-15T08:42:13.935Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":961,"summaryInfo":"提到闭包，想必大家都早有耳闻，下面说下我的简单理解。平时写代码、第三方框架和组件都或多或少用到了闭包。所以，了解闭包是非常必要的。呵呵... 一、什么是闭包简而言之，就是能够读取其他函数内部变量的函数。由于JS变量作用域的特性，外部不能访问内部变量，内部可以外部变量。二、使用场景 1. 实现私有成...","isCollected":false},{"collectionCount":90,"commentsCount":1,"gfw":false,"entryView":"58bd045da22b9d005eefaab8","subscribersCount":1,"ngxCachedTime":1572571638,"updatedAt":"2019-10-27T03:52:10.312Z","tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58bd03d2ac502e006c1f8853","rankIndex":0.000042685186522885,"hot":false,"autoPass":false,"originalUrl":"http://jungahuang.com/2017/03/05/scope-and-closure/","buildTime":1572148330.3298,"createdAt":"2017-03-06T06:38:10.825Z","user":{"community":{"github":{"uid":"16872237","bio":null,"avatar_url":"https://avatars0.githubusercontent.com/u/16872237?v=3","username":"huangzhuangjia","nickname":"Junga","html_url":"https://github.com/huangzhuangjia"}},"collectedEntriesCount":21,"company":"","followersCount":306,"followeesCount":20,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":4,"totalCommentsCount":13,"ngxCachedTime":1572571530,"ngxCached":true,"viewedEntriesCount":4705,"jobTitle":"前端开发","subscribedTagsCount":63,"totalCollectionsCount":478,"username":"Junga","avatarLarge":"https://user-gold-cdn.xitu.io/2019/10/11/16dbb1a4362cf059?w=640&h=640&f=jpeg&s=56466","objectId":"586f5f14128fe100580d6e17"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/5c30874a92c779375852.jpg","original":false,"hotIndex":150.4303,"content":"闭包是 JavaScript 语言的一大特点，可以说再开发的过程中，它无处不在，即使有时候我们都没有发现它的存在。接触 JavaScript 以来，虽然说是一直有对闭包了解，但是实际应用起来或者分析一些代码的时候却有些吃力。现在回过头总结，才又进一步的揭开了闭包的一层面纱。而在讲闭包之前，我们要先明白 JavaScript 中又一个重要的知识点，那就是 JavaScript 的内存机制以及作用域，这两个是我们有效理解闭包原理的前提吧。前面我们已经讲了 JavaScript 的内存机制，那么在这里先理解什么是作用域和作用域链。","title":"作用域与闭包的一二事","lastCommentTime":"2017-03-20T06:38:55.939Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":1182,"summaryInfo":"闭包是JavaScript语言的一大特点，可以说再开发的过程中，它无处不在，即使有时候我们都没有发现它的存在。接触JavaScript以来，虽然说是一直有对闭包了解，但是实际应用起来或者分析一些代码的时候却有些吃力。现在回过头总结，才又进一步的揭开了闭包的一层面纱。而在讲闭包之前，我们要先明白Ja...","isCollected":false},{"collectionCount":89,"userRankIndex":12.310316800026,"buildTime":1572429905.408,"commentsCount":29,"gfw":false,"objectId":"5d7897546fb9a06ad16f9c28","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571630,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T10:05:05.390Z","rankIndex":0.0087604430237167,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d7864e46fb9a06b051818e8","verifyCreatedAt":"2019-09-11T07:45:56.021Z","createdAt":"2019-09-11T07:45:56.021Z","user":{"community":null,"collectedEntriesCount":46,"company":"咪咕","followersCount":116,"followeesCount":2,"role":"guest","postedPostsCount":8,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":67,"ngxCachedTime":1572571627,"ngxCached":true,"viewedEntriesCount":1274,"jobTitle":"低级前端汪","subscribedTagsCount":5,"totalCollectionsCount":994,"username":"就那","avatarLarge":"https://user-gold-cdn.xitu.io/2017/11/6/a07fbd5b431288a21c481f50ad624b6c","objectId":"57ba494ba633bd005d323506"},"author":"","screenshot":"","original":true,"hotIndex":342.4811,"content":"闭包——JS三座大山之一，对很多前端开发者来说是个非常头疼的知识点。本文将花费大约9分钟时间，用4组非常简单的例子来对比理解闭包。 在案例对比之前，先给大家一个观点：闭包只是一种现象。我们不要试图用官方的定义，以扣字眼的方式去理解闭包的含义，如果看完下面的4组案例后，能搞清楚闭…","title":"9分钟，搞明白闭包","lastCommentTime":"2019-10-01T20:09:50.338Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":4482,"summaryInfo":"闭包————JS三座大山之一，对很多前端开发者来说是个非常头疼的知识点。本文将花费大约9分钟时间，用4组非常简单的例子来对比理解闭包。 在案例对比之前，先给大家一个观点：闭包只是一种现象。我们不要试图用官方的定义，以扣字眼的方式去理解闭包的含义，如果看完下面的4组案例后，能搞清楚闭包这种现象是如何...","isCollected":false},{"collectionCount":86,"commentsCount":9,"gfw":false,"entryView":"58462c5279bc440065c5c478","subscribersCount":6,"ngxCachedTime":1572571761,"updatedAt":"2019-10-20T04:19:24.404Z","tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58461bcda22b9d007aa4447c","rankIndex":0.000040004542416308,"hot":false,"autoPass":false,"originalUrl":"http://fsux.me/js/深入浅出/2016/01/03/In-depth-to-study-JS-Closure.html","buildTime":1571545164.4234,"createdAt":"2016-12-06T02:00:45.126Z","user":{"community":{"github":{"uid":"19945185"},"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmhead/p4MvJ016oLvn6OeUhYjP71FgicHgMeChdibgsqKMfKibGM/0"}},"collectedEntriesCount":25,"company":"FSUX","followersCount":1676,"followeesCount":3,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":true,"postedEntriesCount":23,"totalCommentsCount":112,"ngxCachedTime":1572571738,"ngxCached":true,"viewedEntriesCount":2980,"jobTitle":"","subscribedTagsCount":22,"totalCollectionsCount":2747,"username":"如山","avatarLarge":"https://user-gold-cdn.xitu.io/2018/9/25/1660c56a92ab5c6d?w=960&h=1200&f=jpeg&s=238660","objectId":"57c6526279bc440063f7fc99"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/f77c33bfeaf9d7d85288.png","original":true,"hotIndex":159.6077,"content":"闭包（closure）是 Javascript 语言的一个重点，也是难点，对于新手来说，概念过于抽象；而现在书上的大部分解释都比较含糊，本文将把闭包掰开了、揉碎了讲个清楚。","title":"Javascript 深入浅出闭包","lastCommentTime":"2019-05-05T11:57:22.371Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":1283,"summaryInfo":"","isCollected":false},{"collectionCount":83,"commentsCount":4,"gfw":false,"objectId":"59e8978cf265da432e5b2011","checkStatus":true,"buildTime":1572160217.9376,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571764,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571680,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"}],"autoPass":false,"rankIndex":0.00006230175250909,"hot":false,"updatedAt":"2019-10-27T07:10:17.918Z","originalUrl":"https://juejin.im/post/59e8974e6fb9a0451d409691","verifyCreatedAt":"2017-10-19T12:16:12.883Z","createdAt":"2017-10-19T12:16:12.883Z","user":{"community":{"weibo":{"selfDescription":"卫斯理/三国/JavaScript　文学·历史·编程","uid":"1795310341","blogAddress":"http://weibo.com/javarun","username":"天方夜影","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.179.179.180/6b024305tw1eh5fyq33dlj20500503yk.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eozpyAUaM6razM3WqWghsPk4C63HPuoT8vkNtl6qLJnMVh0hu2LX5drVrurzK0WVuO1ibYBfw6qwaQ/132"},"github":{"username":"AlphaBao","avatarLarge":"https://avatars0.githubusercontent.com/u/3227118?v=4","uid":"3227118"}},"collectedEntriesCount":20,"company":"","followersCount":34,"followeesCount":2,"role":"editor","postedPostsCount":11,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":18,"ngxCachedTime":1572571764,"viewedEntriesCount":505,"jobTitle":"","subscribedTagsCount":27,"totalCollectionsCount":582,"username":"天方夜","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08a677c1c2931f9","objectId":"59e85c146fb9a045284598b1"},"author":"","screenshot":"","original":true,"hotIndex":146.8084,"content":"近几天在编程群中的聊天，让我发现了很多人并不清楚什么是上下文（context）、什么是作用域（scope），而且纠结在其中。我当初对这两个概念也只有粗浅的理解，不过我从一开始就不怎么困惑，因为我清楚自己对这一问题的认识边界。现在，我对它们的认识也只加深了一点点。不过，群聊中小伙…","title":"从上下文，到作用域（彩蛋：理解闭包）","lastCommentTime":"2017-10-21T01:43:37.642Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":1178,"summaryInfo":"近几天在编程群中的聊天，让我发现了很多人并不清楚什么是上下文（context）、什么是作用域（scope），而且纠结在其中。我当初对这两个概念也只有粗浅的理解，不过我从一开始就不怎么困惑，因为我清楚自己对这一问题的认识边界。现在，我对它们的认识也只加深了一点点。不过，群聊中小伙伴的热情鼓舞了我——...","isCollected":false},{"collectionCount":78,"commentsCount":1,"gfw":false,"entryView":"57a8469a5bbb50006436b81f","subscribersCount":0,"ngxCachedTime":1572571674,"updatedAt":"2019-10-29T06:22:02.806Z","tags":[{"ngxCachedTime":1572571578,"ngxCached":true,"title":"PHP","id":"555e9a84e4b00c57d9955e1b"},{"ngxCachedTime":1572571581,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"}],"objectId":"57a83dfd6be3ff00654326df","rankIndex":0.00003824476694452,"hot":false,"autoPass":false,"originalUrl":"http://hersface.com/page/closure.html","buildTime":1572330122.8228,"createdAt":"2016-08-08T08:08:29.951Z","user":{"community":{"github":{"username":"lscho","avatarLarge":"https://avatars2.githubusercontent.com/u/11583677?v=4","uid":"11583677"}},"collectedEntriesCount":17,"company":"待业","followersCount":562,"followeesCount":1,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":9,"totalCommentsCount":15,"ngxCachedTime":1572571674,"viewedEntriesCount":242,"jobTitle":"后端汪","subscribedTagsCount":14,"totalCollectionsCount":575,"username":"lscho","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082d6f5cf9a0d96","objectId":"578ae5cb128fe10063a6ef3b"},"author":"","screenshot":"","original":true,"hotIndex":181.5665,"content":"提到闭包和匿名函数似乎一下子就想到了 javascript ，但其实在很多语言中都有闭包的特性。但是 javascript 坑爹的变量作用域让闭包变得非常重要。而其他语言完善私有共有变量和继承让闭包似乎没有什么卵用。但是为了有点 B 格，还是看了看 php 的闭包。","title":"php 闭包与匿名函数","lastCommentTime":"2018-03-06T15:22:12.750Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571581},"viewsCount":2033,"summaryInfo":"闭包个人理解就是可以访问不同作用域内变量的方式。在 javascript 中，变量的作用域都是遵循从下往上的原则，而最上级的变量是挂载在 window 对象中(nodejs 是挂载在 gloub 中)，这就意味着如果随意定义的变量的话，挂载在最上级作用域的变量会越来越多，甚至会产生重名、覆盖等问题...","isCollected":false},{"collectionCount":78,"commentsCount":14,"gfw":false,"entryView":"58de8ea08d6d810061447f35","subscribersCount":8,"ngxCachedTime":1572571635,"updatedAt":"2019-10-30T16:58:26.676Z","tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58de8ea061ff4b006b0fc391","rankIndex":0.000059266127454642,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/58de8dadac502e006cfc7b76","buildTime":1572454706.6944,"createdAt":"2017-03-31T17:15:12.227Z","user":{"community":null,"collectedEntriesCount":131,"company":"","followersCount":26,"followeesCount":1,"role":"guest","postedPostsCount":3,"level":2,"isAuthor":true,"postedEntriesCount":2,"totalCommentsCount":23,"ngxCachedTime":1572571632,"ngxCached":true,"viewedEntriesCount":647,"jobTitle":"前端工程师","subscribedTagsCount":32,"totalCollectionsCount":336,"username":"海痕","avatarLarge":"https://leancloud-gold-cdn.xitu.io/adc6e124ad08a0a995e5.jpg","objectId":"57fb0ccea0bb9f00583fe8fe"},"author":"","screenshot":"","original":true,"hotIndex":201.7956,"content":"在上一篇文章“执行环境和作用域”中，我试着梳理了执行环境和作用域的关系。但实际上，文章中并没有提到作用域，而是介绍了执行环境和作用域链。这里先把上篇文章的坑填了。 上篇文章的最后，我提了一个问题。这里把代码稍微修改下，如下： var name = 'window'; outer…","title":"js中的闭包","lastCommentTime":"2018-08-03T11:34:00.585Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":2181,"summaryInfo":"在上一篇文章“执行环境和作用域”中，我试着梳理了执行环境和作用域的关系。但实际上，文章中并没有提到作用域，而是介绍了执行环境和作用域链。这里先把上篇文章的坑填了。 上篇文章的最后，我提了一个问题。这里把代码稍微修改下，如下： 这段代码很简单，但很容易迷惑人。很多人可能会认为，应该输出“outer”...","isCollected":false},{"collectionCount":77,"commentsCount":0,"gfw":false,"entryView":"57e76bafa0bb9f005844e41a","subscribersCount":0,"ngxCachedTime":1572571640,"updatedAt":"2019-10-22T02:41:58.917Z","tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"57e7672467f3560057986d00","rankIndex":0.000027419428626389,"hot":false,"autoPass":false,"originalUrl":"https://github.com/meepobrother/study/blob/master/javascript/%E5%8E%9F%E5%9E%8B%E4%B8%8E%E9%97%AD%E5%8C%85.md","buildTime":1571712118.9359,"createdAt":"2016-09-25T05:56:52.893Z","user":{"community":{"github":{"username":"meepobrother","avatarLarge":"https://avatars1.githubusercontent.com/u/8385261?v=4","uid":"8385261"}},"collectedEntriesCount":3,"company":"","followersCount":0,"followeesCount":1,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":0,"ngxCachedTime":1572571640,"viewedEntriesCount":255,"jobTitle":"","subscribedTagsCount":197,"totalCollectionsCount":77,"username":"imeepos","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08334faead31255","objectId":"57e60596bf22ec005865e57f"},"author":"","screenshot":"","original":true,"hotIndex":121.1463,"content":"JS 里的基本数据类型 Function String Object Number Boolean Array 都是构造函数 都是函数，有 prototype 但是不能修改，设置无用\n__proto__ 获取上级原型\nprototype 设置上级原型\n如果没有 prototype 就是不能修改上级原型\n由以上分析，函数是一个对象，那么闭包就是对象中的私有成员，外部无法访问，但始终存在","title":"分析 js 原型和闭包的特性","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":864,"summaryInfo":"JS里的基本数据类型 FUNCTION STRING OBJECT NUMBER BOOLEAN ARRAY 都是构造函数 都是函数，有PROTOTYPE但是不能修改，设置无用","isCollected":false},{"collectionCount":76,"commentsCount":6,"gfw":false,"objectId":"5a0ff58e6fb9a0450d10a962","checkStatus":true,"buildTime":1571055875.782,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571763,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571745,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"},{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571680,"ngxCached":true,"title":"API","id":"55979f27e4b08a686ce550a6"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"autoPass":true,"rankIndex":0.000070112979073099,"hot":false,"updatedAt":"2019-10-14T12:24:35.764Z","originalUrl":"https://juejin.im/post/5a0ff568f265da4304063421","verifyCreatedAt":"2017-11-20T05:43:08.296Z","createdAt":"2017-11-20T05:43:08.296Z","user":{"community":null,"collectedEntriesCount":3,"company":"","followersCount":6,"followeesCount":16,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571763,"viewedEntriesCount":147,"jobTitle":"js工程师","subscribedTagsCount":34,"totalCollectionsCount":76,"username":"Sleet","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/23/2038abb68a2cb9e0b06eaf10980c9357","objectId":"5973f5bf6fb9a06bb21ae25f"},"author":"","screenshot":"","original":true,"hotIndex":150.493,"content":"通俗来说就是\b编译器会将我们写的代码首先拆分成可以进行编译的代码 eg：var a = 2；可以被编译器分割为var,a,=,2,; 空格是否会被当作词法单元，取决于空格在这门语言中是否具有意义。 AST：抽象语法树的概念他会把上述分割好的代码进组装成为一个语法树\bm,=,va…","title":"你不懂的JS学习笔记(作用域和闭包)","lastCommentTime":"2017-11-26T22:28:00.103Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":1353,"summaryInfo":"首先说一下基本的执行顺序首先是编译器由上面的步骤编译代码然后对于一些变量的声明会在编译期间交给作用域然后作用域就会组成一个像是一个树的结构，全局作用域下面会有嵌套的函数作用域。最后JS引擎根据作用域去执行代码，大概就是这样的一个流程。介绍以下三个关键的概念:  可以理解为foo需要知道自己应该赋值...","isCollected":false},{"collectionCount":74,"commentsCount":7,"gfw":false,"entryView":"5909447a44d90400693f821a","subscribersCount":8,"ngxCachedTime":1572571640,"updatedAt":"2019-10-31T05:31:35.054Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"59089492ac502e0063ff84db","rankIndex":0.000041663063419843,"hot":false,"autoPass":false,"originalUrl":"http://mp.weixin.qq.com/s/kxKon7JsAHAuHQw6OY0T9Q","buildTime":1572499895.0709,"createdAt":"2017-05-02T14:15:46.741Z","user":{"community":{"weibo":{"avatar_url":"http://tva4.sinaimg.cn/crop.13.0.1098.1098.180/006h9tPLjw8f7n6iz0tklj30v90ui763.jpg","uid":"5750254341","nickname":"有一个姑娘在coding"},"github":{"uid":"7507010","bio":null,"avatar_url":"https://avatars.githubusercontent.com/u/7507010?v=3","username":"sunweiling","nickname":"sunweiling","html_url":"https://github.com/sunweiling"}},"collectedEntriesCount":27,"company":"我自己的tb店铺：HECO的男女朋友","followersCount":599,"followeesCount":0,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":20,"totalCommentsCount":147,"ngxCachedTime":1572571578,"ngxCached":true,"viewedEntriesCount":586,"jobTitle":"前端","subscribedTagsCount":28,"totalCollectionsCount":1481,"username":"废柴美少女","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08369c965bcad6b","objectId":"581aae622f301e005cfdc6d3"},"author":"","screenshot":"","original":true,"hotIndex":134.8435,"content":"老生常谈的问题，却又不可忽视","title":"希望是通俗易懂的谈一下\bJS 闭包问题","lastCommentTime":"2017-05-03T04:13:33.283Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":1064,"summaryInfo":"有时候在查一个知识点的时候，如果你只看了一篇文章，恰巧那篇文章讲的并不准确，可能你一辈子都要认为的有偏差了。 不管现代浏览器做的再好，我们总会在上一些网站时发现很卡，卡的原因可能千千万吧，但是如果因为代码质量问题占内存了，那就是我们做开发的不好了。 这里说到JavaScript最后一步是隐藏的，也...","isCollected":false},{"collectionCount":72,"commentsCount":1,"gfw":false,"entryView":"583fe41aa22b9d007a834f0e","subscribersCount":1,"ngxCachedTime":1572571772,"updatedAt":"2019-10-31T15:23:08.325Z","tags":[{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"583fd9c4ac502e006b8f64ab","rankIndex":0.000027143355432945,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/689b6ab22efa","buildTime":1572535388.3423,"createdAt":"2016-12-01T08:05:24.884Z","user":{"community":{"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq5OlRrvic2eGlDgvr4Z0DOUib1ib7IlYDd2OPyVjwDIPZHDL1BPoyYe6nedSa5Gr3Kea1IDcpYYicCuA/132"}},"collectedEntriesCount":6,"company":"","followersCount":1,"followeesCount":0,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":1,"ngxCachedTime":1572571772,"viewedEntriesCount":34,"jobTitle":"","subscribedTagsCount":2,"totalCollectionsCount":74,"username":"哎呀@","avatarLarge":"","objectId":"57ffafd70bd1d00058e90068"},"author":"","screenshot":"","original":false,"hotIndex":110.8165,"content":"《你不知道的 JavaScript》真的是一本好书，阅读这本书，我有多次 “哦，原来是这样” 的感觉，以前自以为理解了（其实并非真的理解）的概念，这一次真的理解得更加透彻了。关于本书，我会写好几篇读书笔记用以记录那些让我恍然大悟的瞬间，本文是第一篇《弄懂 JavaScript 的作用域和闭包》","title":"弄懂 JavaScript 的作用域和闭包","lastCommentTime":"2016-12-02T05:08:20.042Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":750,"summaryInfo":"《你不知道的JavaScript》真的是一本好书，阅读这本书，我有多次“哦，原来是这样”的感觉，以前自以为理解了（其实并非真的理解）的概念，这一次真的理解得更加透彻了。关于本书，我会写好几篇读书笔记用以记录那些让我恍然大悟的瞬间，本文是第一篇《弄懂JavaScript的作用域和闭包》。 很久以来我...","isCollected":false},{"collectionCount":71,"isEvent":false,"commentsCount":4,"gfw":false,"buildTime":1572539199.3981,"checkStatus":true,"objectId":"5c259e9851882569b0245731","entryView":"","subscribersCount":0,"ngxCachedTime":1572571640,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T16:26:39.381Z","rankIndex":0.00020907999750562,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c257b61e51d451b1c6de48c","verifyCreatedAt":"2018-12-28T16:37:11.161Z","createdAt":"2018-12-28T16:37:11.161Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/XgDtWeiaKW61m13BXyLHClUM3YtibiczvEXQJujCaz17xJfJ9V6PXQniabQBictCh0FYwicQ0fOUrqX28VqOibdfHFa0Q/132"}},"collectedEntriesCount":37,"company":"","followersCount":27,"followeesCount":12,"role":"guest","postedPostsCount":6,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":12,"ngxCachedTime":1572571640,"viewedEntriesCount":618,"jobTitle":"前端程序员","subscribedTagsCount":25,"totalCollectionsCount":94,"username":"毛爷爷我男神不想说话","avatarLarge":"https://user-gold-cdn.xitu.io/2019/1/23/1687849755190710?w=1024&h=1024&f=jpeg&s=471927","objectId":"58e87c5aac502e4957bb938e"},"author":"","screenshot":"","original":true,"hotIndex":132.2543,"content":"MDN：包是函数和声明该函数的词法环境的组合。(PS:个人理解词法环境就是变量对象) Tyler McGinnis：子函数在其父级函数的变量环境上“关闭”（译者注：原文为a child function “closing” over the variable environme…","title":"从执行上下文深入理解闭包","lastCommentTime":"2018-12-29T19:40:32.849Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":1137,"summaryInfo":"关于闭包的定义我看到过好多个版本，这里简单的列举一下：MDN：包是函数和声明该函数的词法环境的组合。Tyler McGinnis：子函数在其父级函数的变量环境上“关闭”（译者注：原文为a child function “closing” over the variable environment ...","isCollected":false},{"collectionCount":70,"isEvent":false,"commentsCount":7,"gfw":false,"buildTime":1572544824.2472,"checkStatus":true,"objectId":"5c23519bf265da613f2f85b5","entryView":"","subscribersCount":0,"ngxCachedTime":1572571637,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T18:00:24.228Z","rankIndex":0.00025951403757774,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c21fd05f265da612c5deb30","verifyCreatedAt":"2018-12-27T04:28:04.426Z","createdAt":"2018-12-27T04:28:04.426Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/191f1kcTTHVFgm4XWoCRJtzLF0Q2iaHw3icBGVUTaPAX2qakyNicEYYEj9ficLLaFUoFzZjBQNpcNG4r7DQ7Muu4cQ/132"},"github":{"username":"Baddyo","avatarLarge":"https://avatars0.githubusercontent.com/u/49943038?v=4","uid":"49943038"}},"collectedEntriesCount":13,"company":"北京中科东信科技有限公司","followersCount":333,"followeesCount":28,"role":"guest","postedPostsCount":22,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":206,"ngxCachedTime":1572571615,"ngxCached":true,"viewedEntriesCount":559,"jobTitle":"前端工程师","subscribedTagsCount":88,"totalCollectionsCount":1212,"username":"👊Badd","avatarLarge":"https://user-gold-cdn.xitu.io/2018/12/26/167eb25973be2bbb?w=1024&h=1024&f=jpeg&s=748776","objectId":"5b0f6d4b6fb9a009e405dda1"},"author":"","screenshot":"","original":true,"hotIndex":165.4184,"content":"文中部分链接可能需要梯子。 欢迎批评指正。 说出来可能吓你一跳，在我看来，理解Javascript的最重要最基本的思路就是理解执行上下文。吃透了执行上下文，你就能更好地学习诸如变量提升、作用域链和闭包等进阶知识。说到这个，到底什么是“执行上下文”？为了更好理解，我们先来看一看我…","title":"【译】终极指南：变量提升、作用域和闭包","lastCommentTime":"2019-01-18T15:46:25.009Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":1764,"summaryInfo":"说出来可能吓你一跳，在我看来，理解Javascript的最重要最基本的思路就是理解执行上下文。吃透了执行上下文，你就能更好地学习诸如变量提升、作用域链和闭包等进阶知识。说到这个，到底什么是“执行上下文”？为了更好理解，我们先来看一看我们是怎么写代码的。 编程的一个策略就是把代码拆分开。虽然那些拆开...","isCollected":false},{"collectionCount":70,"commentsCount":2,"gfw":false,"objectId":"59c4bb18f265da065943214d","checkStatus":true,"buildTime":1571545164.0378,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571774,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571769,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571725,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"},{"ngxCachedTime":1572571669,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"}],"autoPass":false,"rankIndex":0.000043795882069198,"hot":false,"updatedAt":"2019-10-20T04:19:24.020Z","originalUrl":"https://segmentfault.com/a/1190000009886713?f=tt&hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io","verifyCreatedAt":"2017-09-23T04:06:03.652Z","createdAt":"2017-09-23T04:06:03.652Z","user":{"community":{"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep0QVoORp4oiamwp1RTzia58DHSoYyXyW67SCG55E79urcictLXAm86S7icBLKicX8jsouvtb6Pw2ibHubQ/0"}},"collectedEntriesCount":10,"company":"广东技术师范学院","followersCount":1,"followeesCount":20,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":7,"totalCommentsCount":2,"ngxCachedTime":1572571774,"viewedEntriesCount":169,"jobTitle":"学生","subscribedTagsCount":21,"totalCollectionsCount":139,"username":"益达","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e088a41bfe22484d","objectId":"59b37e246fb9a00a5a31c8f7"},"author":"","screenshot":null,"original":false,"hotIndex":107.26,"content":"写这篇文章之前，我对闭包的概念及原理模糊不清，一直以来都是以通俗的外层函数包裹内层....来欺骗自己。并没有说这种说法的对与错，我只是不想拥有从众心理或者也可以说如果我们说出更好更低层的东西，逼格会提升好几个档次。。。\n谈起闭包，它可是JavaScript两个核心技术之一(异步…","title":"深入贯彻闭包思想，全面理解JS闭包形成过程","lastCommentTime":"2017-09-25T21:56:11.549Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":705,"summaryInfo":"谈起闭包，它可是JavaScript两个核心技术之一(异步和闭包),在面试以及实际应用当中，我们都离不开它们，甚至可以说它们是衡量js工程师实力的一个重要指标。下面我们就罗列闭包的几个常见问题，从回答问题的角度来理解和定义。 1.闭包是指有权访问另一个函数作用域中的变量的函数 2.函数对象可以通过...","isCollected":false},{"collectionCount":68,"commentsCount":0,"gfw":false,"entryView":"5874b354ac502e006c317bd2","subscribersCount":0,"ngxCachedTime":1572571641,"updatedAt":"2019-10-29T05:03:07.271Z","tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"5874b34cb123db4a2ece85ed","rankIndex":0.000030586098296311,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/12f6cde4ffe9","buildTime":1572325387.2878,"createdAt":"2017-01-10T10:11:24.325Z","user":{"community":{"github":{"email":"athan1114@gmail.com","uid":"16577468","nickname":"Athan Zhang"},"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmopen/AQlhEHicCRWEMF5ZuRUMhWKA29DVQPr7ibrxictic6UxvqNmtZ9zeyvOpmCBaYalr2ouaFnvkCesiatvAricg3ictNzJ6mfdic1sibhAK/0"}},"collectedEntriesCount":238,"company":"华为","followersCount":4,"followeesCount":45,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":0,"ngxCachedTime":1572571641,"viewedEntriesCount":458,"jobTitle":"前端开发","subscribedTagsCount":22,"totalCollectionsCount":139,"username":"athan","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/f298ad0cbccfb54d2202cd4853682709","objectId":"578851c61532bc0061cbe0e6"},"author":"","screenshot":"","original":false,"hotIndex":117.4647,"content":"翻译加自身理解","title":"javaScript 闭包理解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":984,"summaryInfo":"今天，看到javaScript闭包这一块的地方，不得不说，第一次接触这样的函数行为，是很难理解的，也是研究了半天，才总算理解了闭包这个牛逼的“东西”； 首先，什么是闭包，简单来说，就是内部函数（inner function）可以访问外部函数（outer function）的变量以及参数（注意inn...","isCollected":false},{"collectionCount":67,"commentsCount":3,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571643,"updatedAt":"2019-10-23T07:25:48.014Z","tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"594776f4a0bb9f006bd8cbeb","rankIndex":0.000031702113942539,"hot":false,"autoPass":false,"originalUrl":"https://kongchenglc.github.io/blog/%E9%97%AD%E5%8C%8520170604/","buildTime":1571815548.0323,"createdAt":"2017-06-19T07:02:12.323Z","user":{"community":{"github":{"username":"kongchenglc","avatarLarge":"https://avatars2.githubusercontent.com/u/20537203?v=4","uid":"20537203"}},"collectedEntriesCount":34,"company":"西邮","followersCount":5,"followeesCount":8,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":9,"totalCommentsCount":13,"ngxCachedTime":1572571580,"ngxCached":true,"viewedEntriesCount":840,"jobTitle":"web前端","subscribedTagsCount":26,"totalCollectionsCount":298,"username":"leon1494209395507","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e084a04f8416f301","objectId":"590fd373ac502e00654b9806"},"author":"","screenshot":"","original":false,"hotIndex":93.3598,"content":"js 闭包的学习笔记","title":"关于 js 闭包","lastCommentTime":"2018-04-05T19:49:26.902Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":467,"summaryInfo":"在了解闭包之前，先要熟悉以下几点：  1. 首先要理解执行环境，执行环境定义了变量或函数有权访问的其他数据。  2. 每个执行环境都有一个与之关联的变量对象，环境中定义的所有变量和函数都保存在这个对象中。  3. 每个函数都有自己的执行环境，当执行流进入一个函数时，函数的环境就会被推入到一个环境栈...","isCollected":false},{"collectionCount":66,"autoPass":false,"commentsCount":8,"gfw":false,"buildTime":1572404264.6193,"checkStatus":true,"objectId":"5adc18c8518825671a635bf7","entryView":"","subscribersCount":0,"ngxCachedTime":1572571763,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571747,"ngxCached":true,"title":"Node.js","id":"555e9a77e4b00c57d9955d64"},{"ngxCachedTime":1572571725,"ngxCached":true,"title":"jQuery","id":"5599f577e4b08a686d142949"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.00010150406024235,"hot":false,"updatedAt":"2019-10-30T02:57:44.602Z","originalUrl":"https://juejin.im/post/5adc18896fb9a07ab110c183","verifyCreatedAt":"2018-04-23T03:48:45.296Z","createdAt":"2018-04-23T03:48:45.296Z","user":{"community":{"github":{"username":"lhyt","avatarLarge":"https://avatars1.githubusercontent.com/u/33994612?v=4","uid":"33994612"}},"collectedEntriesCount":5,"company":"腾讯","followersCount":794,"followeesCount":4,"role":"guest","postedPostsCount":42,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":213,"ngxCachedTime":1572571763,"viewedEntriesCount":3437,"jobTitle":"钱端公诚施","subscribedTagsCount":6,"totalCollectionsCount":2646,"username":"lhyt","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08ed4b3ad345884","objectId":"5acc4ab4f265da239148703d"},"author":"","screenshot":"","original":true,"hotIndex":156.044,"content":"主要结合了内存的概念讲了js的一些的很简单、但是又不小心就犯错的地方。 结论：js执行顺序，先定义，后执行，从上到下，就近原则。闭包可以让外部访问某函数内部变量，而且会导致内存泄漏。 引用类型的值，也就是对象，一个对象是某个引用类型的一个实例，用new操作符创建也可以用字面量的…","title":"浅谈js的内存与闭包","lastCommentTime":"2018-11-30T15:39:28.237Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":1629,"summaryInfo":"主要结合了内存的概念讲了js的一些的很简单、但是又不小心就犯错的地方。结论：js执行顺序，先定义，后执行，从上到下，就近原则。闭包可以让外部访问某函数内部变量，而且会导致内存泄漏。 在ECMAscript数据类型有基本类型和引用类型，基本类型有Undefined、Null、Boolean、Numb...","isCollected":false},{"collectionCount":64,"commentsCount":11,"gfw":false,"entryView":"58c60ae5a22b9d0058b1064d","subscribersCount":17,"ngxCachedTime":1572571635,"updatedAt":"2019-10-31T05:43:35.685Z","tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58c60adf61ff4b005d9e1593","rankIndex":0.00005235899358501,"hot":false,"autoPass":false,"originalUrl":"https://github.com/houyhea/blog/blob/master/20150524.md","buildTime":1572500615.705,"createdAt":"2017-03-13T02:58:39.089Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep0QVoORp4oiaozKibpoSbgJgC4libaDib254UayPrS0zSwryibPgNyxj1RMjdegiaCEXmA9ribEMe3S69pg/132"}},"collectedEntriesCount":193,"company":"","followersCount":3443,"followeesCount":56,"role":"editor","postedPostsCount":5,"level":2,"isAuthor":true,"postedEntriesCount":39,"totalCommentsCount":100,"ngxCachedTime":1572571587,"ngxCached":true,"viewedEntriesCount":2225,"jobTitle":"前端一枚","subscribedTagsCount":85,"totalCollectionsCount":1583,"username":"houyhea","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/2f59e08621db31d615d593311d0c3c11","objectId":"57c635bcd342d3006b3bf714"},"author":"","screenshot":"","original":false,"hotIndex":183.7285,"content":"一张图搞定闭包概念","title":"一张图搞定闭包概念","lastCommentTime":"2017-03-13T12:52:35.683Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":2161,"summaryInfo":"我比较倾向于《javascript权威指南》的解释。我用稚嫩的手法画了一张图，描述一下嵌套函数的闭包情况。","isCollected":false},{"collectionCount":62,"autoPass":false,"commentsCount":4,"gfw":false,"buildTime":1572350528.0343,"checkStatus":true,"objectId":"5b481cdce51d4519520e5244","entryView":"","subscribersCount":0,"ngxCachedTime":1572571772,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000097071086776686,"hot":false,"updatedAt":"2019-10-29T12:02:08.015Z","originalUrl":"https://juejin.im/post/5b481cc9e51d45192562850f","verifyCreatedAt":"2018-07-13T07:36:57.083Z","createdAt":"2018-07-13T07:36:57.083Z","user":{"community":{"weibo":{"selfDescription":"","uid":"6516767126","blogAddress":"http://weibo.com/u/6516767126","username":"不言弃的周大侠","avatarLarge":"http://tvax3.sinaimg.cn/default/images/default_avatar_male_180.gif"},"github":{"username":"zhoudaxiaa","avatarLarge":"https://avatars1.githubusercontent.com/u/22782052?v=4","uid":"22782052"}},"collectedEntriesCount":7,"company":"清达云计算","followersCount":66,"followeesCount":8,"role":"guest","postedPostsCount":26,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":8,"ngxCachedTime":1572571772,"viewedEntriesCount":735,"jobTitle":"前端","subscribedTagsCount":33,"totalCollectionsCount":213,"username":"周大侠啊","avatarLarge":"https://user-gold-cdn.xitu.io/2018/3/30/16275588a2a28f88?w=220&h=220&f=png&s=69551","objectId":"58b6acb88ac2470065a7f7aa"},"author":"","screenshot":"","original":true,"hotIndex":117.4923,"content":"一、函数也是引用类型的。 其实，就是引用类型 和 基本类型的 区别。 基本类型时，变量保存的是数据，引用类型时，变量保存的是内存地址。参数传递，就是把变量保存的值 复制给 参数。 JavaScript 具有自动垃圾收集机制，执行环境会负责管理代码执行过程中使用的内存。函数中，正…","title":"进击的 JavaScript（四） 之 闭包","lastCommentTime":"2018-07-15T10:11:25.038Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":1028,"summaryInfo":"上一节说了执行上下文，这节咱们就乘胜追击来搞搞闭包！头疼的东西让你不再头疼！ 其实，就是引用类型 和 基本类型的 区别。 二、函数创建一个参数，就相当于在其内部声明了该变量 三、参数传递，就相当于变量复制（值的传递） 基本类型时，变量保存的是数据，引用类型时，变量保存的是内存地址。参数传递，就是把...","isCollected":false},{"collectionCount":62,"isEvent":false,"commentsCount":4,"gfw":false,"buildTime":1572406117.1807,"checkStatus":true,"objectId":"5c3893d56fb9a049c0433f0d","entryView":"","subscribersCount":0,"ngxCachedTime":1572571638,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T03:28:37.159Z","rankIndex":0.0002520034524379,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c3893bc6fb9a049d37f530f","verifyCreatedAt":"2019-01-11T15:12:50.275Z","createdAt":"2019-01-11T15:12:50.275Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIlKb3ib1u1WqOb8UukgQ3rgldBHw2mOTpzsfTG9BXH33YCFh6TaRiakR5KnjGzBicU2hsL721BCHX0w/132"}},"collectedEntriesCount":270,"company":"自由","followersCount":242,"followeesCount":59,"role":"guest","postedPostsCount":21,"level":3,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":91,"ngxCachedTime":1572571533,"ngxCached":true,"viewedEntriesCount":2203,"jobTitle":"前端","subscribedTagsCount":67,"totalCollectionsCount":831,"username":"4Ark","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/24/169ab761326206b7?w=460&h=460&f=png&s=49263","objectId":"5a4f6e2c6fb9a01cb508a127"},"author":"","screenshot":"","original":true,"hotIndex":147.5023,"content":"继上一篇《理解 JavaScript 中的作用域》后，我又立刻写下了这篇文章，因为这两者是存在关联的，在理解闭包前，你需要知道作用域。 而对于那些有一点 JavaScript 使用经验的人来说，理解闭包可以看做是某种意义上的重生，但这并不简单，你需要付出非常多的努力和牺牲才能理…","title":"理解 JavaScript 中的闭包","lastCommentTime":"2019-01-23T15:34:11.661Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":1627,"summaryInfo":"继上一篇《理解 JavaScript 中的作用域》后，我又立刻写下了这篇文章，因为这两者是存在关联的，在理解闭包前，你需要知道作用域。 而对于那些有一点 JavaScript 使用经验的人来说，理解闭包可以看做是某种意义上的重生，但这并不简单，你需要付出非常多的努力和牺牲才能理解这个概念。 如果你...","isCollected":false},{"collectionCount":62,"userRankIndex":13.097896169971,"buildTime":1572519761.0193,"commentsCount":22,"gfw":false,"objectId":"5cf8dd3ee51d455d6d5357d2","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571634,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T11:02:41.002Z","rankIndex":0.0010414111775523,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cf8612df265da1bcb4f1bf8","verifyCreatedAt":"2019-06-06T09:37:06.932Z","createdAt":"2019-06-06T09:37:06.932Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLiaibvicQdq1Uzcwh74EHYyfXjbLOPxvIKkV0dZQDt5ddWh74vmqNuNTp6CiarZF9r0PngiamE3svJM9w/132"}},"collectedEntriesCount":124,"company":"BUG搬运公司","followersCount":4120,"followeesCount":28,"role":"guest","postedPostsCount":11,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":230,"ngxCachedTime":1572571532,"ngxCached":true,"viewedEntriesCount":3743,"jobTitle":"临时工","subscribedTagsCount":12,"totalCollectionsCount":2906,"username":"幻灵尔依","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e09b9430f8db44bb","objectId":"5c395fb5e51d454ddb2bd18c"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/6/7/16b2fe557a13afd5?w=1920&h=1080&f=jpeg&s=132974","original":true,"hotIndex":205.3576,"content":"js 中的作用域是词法作用域，是由 函数声明时 所在的位置决定的。词法作用域是指在编译阶段就产生的，一整套函数标识符的访问规则。 说到底js的作用域只是一个“空地盘”，其中并没有真实的变量，但是却定义了变量如何访问的规则。（词法作用域是在编译阶段就确认的，区别于词法作用域，动态…","title":"JS基础篇之作用域、执行上下文、this、闭包","lastCommentTime":"2019-06-11T18:05:41.540Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":2427,"summaryInfo":"js中的作用域是词法作用域，即由 函数声明时 所在的位置决定的。词法作用域是指在编译阶段就产生的，一整套函数标识符的访问规则。（区别于词法作用域，动态作用域是在函数执行的时候确认的，js的没有动态作用域，但js的很像动态作用域，后面会提到。词法作用域的概念十分重要，请多加记忆并理解。） 说到底js...","isCollected":false},{"collectionCount":57,"commentsCount":0,"gfw":false,"entryView":"581d4f19bf22ec0068c4f319","subscribersCount":0,"ngxCachedTime":1572571392,"updatedAt":"2019-08-23T02:00:02.088Z","tags":[{"ngxCachedTime":1572571347,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"},{"ngxCachedTime":1572571377,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571375,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"}],"objectId":"581d2b5ca22b9d0067bc2dda","rankIndex":0.00002645243499425,"hot":false,"autoPass":false,"originalUrl":"http://liujiacai.net/blog/2016/05/28/scope-closure/","buildTime":1566525602.1054,"createdAt":"2016-11-05T00:44:12.549Z","user":{"community":{"weibo":{"avatar_url":"http://tva2.sinaimg.cn/crop.0.0.193.193.180/5fee18eegw1ejclkxvjp2j205e05ejrr.jpg","uid":"1609439470","nickname":"jiacai2050"},"github":{"username":"jiacai2050","avatarLarge":"https://avatars1.githubusercontent.com/u/3848910?v=4","uid":"3848910"}},"collectedEntriesCount":16,"company":"","followersCount":621,"followeesCount":7,"role":"editor","postedPostsCount":9,"level":2,"isAuthor":true,"postedEntriesCount":11,"totalCommentsCount":24,"ngxCachedTime":1572571295,"ngxCached":true,"viewedEntriesCount":556,"jobTitle":"后端工程师","subscribedTagsCount":20,"totalCollectionsCount":765,"username":"jiacai2050","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e083046b71f7a16b","objectId":"57c2431b165abd00665ee39f"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/ca3c56d6919c59b990e3.png","original":true,"hotIndex":101.4802,"content":"这篇文章首先介绍作用域相关的知识，主要是比较 dynamic scope 与 static(或 lexical) scope 语言的优劣势；然后分析 Python 中为什么需要 global 和 nonlocal，Javascript 为什么有变量提升，我这里不仅仅是介绍 what，更重要的是 why，要知道这两门语言的设计者都是深耕 CS 领域多年的老手，不会轻易犯错的，肯定有 “不为人知” 的一面，但遗憾的是网上大部分文章就是解释 what，很少有涉及到 why 的，希望我这篇文章能够填充这一空缺；最后介绍闭包这一重要概念。","title":"编程语言中的变量作用域与闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571340},"viewsCount":887,"summaryInfo":"文章目录如果你写过 javascript，应该听说过变量提升（hoisting），如果你自诩“Life is short, I use Python”，那么多多少少会用过、这两个关键字。无论新手还是老手，遇到这些时都会觉得很别扭，稍不留神就会出现意想不到的 bug，如果你仔细观察就会发现，它们其实...","isCollected":false},{"collectionCount":57,"isEvent":false,"commentsCount":12,"gfw":false,"buildTime":1572488102.59,"checkStatus":true,"objectId":"5c74f477518825626b76fd14","entryView":"","subscribersCount":0,"ngxCachedTime":1572571764,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-31T02:15:02.573Z","rankIndex":0.00032333695936754,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c723d90f265da2dc0065bdb","verifyCreatedAt":"2019-02-26T09:35:03.956Z","createdAt":"2019-02-26T09:35:03.956Z","user":{"community":{"weibo":{"selfDescription":"","uid":"1851763907","blogAddress":"http://weibo.com/u/1851763907","username":"拾雪在海边","avatarLarge":"https://tvax1.sinaimg.cn/default/images/default_avatar_male_180.gif?KID=imgbed,tva&Expires=1566980318&ssig=szGFO0hCXa"}},"collectedEntriesCount":137,"company":"","followersCount":37,"followeesCount":50,"role":"guest","postedPostsCount":2,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":29,"ngxCachedTime":1572571764,"viewedEntriesCount":1970,"jobTitle":"","subscribedTagsCount":94,"totalCollectionsCount":236,"username":"拾雪儿在海边","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/e761c2bd69409613d4222d2884275b5b","objectId":"5656939c00b0bf3785d3e8ff"},"author":"","screenshot":"","original":true,"hotIndex":147.3402,"content":"如果你不知道这段代码可能带来的问题，那么这篇文章就值得你读一读。 在 JS引擎 中，是通过执行上下文栈来管理和执行代码的。上述代码的伪执行过程如下（本节内容主要参考冴羽大大的系列文章）： 在执行过程中，不断改变 VO，执行到 a = 1 语句，将 VO 中的 a 置为 1，执行…","title":"前端小秘密系列之闭包","lastCommentTime":"2019-02-28T11:41:09.826Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":1554,"summaryInfo":"直接进入主题，上一段简短的代码： 如果你不知道这段代码可能带来的问题，那么这篇文章就值得你读一读。 我们先把上面的问题放一放，先让我们来看一看下面这段简单的代码： 在 中，是通过执行上下文栈来管理和执行代码的。上述代码的伪执行过程如下（本节内容主要参考冴羽大大的系列文章）： 初始化作用域链属性 为...","isCollected":false},{"collectionCount":56,"commentsCount":3,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571777,"updatedAt":"2019-10-25T20:05:14.195Z","tags":[{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"59808f3d51882537ad02b67a","rankIndex":0.000035841141729353,"hot":false,"autoPass":false,"originalUrl":"https://github.com/carolineLH/Js_project/blob/master/README.md","buildTime":1572033914.2122,"createdAt":"2017-08-02T03:32:56.071Z","user":{"community":{"github":{"username":"carolineLH","avatarLarge":"https://avatars3.githubusercontent.com/u/29778950?v=4","uid":"29778950"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTInR8EFnGZwPrbTSGQbNLZtZNgJkEoHoeyibviaqiaVKDP46AwG0k5Z7hiaV9mCTQJDoubiaQjSUOUuwKQ/132"}},"collectedEntriesCount":90,"company":"","followersCount":140,"followeesCount":27,"role":"editor","postedPostsCount":3,"level":2,"isAuthor":true,"postedEntriesCount":6,"totalCommentsCount":51,"ngxCachedTime":1572571769,"ngxCached":true,"viewedEntriesCount":1312,"jobTitle":"前端","subscribedTagsCount":26,"totalCollectionsCount":862,"username":"caraline","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/3/0d283929b99873535d3c8e67a893bd72","objectId":"5958b512f265da6c2f0a9edb"},"author":"","screenshot":"","original":true,"hotIndex":97.9986,"content":"闭包，似乎是JavaScript中分离出来的一个未开化的世界，有无尽的宝藏，让我们一起去探险吧！😊","title":"作用域闭包","lastCommentTime":"2017-08-03T09:44:36.602Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":776,"summaryInfo":"想要好好的理解闭包，你得首先理解作用域。别说了，赶紧去看作用域吧， 😩，这世界就是如此残酷。好，言归正传，我们是来学习闭包的。O(∩_∩)O 百度了一波,but理解不了哇。别怕，我来帮你。其实，可以这样理解的：魔术师的幕后藏着一个人，我们要揭开他的伪装，伪装之后的那个人是..知道你会说就是闭包了。...","isCollected":false},{"collectionCount":56,"commentsCount":4,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571780,"updatedAt":"2019-09-19T08:57:23.638Z","tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571752,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"},{"ngxCachedTime":1572571689,"ngxCached":true,"title":"Ajax","id":"583be32dac502e006c224d21"}],"objectId":"59b26fb05188257e9167e2d5","rankIndex":0.000036277384053235,"hot":false,"autoPass":false,"originalUrl":"http://www.shuaihua.cc/article/understand-closure-in-javascript/","buildTime":1568883443.6563,"createdAt":"2017-09-08T10:51:50.925Z","user":{"community":{"weibo":{"selfDescription":"","uid":"1633765810","blogAddress":"http://weibo.com/lanserdi","username":"帅华君吖","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.0.500.500.180/616149b2ly8g56groduibj20dw0dx49l.jpg?Expires=1563642035&ssig=FIfQ09q7Be&KID=imgbed,tva"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJzVbpVFm6icwyfBb9NXXugptqGhMeu3AcItO4ljkgF3LU7Gffvo7BIWzCghsW6LJxeFoo66PlAnsQ/132"},"github":{"username":"airglass","avatarLarge":"https://avatars3.githubusercontent.com/u/10203349?v=4","uid":"10203349"}},"collectedEntriesCount":6,"company":"","followersCount":5009,"followeesCount":1,"role":"guest","postedPostsCount":6,"level":1,"isAuthor":false,"postedEntriesCount":58,"totalCommentsCount":29,"ngxCachedTime":1572571742,"ngxCached":true,"viewedEntriesCount":340,"jobTitle":"","subscribedTagsCount":16,"totalCollectionsCount":1518,"username":"陈帅华","avatarLarge":"https://user-gold-cdn.xitu.io/2019/7/28/16c3742a1198f1a2?w=100&h=103&f=jpeg&s=6341","objectId":"57e54ee25bbb50005d4ce895"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/9/8/3f81e2eeb5635cbe306dcc96b1bfc864","original":true,"hotIndex":86.0294,"content":"同样，闭包和原型链都是Js中有点难度的知识点，所以看本文之前需要较熟悉Javascript基础语法。\n\n这篇文章纠结了几个月一直想不到合适的栗子来一气呵成的讲解JS中闭包的概念，上一篇介绍原型链的时候举的是生物进化链和遗传的例子。终于过了一个年，想到了一个也许有些敏感但是蛮合适的栗子，受去年的毕业设计启发， 想到了这样的一个栗子————不同国家对同性婚姻的态度对家庭和个人的作用。","title":"理解Javascript中的闭包概念","lastCommentTime":"2017-09-10T07:31:58.672Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":508,"summaryInfo":"","isCollected":false},{"collectionCount":56,"autoPass":false,"commentsCount":5,"gfw":false,"buildTime":1572505247.8958,"checkStatus":true,"objectId":"5abb5b8b6fb9a028cb2dada0","entryView":"","subscribersCount":0,"ngxCachedTime":1572571774,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571769,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571705,"ngxCached":true,"title":"程序员","id":"55c1748160b28fd99e49ea68"}],"isEvent":false,"rankIndex":0.000065679228237517,"hot":false,"updatedAt":"2019-10-31T07:00:47.876Z","originalUrl":"https://juejin.im/post/5abb5b5d5188255c2721fc02","verifyCreatedAt":"2018-03-29T06:02:29.618Z","createdAt":"2018-03-29T06:02:29.618Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eprONRsZYicPhprqn7Im3jaTgHxq6N0gTiaHe3CYFicsVjhB1dbicib9UiaJk0KicAl1LhdQTzQAuvkicIW4Q/132"}},"collectedEntriesCount":7,"company":"","followersCount":529,"followeesCount":13,"role":"guest","postedPostsCount":6,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":32,"ngxCachedTime":1572571774,"viewedEntriesCount":122,"jobTitle":"","subscribedTagsCount":33,"totalCollectionsCount":389,"username":"TONGZ","avatarLarge":"https://user-gold-cdn.xitu.io/2018/5/20/1637a8b3e27583fc?w=1239&h=1209&f=png&s=369437","objectId":"5a5df3f051882573233528f1"},"author":"","screenshot":"","original":true,"hotIndex":108.1686,"content":"本篇文章介绍了闭包，方便程序员们能够进一步理解javascript代码，本文适合有一定编程经验的程序员，比如可以看懂如下代码：大神请绕道。 一旦深刻理解了核心概念，闭包就并不难分析和运用了。 第一级函数支持闭包。闭包它是一个表达式，可以在闭包的范围内引用变量（当它被首次声明），…","title":"Javascript 闭包并非魔法","lastCommentTime":"2018-03-31T08:54:06.305Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":926,"summaryInfo":"本篇文章介绍了闭包，方便程序员们能够进一步理解javascript代码，本文适合有一定编程经验的程序员，比如可以看懂如下代码：大神请绕道。 一旦深刻理解了核心概念，闭包就并不难分析和运用了。 大多数JavaScript程序员都了解如何将一个函数的引用赋给上述代码中的变量。如果你不了解，那么在学习闭...","isCollected":false},{"collectionCount":55,"autoPass":false,"commentsCount":4,"gfw":false,"buildTime":1571995486.8681,"checkStatus":true,"objectId":"5bfe079151882512d444f0d3","entryView":"","subscribersCount":0,"ngxCachedTime":1572571771,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.00016893844999654,"hot":false,"updatedAt":"2019-10-25T09:24:46.851Z","originalUrl":"https://juejin.im/post/5bfe076651882516da0e2300","verifyCreatedAt":"2018-11-28T03:14:42.891Z","createdAt":"2018-11-28T03:14:42.891Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/ovxG1bicQhea1CxIrjc2zjNtVA0UHBa2cTiaQwpdOUBpRpjyQiaTTSKK4OuWrW6Sia6XbicibuGV6UPOvaW2QEQlEAmw/132"}},"collectedEntriesCount":20,"company":"Independent Developer","followersCount":43,"followeesCount":6,"role":"guest","postedPostsCount":8,"level":2,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":18,"ngxCachedTime":1572571771,"viewedEntriesCount":1880,"jobTitle":"程序员","subscribedTagsCount":7,"totalCollectionsCount":347,"username":"Real_Aaron","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/3/16c5643a068462b3?w=748&h=728&f=png&s=183469","objectId":"57e147e35bbb50005e7848f6"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/11/28/167584d239e57c2d?w=2000&h=1148&f=jpeg&s=276249","original":true,"hotIndex":119.7774,"content":"闭包是JavaScript中一个基本的概念，每个JavaScript开发者都应该知道和理解的。然而，很多新手JavaScript开发者对这个概念还是很困惑的。 正确理解闭包可以帮助你写出更好、更高效、简洁的代码。同时，这将会帮助你成为更好的JavaScript开发者。 因此，在…","title":"【译】理解JavaScript闭包——新手指南","lastCommentTime":"2018-11-28T20:54:42.336Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":1197,"summaryInfo":"闭包是JavaScript中一个基本的概念，每个JavaScript开发者都应该知道和理解的。然而，很多新手JavaScript开发者对这个概念还是很困惑的。 正确理解闭包可以帮助你写出更好、更高效、简洁的代码。同时，这将会帮助你成为更好的JavaScript开发者。 因此，在这篇文章中，我将会尝...","isCollected":false},{"collectionCount":53,"commentsCount":6,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572570998,"updatedAt":"2019-10-25T09:53:33.346Z","tags":[{"ngxCachedTime":1572570961,"ngxCached":true,"title":"PHP","id":"555e9a84e4b00c57d9955e1b"},{"ngxCachedTime":1572570950,"ngxCached":true,"title":"Laravel","id":"56002b2360b25a8cbc102f57"}],"objectId":"598c26185188257da64be2c9","rankIndex":0.000045594823521186,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/598c25f4518825486b16e363","buildTime":1571997213.3633,"createdAt":"2017-08-10T09:23:36.407Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erkZYnpDuNBg6MeMmh1hEibeb9oYdppIjnmwdwA3vkkiczp5yZ2gLtiaYUxmlAGT70JAyKofwbNp8siaw/132"},"github":{"username":"xx19941215","avatarLarge":"https://avatars0.githubusercontent.com/u/10104328?v=4","uid":"10104328"}},"collectedEntriesCount":39,"company":"","followersCount":3021,"followeesCount":22,"role":"editor","postedPostsCount":23,"level":3,"isAuthor":true,"postedEntriesCount":8,"totalCommentsCount":55,"ngxCachedTime":1572570904,"ngxCached":true,"viewedEntriesCount":639,"jobTitle":"Web开发","subscribedTagsCount":26,"totalCollectionsCount":1665,"username":"萧潇","avatarLarge":"https://user-gold-cdn.xitu.io/2018/9/16/165dff14331e077a?w=245&h=245&f=jpeg&s=49114","objectId":"596c3f7a5188252a092fa9fc"},"author":"","screenshot":"","original":true,"hotIndex":122.6833,"content":"闭包 闭包是什么？ 1).闭包和匿名函数在PHP5.3中被引入。 2).闭包是指在创建时封装函数周围状态的函数，即使闭包所在的环境不存在了，闭包封装的状态依然存在，这一点和Javascript的闭包特性很相似。 3).匿名函数就是没有名称的函数，匿名函数可以赋值给变量，还可以像其…","title":"PHP新特性之闭包、匿名函数","lastCommentTime":"2017-09-03T22:06:07.113Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572570979},"viewsCount":1265,"summaryInfo":"","isCollected":false},{"collectionCount":53,"commentsCount":3,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571780,"updatedAt":"2019-09-19T07:47:15.443Z","tags":[{"ngxCachedTime":1572571780,"ngxCached":false,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"5987bd90f265da3e161a87f8","rankIndex":0.000033532123908199,"hot":false,"autoPass":false,"originalUrl":"https://blog.fundebug.com/2017/08/07/javascript-closure-examples/","buildTime":1568879235.46,"createdAt":"2017-08-07T08:08:13.028Z","user":{"community":{"weibo":{"selfDescription":"专业的应用BUG监控服务提供商，支持前端网页、微信小程序、微信小游戏、支付宝小程序、React Native、Java、Node.js。","uid":"5660357147","blogAddress":"http://weibo.com/fundebug","username":"Fundebug","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.0.255.255.180/006b4ht1ly8feeavqlswlj30740743yf.jpg"},"github":{"username":"Fundebug","avatarLarge":"https://avatars2.githubusercontent.com/u/26496557?v=4","uid":"26496557"}},"collectedEntriesCount":409,"company":"Fundebug","followersCount":19738,"followeesCount":105,"role":"guest","postedPostsCount":275,"level":5,"isAuthor":false,"postedEntriesCount":255,"totalCommentsCount":956,"ngxCachedTime":1572571748,"ngxCached":true,"viewedEntriesCount":2729,"jobTitle":"技术总监","subscribedTagsCount":12,"totalCollectionsCount":17159,"username":"Fundebug","avatarLarge":"https://leancloud-gold-cdn.xitu.io/c1767dd5e5217d2dd216.png?imageView/2/w/100/h/100/q/80/format/png","objectId":"587d9f69b123db4d5e7ed9e3"},"author":"","screenshot":"","original":true,"hotIndex":84.7364,"content":"JavaScript 闭包","title":"通过示例学习JavaScript闭包","lastCommentTime":"2017-09-05T20:28:31.726Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":566,"summaryInfo":"","isCollected":false},{"collectionCount":51,"commentsCount":1,"gfw":false,"entryView":"580260b65bbb50005b6dcdd1","subscribersCount":1,"ngxCachedTime":1572484305,"updatedAt":"2019-10-30T03:16:14.470Z","tags":[{"ngxCachedTime":1572484270,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"},{"ngxCachedTime":1572484303,"ngxCached":true,"title":"APP","id":"5598efd4e4b04fe7027b23a4"},{"ngxCachedTime":1572484302,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"},{"ngxCachedTime":1572484231,"ngxCached":true,"title":"Xcode","id":"55d5a7a760b22b8d7dd21fcc"}],"objectId":"580260b58ac2470058fc4aeb","rankIndex":0.000027113029937014,"hot":true,"autoPass":false,"originalUrl":"https://juejin.im/post/58026021da2f60004fdc3c48","buildTime":1572405374.4931,"createdAt":"2016-10-15T17:00:37.832Z","user":{"community":{"weibo":{"avatar_url":"http://tva2.sinaimg.cn/crop.0.0.750.750.180/72d10fc2jw8f1l964r6u6j20ku0kuaag.jpg","uid":"1926303682","nickname":"没故事的卓同学"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ergNK1vI32HjmicB66ZQr1cPNicjhTRKmyVELG2TFx3yEVWtguK0lsz5tNUJ3OeMzB7EKRdMHSib3dCw/132"}},"collectedEntriesCount":330,"company":"奇志科技","followersCount":9652,"followeesCount":73,"role":"editor","postedPostsCount":73,"level":4,"isAuthor":true,"postedEntriesCount":50,"totalCommentsCount":329,"ngxCachedTime":1572484219,"ngxCached":true,"viewedEntriesCount":2102,"jobTitle":"iOS developer","subscribedTagsCount":16,"totalCollectionsCount":4762,"username":"没故事的卓同学","avatarLarge":"https://lc-gold-cdn.xitu.io/YwK6BdSDim4RFOCgDhbOHhB","objectId":"5624c86b60b2b199f7611227"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/9b62c90392e522280129.jpg","original":true,"hotIndex":117.8061,"content":"Xcode8的调试技能又增加了一个黑科技：Memory Graph。简单的说就是可以在运行时将内存中的对象生成一张图。在现场的开发者听到了这个消息时响起了雷鸣般的掌声！我们来看看前方记者发回的现场照片： 妈妈说再也不用担心引用循环啦！除非你是个瞎子。那么通过一个实际项目来练习一…","title":"Xcode8调试黑科技：Memory Graph实战解决闭包引用循环问题","lastCommentTime":"2017-04-27T05:55:35.218Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484274},"viewsCount":1307,"summaryInfo":"Xcode8的调试技能又增加了一个黑科技：Memory Graph。简单的说就是可以在运行时将内存中的对象生成一张图。在现场的开发者听到了这个消息时响起了雷鸣般的掌声！我们来看看前方记者发回的现场照片： 妈妈说再也不用担心引用循环啦！除非你是个瞎子。那么通过一个实际项目来练习一下吧。首先我们写了一...","isCollected":false},{"collectionCount":50,"isEvent":false,"commentsCount":4,"gfw":false,"buildTime":1572516117.9896,"checkStatus":true,"objectId":"5c808e416fb9a04a0b22f391","entryView":"","subscribersCount":0,"ngxCachedTime":1572571637,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T10:01:57.975Z","rankIndex":0.00037326314793741,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c808dc46fb9a04a10300f7f","verifyCreatedAt":"2019-03-07T03:32:12.829Z","createdAt":"2019-03-07T03:32:12.829Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/20T4al0niay5uohibhibqDMoibcHqibY42h5dotZXnwwhey6ia01A0KZKgvDz7ckicEpTwdCJYXFgezicC32hWPWycnqEA/132"}},"collectedEntriesCount":87,"company":"","followersCount":319,"followeesCount":32,"role":"guest","postedPostsCount":72,"level":3,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":121,"ngxCachedTime":1572571522,"ngxCached":true,"viewedEntriesCount":1580,"jobTitle":"前端开发","subscribedTagsCount":54,"totalCollectionsCount":1028,"username":"JS菌","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/30/169cd23c307cddf3?w=1024&h=768&f=png&s=63204","objectId":"59af6538f265da246d6b2a25"},"author":"","screenshot":"","original":true,"hotIndex":161.4551,"content":"常见的变量作用域就是 静态作用域（词法作用域） 与 动态作用域 。词法作用域注重的是 write-time ，即 编程时的上下文 ，而 动态作用域 则注重的是 run-time ，即 运行时上下文 。词法作用域中我们需要知道一个函数 在什么地方被定义 ，而动态作用域中我们需要关…","title":"🎁大白话解释作用域和闭包是个啥","lastCommentTime":"2019-03-11T22:54:42.142Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":2148,"summaryInfo":"常见的变量作用域就是 静态作用域（词法作用域） 与 动态作用域 。词法作用域注重的是 WRITE-TIME ，即 编程时的上下文 ，而 动态作用域 则注重的是 RUN-TIME ，即 运行时上下文 。词法作用域中我们需要知道一个函数 在什么地方被定义 ，而动态作用域中我们需要关心的是函数 在什么地...","isCollected":false},{"collectionCount":50,"isEvent":false,"commentsCount":8,"gfw":false,"buildTime":1572456991.1833,"checkStatus":true,"objectId":"5caa176c6fb9a05e5b2ae032","entryView":"","subscribersCount":0,"ngxCachedTime":1572571640,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T17:36:31.165Z","rankIndex":0.00036086263880088,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ca995626fb9a05e1a7aabd8","verifyCreatedAt":"2019-04-07T23:39:17.211Z","createdAt":"2019-04-07T23:39:17.211Z","user":{"community":{"github":{"username":"YanceyOfficial","avatarLarge":"https://avatars2.githubusercontent.com/u/30535332?v=4","uid":"30535332"}},"collectedEntriesCount":352,"company":"进击的前端","followersCount":466,"followeesCount":86,"role":"guest","postedPostsCount":15,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":185,"ngxCachedTime":1572571640,"viewedEntriesCount":5122,"jobTitle":"公众号","subscribedTagsCount":8,"totalCollectionsCount":1361,"username":"YanceyOfficial","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/2/16a781771374fb5c?w=890&h=1073&f=jpeg&s=48642","objectId":"5bc82522f265da0af1617021"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/4/7/169f86b6a294ef6a?w=2940&h=1551&f=jpeg&s=89037","original":true,"hotIndex":125.2548,"content":"对于大部分编程语言, 编译大致有三个步骤. 此过程将源代码分解成 词法单元 (token), 如代码 const firstName = 'Yancey' 会被分解成 const, firstName, =, 'Yancey', 空格是否会被当成词法单元, 取决于空格对这门语言…","title":"从 JS 编译原理到作用域(链)及闭包","lastCommentTime":"2019-04-10T18:30:22.931Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":1342,"summaryInfo":"对于大部分编程语言, 编译大致有三个步骤. 除上面三个阶段之外, JavaScript 引擎还对 语法分析、代码生成、编译过程 进行一些优化, 这一块估计得看 v8 源码了, 先留个坑. 有个库叫做 Acorn, 用来解析 JavaScript 代码, 像 webpack、eslint 都有用到,...","isCollected":false},{"collectionCount":49,"autoPass":true,"commentsCount":1,"gfw":false,"buildTime":1569810978.7925,"checkStatus":true,"objectId":"5b29f8cee51d455cd0549d37","entryView":"","subscribersCount":0,"ngxCachedTime":1572571779,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571753,"ngxCached":true,"title":"V8","id":"58c6a60e44d904006997746f"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571680,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"},{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.000075544403848221,"hot":false,"updatedAt":"2019-09-30T02:36:18.772Z","originalUrl":"https://www.zcfy.cc/article/closures-objects-and-the-fauna-of-the-heap","verifyCreatedAt":"2018-06-20T06:48:46.658Z","createdAt":"2018-06-20T06:48:46.658Z","user":{"community":null,"collectedEntriesCount":235,"company":"","followersCount":7827,"followeesCount":35,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":224,"totalCommentsCount":166,"ngxCachedTime":1572571775,"ngxCached":true,"viewedEntriesCount":238,"jobTitle":"翻译，求知的另一种表达","subscribedTagsCount":9,"totalCollectionsCount":7981,"username":"众成翻译","avatarLarge":"https://user-gold-cdn.xitu.io/2018/3/30/16275a86e4bb52a2?w=461&h=461&f=png&s=51937","objectId":"5abddb3c6fb9a028c812f56f"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/6/20/1641bf3e51d0bcd4?w=450&h=161&f=png&s=62524","original":false,"hotIndex":89.6,"content":"在上篇文章中我们提到了闭包、对象、以及栈外的其它东西。我们学习的大部分内容都是与特定编程语言无关的元素，但是，我主要还是专注于 JavaScript，以及一些 C。让我们以一个简单的 C 程序开始，它的功能是读取一首歌曲和乐队名字，然后将它们输出给用户： stackFolly.…","title":"闭包、对象，以及堆“族”","lastCommentTime":"2018-06-21T11:44:54.923Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":774,"summaryInfo":"在上篇文章中我们提到了闭包、对象、以及栈外的其它东西。我们学习的大部分内容都是与特定编程语言无关的元素，但是，我主要还是专注于 JavaScript，以及一些 C。让我们以一个简单的 C 程序开始，它的功能是读取一首歌曲和乐队名字，然后将它们输出给用户： 如果你运行这个程序， 事实证明，函数的栈变...","isCollected":false},{"collectionCount":49,"autoPass":false,"commentsCount":1,"gfw":false,"buildTime":1572493908.8236,"checkStatus":true,"objectId":"5b20fa125188257d6b5d0f88","entryView":"","subscribersCount":0,"ngxCachedTime":1572571779,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571778,"ngxCached":true,"title":"jQuery","id":"5599f577e4b08a686d142949"},{"ngxCachedTime":1572571698,"ngxCached":true,"title":"设计模式","id":"55a872f0e4b05881ac919dfc"}],"isEvent":false,"rankIndex":0.000069004000695246,"hot":false,"updatedAt":"2019-10-31T03:51:48.805Z","originalUrl":"https://juejin.im/post/5b20e657f265da6e053ad5ee","verifyCreatedAt":"2018-06-14T08:28:22.119Z","createdAt":"2018-06-14T08:28:22.119Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epX2ibdlrU6q20wMqVwbR2reicCNFAV87CqSo4TnfjiaUrPkePbP04eOUOohKa6LfQxRwfR7U2VzZTew/132"}},"collectedEntriesCount":71,"company":"平安","followersCount":199,"followeesCount":16,"role":"guest","postedPostsCount":24,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":12,"ngxCachedTime":1572571779,"viewedEntriesCount":1101,"jobTitle":"前端","subscribedTagsCount":21,"totalCollectionsCount":388,"username":"Panthon","avatarLarge":"https://user-gold-cdn.xitu.io/2018/6/14/163fd782d7f40a6f?w=879&h=879&f=jpeg&s=435076","objectId":"599851fe51882524417ab7f5"},"author":"","screenshot":"","original":true,"hotIndex":91.7577,"content":"理论是自信的基础，结合理论的实践才能让我们走的更远。 前两个系列，我记录了闭包的学习，如何利用闭包解决实际问题了？其实，很多东西你我都知道，不是一蹴而就的，不是你今天学了就会了，还需要多次练习，反复练习。相信终究一天你我会运用自如。 下面就通过3个小例子，来运用闭包解决实际问题…","title":"深入理解javascript系列(九):应用闭包","lastCommentTime":"2019-07-16T01:43:12.065Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":817,"summaryInfo":"理论是自信的基础，结合理论的实践才能让我们走的更远。 前两个系列，我记录了闭包的学习，如何利用闭包解决实际问题了？其实，很多东西你我都知道，不是一蹴而就的，不是你今天学了就会了，还需要多次练习，反复练习。相信终究一天你我会运用自如。 下面就通过3个小例子，来运用闭包解决实际问题吧。 9.1  循环...","isCollected":false},{"collectionCount":48,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1571829370.096,"checkStatus":true,"objectId":"5ac1c0de6fb9a028c5235663","entryView":"","subscribersCount":0,"ngxCachedTime":1572571647,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.000041733487252983,"hot":false,"updatedAt":"2019-10-23T11:16:10.078Z","originalUrl":"http://blog.leapoahead.com/2015/09/15/js-closure/","verifyCreatedAt":"2018-04-03T06:26:05.541Z","createdAt":"2018-04-03T06:26:05.541Z","user":{"community":{"github":{"username":"Jiahonzheng","avatarLarge":"https://avatars1.githubusercontent.com/u/23151637?v=4","uid":"23151637"}},"collectedEntriesCount":410,"company":"","followersCount":1180,"followeesCount":42,"role":"guest","postedPostsCount":14,"level":2,"isAuthor":false,"postedEntriesCount":14,"totalCommentsCount":35,"ngxCachedTime":1572571574,"ngxCached":true,"viewedEntriesCount":2199,"jobTitle":"","subscribedTagsCount":31,"totalCollectionsCount":805,"username":"Jiahonzheng","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e088c773f98f6fef","objectId":"59b4d7b55188257e70530607"},"author":"","screenshot":null,"original":false,"hotIndex":66.4665,"content":"我研究JavaScript闭包（closure）已经有一段时间了。我之前只是学会了如何使用它们，而没有透彻地了解它们具体是如何运作的。那么，究竟什么是闭包？\nWikipedia给出的解释并没有太大的帮助。闭包是什么时候被创建的，什么时候被销毁的？具体的实现又是怎么样的？\n现在，…","title":"JavaScript闭包的底层运行机制","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":368,"summaryInfo":"我研究JavaScript闭包（closure）已经有一段时间了。我之前只是学会了如何使用它们，而没有透彻地了解它们具体是如何运作的。那么，究竟什么是闭包？ Wikipedia给出的解释并没有太大的帮助。闭包是什么时候被创建的，什么时候被销毁的？具体的实现又是怎么样的？ 现在，我终于知道了答案，我...","isCollected":false},{"collectionCount":48,"commentsCount":1,"gfw":false,"entryView":"5919179dda2f60005df23247","subscribersCount":2,"ngxCachedTime":1572571084,"updatedAt":"2019-10-27T22:37:17.352Z","tags":[{"ngxCachedTime":1572571067,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572570984,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"},{"ngxCachedTime":1572571084,"ngxCached":false,"title":"函数式编程","id":"584628f161ff4b006c3c147f"}],"objectId":"5919179d128fe1005ccd1c94","rankIndex":0.000026688781572772,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/59191552128fe1005ccd015f","buildTime":1572215837.3702,"createdAt":"2017-05-15T02:51:09.435Z","user":{"community":{"weibo":{"selfDescription":"公众号：Python之禅，分享技术干货","uid":"1697702241","blogAddress":"http://weibo.com/527355345","username":"志军_Python","avatarLarge":"https://tva2.sinaimg.cn/crop.0.0.540.540.180/6530e161jw8ej50tfokv5j20f00f0wf1.jpg?KID=imgbed,tva&Expires=1569672033&ssig=GtIcTwvKrm"}},"collectedEntriesCount":127,"company":"","followersCount":12025,"followeesCount":49,"role":"editor","postedPostsCount":72,"level":4,"isAuthor":true,"postedEntriesCount":35,"totalCommentsCount":420,"ngxCachedTime":1572571026,"ngxCached":true,"viewedEntriesCount":1352,"jobTitle":"后端开发工程师","subscribedTagsCount":2,"totalCollectionsCount":7630,"username":"刘志军","avatarLarge":"https://lc-gold-cdn.xitu.io/1aa59ab3d675e26bb991.png","objectId":"55a9ded4e4b00d44e1fea627"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/418f89825b9e1bedd990.jpg","original":true,"hotIndex":84.1414,"content":"我在博客中曾经介绍过两篇关于函数的文章，第一篇是 关于 Python 函数是第一类对象，第二篇是关于 Lambda 函数，今天来说说 Python 闭包。 什么是闭包？闭包有什么用？为什么要用闭包？今天我们就带着这 3 个问题来一步一步认识闭包。 闭包和函数紧密联系在一起，介绍闭包…","title":"一步一步教你认识 Python 闭包","lastCommentTime":"2017-05-15T06:59:41.085Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572570998},"viewsCount":696,"summaryInfo":"我在博客中曾经介绍过两篇关于函数的文章，第一篇是 关于 Python 函数是第一类对象，第二篇是关于 Lambda 函数，今天来说说 Python 闭包。 什么是闭包？闭包有什么用？为什么要用闭包？今天我们就带着这3个问题来一步一步认识闭包。 闭包和函数紧密联系在一起，介绍闭包前有必要先介绍一些背...","isCollected":false},{"collectionCount":44,"commentsCount":2,"gfw":false,"entryView":"5815ca210ce46300584b1af0","subscribersCount":3,"ngxCachedTime":1572571782,"updatedAt":"2019-10-30T09:49:31.528Z","tags":[{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"5815ba9a570c3500606be3b4","rankIndex":0.000019051046831854,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/7453f74a29e3","buildTime":1572428971.548,"createdAt":"2016-10-30T09:17:14.555Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epbiaXTrmqWx1xG4ETMPZQIvJUSNrMz28aE7Zbbs4jKibOTfy9iapgXKYibewJ0IGBhxxBmIULTwlcv0A/132"},"github":{"expires_at":"1479825032161","uid":"15626804","nickname":"null"}},"collectedEntriesCount":197,"company":"沪江","followersCount":63,"followeesCount":11,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":17,"totalCommentsCount":25,"ngxCachedTime":1572571782,"viewedEntriesCount":1812,"jobTitle":"web前端","subscribedTagsCount":16,"totalCollectionsCount":1252,"username":"coderyin","avatarLarge":"https://lc-gold-cdn.xitu.io/d73e9c6890fe4a7f53e3.jpg?imageView/1/w/100/h/100/q/80/format/png","objectId":"56cc5478816dfa0059ec6441"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/3eedda7f643fac75250e.jpg","original":false,"hotIndex":81.1699,"content":"由于这 3 个月工作忙，好久没有在简书上写文章了，今天给大家分享一个我在项目中遇到的 js 闭包的坑。","title":"踩坑——js 闭包造成的问题","lastCommentTime":"2016-10-31T01:16:42.908Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":693,"summaryInfo":"上面的描述可能比较抽象，下面列出了一个很简单的模型：","isCollected":false},{"collectionCount":43,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572527461.6868,"checkStatus":true,"objectId":"5b155e75f265da6e3f1aa515","entryView":"","subscribersCount":0,"ngxCachedTime":1572571779,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571753,"ngxCached":true,"title":"V8","id":"58c6a60e44d904006997746f"},{"ngxCachedTime":1572571711,"ngxCached":true,"title":"Chrome","id":"555e9ae0e4b00c57d99562ee"}],"isEvent":false,"rankIndex":0.000065490741595294,"hot":false,"updatedAt":"2019-10-31T13:11:01.669Z","originalUrl":"https://juejin.im/post/5b155dfae51d4506d33cef7b","verifyCreatedAt":"2018-06-05T01:50:01.553Z","createdAt":"2018-06-05T01:50:01.553Z","user":{"community":{"github":{"username":"ssshooter","avatarLarge":"https://avatars0.githubusercontent.com/u/13051472?v=4","uid":"13051472"}},"collectedEntriesCount":39,"company":"","followersCount":1573,"followeesCount":8,"role":"guest","postedPostsCount":15,"level":2,"isAuthor":false,"postedEntriesCount":5,"totalCommentsCount":29,"ngxCachedTime":1572571779,"viewedEntriesCount":1180,"jobTitle":"","subscribedTagsCount":3,"totalCollectionsCount":651,"username":"ssshooter","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e083ada374b05663","objectId":"5858cd5e61ff4b006874e4fc"},"author":"","screenshot":"","original":true,"hotIndex":89.6037,"content":"JavaScript 是一个 function-oriented 的语言。这带来了很大的操作自由。函数只需创建一次，可以拷贝到另一个变量，或者作为一个参数传入另一个函数然后在一个全新的环境调用。 我们知道函数可以访问它外部的变量，这个 feature 十分常用。 不同语言的表现…","title":"【译】JavaScript进阶 从实现理解闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":918,"summaryInfo":"JavaScript 是一个 function-oriented 的语言。这带来了很大的操作自由。函数只需创建一次，可以拷贝到另一个变量，或者作为一个参数传入另一个函数然后在一个全新的环境调用。 我们知道函数可以访问它外部的变量，这个 feature 十分常用。 但是当外部变量改变时会发生什么？函...","isCollected":false},{"collectionCount":41,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572344180.9466,"checkStatus":true,"objectId":"5b220addf265da5980184c1a","entryView":"","subscribersCount":0,"ngxCachedTime":1572571778,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571769,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571778,"ngxCached":false,"title":"RequireJS","id":"58c61bd22f301e006bc70f91"}],"isEvent":false,"rankIndex":0.000070688755315601,"hot":false,"updatedAt":"2019-10-29T10:16:20.930Z","originalUrl":"https://juejin.im/post/5b21fcd1e51d4558882126ef","verifyCreatedAt":"2018-06-15T02:49:06.396Z","createdAt":"2018-06-15T02:49:06.396Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epX2ibdlrU6q20wMqVwbR2reicCNFAV87CqSo4TnfjiaUrPkePbP04eOUOohKa6LfQxRwfR7U2VzZTew/132"}},"collectedEntriesCount":71,"company":"平安","followersCount":199,"followeesCount":16,"role":"guest","postedPostsCount":24,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":12,"ngxCachedTime":1572571778,"viewedEntriesCount":1101,"jobTitle":"前端","subscribedTagsCount":21,"totalCollectionsCount":388,"username":"Panthon","avatarLarge":"https://user-gold-cdn.xitu.io/2018/6/14/163fd782d7f40a6f?w=879&h=879&f=jpeg&s=435076","objectId":"599851fe51882524417ab7f5"},"author":"","screenshot":"","original":true,"hotIndex":93.3,"content":"在实践中这种场景很多，比如全局的状态管理。 但前面我们介绍过，在实际开发中，不要轻易使用全局变量，那又该怎么办呢？模块化的思维能够帮助我们解决这个问题。 模块化开发是目前最流行，也是必须要掌握的一种开发思路。而模块化其实是建立在单例模式基础之上的，因此模块化开发和闭包息息相关。…","title":"深入理解javascript系列(十):模块化与闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":1046,"summaryInfo":"如果想在所有的地方都能访问同一个变量，那么应该怎么办呢？ 在实践中这种场景很多，比如全局的状态管理。 但前面我们介绍过，在实际开发中，不要轻易使用全局变量，那又该怎么办呢？模块化的思维能够帮助我们解决这个问题。 模块化开发是目前最流行，也是必须要掌握的一种开发思路。而模块化其实是建立在单例模式基础...","isCollected":false},{"collectionCount":40,"commentsCount":0,"gfw":false,"objectId":"5a4f7dbff265da3e290c036a","checkStatus":true,"buildTime":1571714316.1237,"entryView":"","subscribersCount":0,"ngxCachedTime":1572096819,"verifyStatus":true,"tags":[{"ngxCachedTime":1572096722,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"},{"ngxCachedTime":1572096703,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572096764,"ngxCached":true,"title":"程序员","id":"55c1748160b28fd99e49ea68"},{"ngxCachedTime":1572096738,"ngxCached":true,"title":"微信","id":"55b9036700b0cecc83240cb7"}],"autoPass":false,"rankIndex":0.000042381423968191,"hot":false,"updatedAt":"2019-10-22T03:18:36.107Z","originalUrl":"https://juejin.im/post/5a4f7d946fb9a01cb80f89cf","verifyCreatedAt":"2018-01-05T13:29:35.661Z","createdAt":"2018-01-05T13:29:35.661Z","user":{"community":{"github":{"uid":"12378130","nickname":"两点水","username":"TwoWater","avatar_url":"https://avatars0.githubusercontent.com/u/12378130?v=3","bio":null,"html_url":"https://github.com/TwoWater"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/bEB0PlK5mBRQv6iaib0PibiaoTDjibicSABHAcqv9bZYDOdXdDXNhZibfPO3RaX04rAeWJmZwrXiaxyRE7sCiatFysCzAYQ/132"}},"collectedEntriesCount":34,"company":"","followersCount":6929,"followeesCount":4,"role":"editor","postedPostsCount":26,"level":3,"isAuthor":true,"postedEntriesCount":7,"totalCommentsCount":48,"ngxCachedTime":1572096819,"viewedEntriesCount":348,"jobTitle":"水","subscribedTagsCount":13,"totalCollectionsCount":1686,"username":"两点水","avatarLarge":"https://leancloud-gold-cdn.xitu.io/f7f4b42cfb139538d6db.png","objectId":"58d8834f0ce46300570d3582"},"author":"","screenshot":"","original":true,"hotIndex":83.4591,"content":"网络上介绍 Python 闭包的文章已经很多了，本文将通过解决一个需求问题来了解闭包。 这个需求是这样的，我们需要一直记录自己的学习时间，以分钟为单位。就好比我学习了 2 分钟，就返回 2 ，然后隔了一阵子，我学习了 10 分钟，那么就返回 12 ，像这样把学习时间一直累加下去…","title":"草根学Python（十五） 闭包（解决一个需求了解闭包流程）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572096793},"viewsCount":867,"summaryInfo":"网络上介绍 Python 闭包的文章已经很多了，本文将通过解决一个需求问题来了解闭包。 这个需求是这样的，我们需要一直记录自己的学习时间，以分钟为单位。就好比我学习了 2 分钟，就返回 2 ，然后隔了一阵子，我学习了 10 分钟，那么就返回 12 ，像这样把学习时间一直累加下去。 面对这个需求，我...","isCollected":false},{"collectionCount":39,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1571929498.4037,"checkStatus":true,"objectId":"5b94e609f265da0af0336873","entryView":"","subscribersCount":0,"ngxCachedTime":1572571393,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571371,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"isEvent":false,"rankIndex":0.000070481208401586,"hot":false,"updatedAt":"2019-10-24T15:04:58.387Z","originalUrl":"https://juejin.im/post/5b93deb2f265da0a8f35a3b1","verifyCreatedAt":"2018-09-10T08:28:32.481Z","createdAt":"2018-09-10T08:28:32.481Z","user":{"community":{"github":{"username":"yolo2233","avatarLarge":"https://avatars0.githubusercontent.com/u/25340352?v=4","uid":"25340352"}},"collectedEntriesCount":2,"company":"","followersCount":0,"followeesCount":0,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571393,"viewedEntriesCount":46,"jobTitle":"","subscribedTagsCount":10,"totalCollectionsCount":39,"username":"yolo2233","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08f44ddea389a11","objectId":"5aec48d76fb9a07aaf351663"},"author":"","screenshot":"","original":false,"hotIndex":68.6246,"content":"在一个外函数中定义了一个内函数，内函数里运用了外函数的临时变量，并且外函数的返回值是内函数的引用。这样就构成了一个闭包。[1] 在这里a作为outer的局部变量，一般情况下会在函数结束的时候释放为a分配到的内存。但是在闭包中，如果外函数在结束的时候发现有自己的临时变量将来会在内…","title":"Python：从闭包到装饰器","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571339},"viewsCount":583,"summaryInfo":"在一个外函数中定义了一个内函数，内函数里运用了外函数的临时变量，并且外函数的返回值是内函数的引用。这样就构成了一个闭包。[1] 在这里a作为outer的局部变量，一般情况下会在函数结束的时候释放为a分配到的内存。但是在闭包中，如果外函数在结束的时候发现有自己的临时变量将来会在内部函数中用到，就把这...","isCollected":false},{"collectionCount":38,"commentsCount":0,"gfw":false,"entryView":"58e5f205ac502e4957ac0bf6","subscribersCount":0,"ngxCachedTime":1572571393,"updatedAt":"2019-10-24T15:05:01.652Z","tags":[{"ngxCachedTime":1572571347,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"objectId":"58e5f08a8d6d8100616d9f59","rankIndex":0.000022021168179241,"hot":false,"autoPass":false,"originalUrl":"http://kasheemlew.github.io/2017/04/05/python-closure/","buildTime":1571929501.6693,"createdAt":"2017-04-06T07:38:50.640Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/dWkMWUgSlLL27iaYYyNBFd0PMMiaNrRTia1bRumCbDd4W7QvOyNmuw9qibEVJlH8EEM1H5qvCrpwaB0hPQpbdm6BYw/132"},"github":{"username":"kasheemlew","avatarLarge":"https://avatars3.githubusercontent.com/u/14333766?v=4","uid":"14333766"}},"collectedEntriesCount":195,"company":"","followersCount":67,"followeesCount":91,"role":"guest","postedPostsCount":9,"level":1,"isAuthor":true,"postedEntriesCount":7,"totalCommentsCount":7,"ngxCachedTime":1572571393,"viewedEntriesCount":2134,"jobTitle":"","subscribedTagsCount":50,"totalCollectionsCount":473,"username":"klew","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082fffa6818b5f0","objectId":"57bce5562e958a0069488836"},"author":"","screenshot":"","original":true,"hotIndex":73.5915,"content":"Python 闭包介绍、用法及内部实现分析","title":"Python 闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571347},"viewsCount":699,"summaryInfo":"从上面这段话中可以看出闭包的两个重要条件是引用自由变量和函数，与闭包这个名称结合起来看，这个函数就像是一个包，而这个函数所引用的变量就好比函数这个包中封闭起来的东西，包中的东西被紧紧封闭在包中，函数所引用的变量也被与这个函数所绑定。 是相对于某个函数来说的，指的是这个函数所调用的在本函数作用域之外...","isCollected":false},{"collectionCount":38,"commentsCount":5,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571788,"updatedAt":"2019-10-30T18:17:24.474Z","tags":[{"ngxCachedTime":1572571742,"ngxCached":true,"title":"React.js","id":"555e99ffe4b00c57d99556aa"},{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571726,"ngxCached":true,"title":"Redux","id":"5804cc908ac24700580d763a"}],"objectId":"59b69b2c5188257e6e260935","rankIndex":0.000027259644248989,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/59b69aed5188257e81537275","buildTime":1572459444.4924,"createdAt":"2017-09-11T14:18:20.274Z","user":{"community":{"github":{"username":"xuchaobei","avatarLarge":"https://avatars3.githubusercontent.com/u/5110783?v=4","uid":"5110783"},"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmhead/cjAEibKtBPRJyhJzTdCISsU3vMCRQgib3b9dtozpgmsYg/0"}},"collectedEntriesCount":18,"company":"字节跳动","followersCount":1245,"followeesCount":9,"role":"editor","postedPostsCount":20,"level":3,"isAuthor":true,"postedEntriesCount":13,"totalCommentsCount":195,"ngxCachedTime":1572571750,"ngxCached":true,"viewedEntriesCount":750,"jobTitle":"半栈工程师","subscribedTagsCount":9,"totalCollectionsCount":3508,"username":"艾特老干部","avatarLarge":"https://user-gold-cdn.xitu.io/2018/1/30/16145e1c45329fd4?w=825&h=825&f=jpeg&s=41295","objectId":"5944ff6eac502e006b9354a5"},"author":"","screenshot":"","original":true,"hotIndex":69.7135,"content":"最近在看Redux的源码，发现Redux在使用中间件applyMiddleware.js的源码中，有一个对闭包非常巧妙的使用，解决了“鸡生蛋，蛋生鸡”的问题，特分享给大家。 applyMiddleware.js中的函数applyMiddleware(...middlewares…","title":"Redux中间件对闭包的一个巧妙使用","lastCommentTime":"2017-09-26T15:15:58.910Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":525,"summaryInfo":"最近在看Redux的源码，发现Redux在使用中间件applyMiddleware.js的源码中，有一个对闭包非常巧妙的使用，解决了“鸡生蛋，蛋生鸡”的问题，特分享给大家。 applyMiddleware.js中的函数applyMiddleware(...middlewares)用于根据中间件生成...","isCollected":false},{"collectionCount":38,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572520890.9309,"checkStatus":true,"objectId":"5aa90e7b6fb9a028e25d4273","entryView":"","subscribersCount":0,"ngxCachedTime":1572571788,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571736,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"},{"ngxCachedTime":1572571782,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"}],"isEvent":false,"rankIndex":0.000040424916714802,"hot":false,"updatedAt":"2019-10-31T11:21:30.915Z","originalUrl":"https://juejin.im/post/5aa90e5ef265da239f0713a1","verifyCreatedAt":"2018-03-15T02:42:48.628Z","createdAt":"2018-03-15T02:42:48.628Z","user":{"community":{"wechat":{"avatarLarge":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM5dE76DFqQlkXRmtUbU2FNbickTPpZafDcPM7ufuYCY3ico0GJy9Rlj8zcHqs6sKjybSUZnSibBDSFEw/132"},"github":{"username":"XinChou16","avatarLarge":"https://avatars0.githubusercontent.com/u/24493056?v=4","uid":"24493056"}},"collectedEntriesCount":89,"company":"","followersCount":0,"followeesCount":53,"role":"guest","postedPostsCount":4,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":7,"ngxCachedTime":1572571788,"viewedEntriesCount":907,"jobTitle":"前端开发","subscribedTagsCount":14,"totalCollectionsCount":38,"username":"Moshi","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/14/16a1c274420db8f3?w=818&h=444&f=png&s=133690","objectId":"59da050d6fb9a00a4d540eec"},"author":"","screenshot":"","original":true,"hotIndex":69.0528,"content":"init()创建了一个局部变量name和一个函数displayName()。函数displayName()是一个已经定义在init()内部的函数，并且只能在函数init()里面才能访问得到。函数displayName()没有自己的局部变量，但由于内部函数可以访问外部函数变量，d…","title":"听说你还不理解JavaScript里的闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":603,"summaryInfo":"  创建了一个局部变量和一个函数。函数displayName()是一个已经定义在init()内部的函数，并且只能在函数init()里面才能访问得到。函数displayName()没有自己的局部变量，但由于内部函数可以访问外部函数变量，displayName()可以访问到声明在外部函数init()的...","isCollected":false},{"collectionCount":38,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572512133.3319,"checkStatus":true,"objectId":"5af109a0f265da0b7c07373b","entryView":"","subscribersCount":0,"ngxCachedTime":1572571791,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000043592800360173,"hot":false,"updatedAt":"2019-10-31T08:55:33.314Z","originalUrl":"https://juejin.im/post/5af109426fb9a07aa047f1c7","verifyCreatedAt":"2018-05-09T02:39:24.618Z","createdAt":"2018-05-09T02:39:24.618Z","user":{"community":{"github":{"username":"MLuminary","avatarLarge":"https://avatars1.githubusercontent.com/u/17595913?v=4","uid":"17595913"}},"collectedEntriesCount":81,"company":"teambition","followersCount":9,"followeesCount":42,"role":"guest","postedPostsCount":10,"level":2,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":20,"ngxCachedTime":1572571787,"ngxCached":true,"viewedEntriesCount":914,"jobTitle":"低级前端","subscribedTagsCount":47,"totalCollectionsCount":198,"username":"Hutchins","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0874d2a76a4da67","objectId":"598bfc1df265da3e1c0f8cdf"},"author":"","screenshot":"","original":true,"hotIndex":64.3706,"content":"先创建 ECS，ECS 其实就是专门保存正在调用的函数的执行环境的数组，也可以说对象，其实关联数组也就相当于对象。 函数对象的 scope 属性，指回函数创建时的作用域，意思是，函数执行时如果函数本身提供的变量不能让函数执行完全，那它便会去回它创建时的那个作用域去寻找变量。 函…","title":"图解作用域及闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":520,"summaryInfo":"网络上关于作用域及闭包的文章很多，自己对于纯理论知识并不能很快的理解，但自己对于图画有很强的记忆和理解能力，因此决定将此知识点以图画的知识表现出来，加深自身理解的同时如果能帮到正在学习的童鞋就再好不过了 引用类型在其中只能存储地址，这个在此笔记谈谈值传递中有详细说明 函数的执行环境出栈，AO 释放...","isCollected":false},{"collectionCount":37,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572247401.0516,"checkStatus":true,"objectId":"5c70c7396fb9a049ab0e3d03","entryView":"","subscribersCount":0,"ngxCachedTime":1572571644,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-28T07:23:21.035Z","rankIndex":0.00019514215011801,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c70c6ebe51d457c2a224ac2","verifyCreatedAt":"2019-02-25T03:33:40.131Z","createdAt":"2019-02-25T03:33:40.131Z","user":{"community":{"github":{"username":"Zenquan","avatarLarge":"https://avatars2.githubusercontent.com/u/38183707?v=4","uid":"38183707"}},"collectedEntriesCount":301,"company":"","followersCount":22,"followeesCount":152,"role":"guest","postedPostsCount":10,"level":2,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":5,"ngxCachedTime":1572571644,"viewedEntriesCount":2091,"jobTitle":"前端小菜鸟","subscribedTagsCount":110,"totalCollectionsCount":103,"username":"Zenquan","avatarLarge":"https://user-gold-cdn.xitu.io/2019/6/16/16b5e5e07d2c1258?w=819&h=819&f=jpeg&s=316881","objectId":"5acc3dd6f265da23a049e242"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/3/11/1696ce214ae92148?w=751&h=303&f=png&s=8293","original":true,"hotIndex":88.0951,"content":"原型：相当于一个模具，用来生产实例对象。 原型链：原型对象有个指针指向构造函数，实例对象又有一个指针指向原型对象，就形成了一条原型链，最终指向null。 原型：就是js里实现面向对象的方式，也就是说，js就是基于原型的面向对象。 原型链：是js实现继承的方式。 以上的a就是全局…","title":"原型、原型链、作用域、作用域链、闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":1019,"summaryInfo":"原型：相当于一个模具，用来生产实例对象。 原型链：原型对象有个指针指向构造函数，实例对象又有一个指针指向原型对象，就形成了一条原型链，最终指向null。 原型：就是js里实现面向对象的方式，也就是说，js就是基于原型的面向对象。 原型链：是js实现继承的方式。 以上的a就是全局变量，到处可以访问a...","isCollected":false},{"collectionCount":37,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572522794.0991,"checkStatus":true,"objectId":"5b3930eae51d4558cf6ea64c","entryView":"","subscribersCount":0,"ngxCachedTime":1572571791,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571676,"ngxCached":true,"title":"React.js","id":"555e99ffe4b00c57d99556aa"},{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571723,"ngxCached":true,"title":"算法","id":"55cd843d60b203b0519307a9"}],"isEvent":false,"rankIndex":0.000050739491934568,"hot":false,"updatedAt":"2019-10-31T11:53:14.081Z","originalUrl":"https://juejin.im/post/5b392f5551882574cd531c8d","verifyCreatedAt":"2018-07-02T10:50:57.124Z","createdAt":"2018-07-02T10:50:57.124Z","user":{"community":{"github":{"username":"pengliheng","avatarLarge":"https://avatars2.githubusercontent.com/u/14355994?v=4","uid":"14355994"}},"collectedEntriesCount":19,"company":"followme","followersCount":71,"followeesCount":83,"role":"guest","postedPostsCount":9,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":145,"ngxCachedTime":1572571791,"viewedEntriesCount":1176,"jobTitle":"web工程师","subscribedTagsCount":44,"totalCollectionsCount":701,"username":"brand","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/15/16ab9ab9465f12d6?w=480&h=640&f=jpeg&s=52454","objectId":"59780b4bf265da6c3559e68d"},"author":"","screenshot":"","original":true,"hotIndex":63.9339,"content":"感觉每一道都可以深入研究下去，单独写一篇文章，包括不限于闭包，原型链，从url输入到页面展示过程，页面优化，react和vue的价值等等。 因为times变量一直被引用，没有被回收，所以，每次自增1。 按照JavaScript里垃圾回收的机制,是从root(全局对象)开始寻找这…","title":"从闭包函数的变量自增的角度 - 解析js垃圾回收机制","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":536,"summaryInfo":"感觉每一道都可以深入研究下去，单独写一篇文章，包括不限于闭包，原型链，从url输入到页面展示过程，页面优化，react和vue的价值等等。 因为times变量一直被引用，没有被回收，所以，每次自增1。 更简单的实现方式，一行代码实现闭包 深入写下去之前，先放出类似的代码 同样的执行，我把函数执行时...","isCollected":false},{"collectionCount":35,"commentsCount":0,"gfw":false,"entryView":"590197ea61ff4b00668a2aca","subscribersCount":0,"ngxCachedTime":1572571784,"updatedAt":"2019-10-11T17:39:17.747Z","tags":[{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"5901945fa0bb9f0065e3199c","rankIndex":0.000024859987174333,"hot":false,"autoPass":false,"originalUrl":"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures","buildTime":1570815557.9689,"createdAt":"2017-04-27T06:49:03.187Z","user":{"community":{"github":{"username":"kg-web","avatarLarge":"https://avatars2.githubusercontent.com/u/20922287?v=4","uid":"20922287"}},"collectedEntriesCount":33,"company":"","followersCount":1,"followeesCount":8,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":5,"totalCommentsCount":3,"ngxCachedTime":1572571784,"viewedEntriesCount":349,"jobTitle":"","subscribedTagsCount":34,"totalCollectionsCount":230,"username":"kg-web","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08429a726278d75","objectId":"58b4de871b69e60058791d33"},"author":"","screenshot":"","original":false,"hotIndex":78.5895,"content":"闭包是指那些能够访问独立 (自由) 变量的函数 (变量在本地使用，但定义在一个封闭的作用域中)。换句话说，这些函数可以 “记忆” 它被创建时候的环境。","title":"闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":857,"summaryInfo":"闭包是指那些能够访问独立(自由)变量的函数 (变量在本地使用，但定义在一个封闭的作用域中)。换句话说，这些函数可以“记忆”它被创建时候的环境。 函数 创建了一个局部变量 名为 的函数。 是一个内部函数——定义于 之内且仅在该函数体内可用。 没有任何自己的局部变量，然而它可以访问到外部函数的变量，即...","isCollected":false},{"collectionCount":35,"autoPass":false,"commentsCount":1,"gfw":false,"buildTime":1572511850.8171,"checkStatus":true,"objectId":"5b812a63f265da435b0b3427","entryView":"","subscribersCount":0,"ngxCachedTime":1572571685,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571679,"ngxCached":true,"title":"PHP","id":"555e9a84e4b00c57d9955e1b"},{"ngxCachedTime":1572571592,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571655,"ngxCached":true,"title":"pandas","id":"58c7b70b128fe10060480719"},{"ngxCachedTime":1572571670,"ngxCached":true,"title":"PhpStorm","id":"58c0069044d90400696ea355"}],"isEvent":false,"rankIndex":0.000087557184496306,"hot":false,"updatedAt":"2019-10-31T08:50:50.800Z","originalUrl":"https://juejin.im/post/5b8129aa51882542f03807a8","verifyCreatedAt":"2018-08-27T02:30:32.590Z","createdAt":"2018-08-27T02:30:32.590Z","user":{"community":{"github":{"username":"zanemmm","avatarLarge":"https://avatars2.githubusercontent.com/u/23761319?v=4","uid":"23761319"}},"collectedEntriesCount":11,"company":"GDOU","followersCount":54,"followeesCount":11,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":13,"ngxCachedTime":1572571589,"ngxCached":true,"viewedEntriesCount":44,"jobTitle":"学生仔","subscribedTagsCount":33,"totalCollectionsCount":282,"username":"一只贱熊猫","avatarLarge":"https://user-gold-cdn.xitu.io/2018/8/11/1652694e1499d5e5?w=256&h=256&f=png&s=51793","objectId":"5b67b1bbe51d45191e0d3609"},"author":"","screenshot":"","original":true,"hotIndex":91.8913,"content":"在 PHP 里所有的闭包都是 Clourse 类所实例化的一个对象，也就是说闭包与其他 PHP 对象没有什么不同。而一个对象就必然有其方法和属性，这篇文章将总结 PHP 中闭包的基础用法和 Clourse 类方法的作用。 嘿，这段代码最直观的感受就是将一个函数赋值给了 $hel…","title":"PHP Clourse(闭包类) 浅析","lastCommentTime":"2018-08-27T21:28:54.824Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571577},"viewsCount":1102,"summaryInfo":"在 PHP 里所有的闭包都是 类所实例化的一个对象，也就是说闭包与其他 PHP 对象没有什么不同。而一个对象就必然有其方法和属性，这篇文章将总结 PHP 中闭包的基础用法和 类方法的作用。 嘿，这段代码最直观的感受就是将一个函数赋值给了 变量，然后通过 直接调用它。但是这个闭包并没有从父作用域中继...","isCollected":false},{"collectionCount":35,"autoPass":false,"commentsCount":3,"gfw":false,"buildTime":1572354506.9387,"checkStatus":true,"objectId":"5adf34646fb9a07abd0d4ea6","entryView":"","subscribersCount":0,"ngxCachedTime":1572571789,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000043689882827014,"hot":false,"updatedAt":"2019-10-29T13:08:26.921Z","originalUrl":"https://juejin.im/post/5adf213bf265da0b9d77dd8f","verifyCreatedAt":"2018-04-25T01:55:44.433Z","createdAt":"2018-04-25T01:55:44.433Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/LtHjTGlnOMYwm7C1LZEIWjm057YBsVGvMt0pjDrptP7xlt6SLOcibHyqkJFZBxibFFaRH2N6ZavoIfBKodhuRrRQ/132"},"github":{"username":"Kerinlin","avatarLarge":"https://avatars1.githubusercontent.com/u/32203226?v=4","uid":"32203226"}},"collectedEntriesCount":301,"company":"undefined","followersCount":43,"followeesCount":117,"role":"guest","postedPostsCount":4,"level":2,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":22,"ngxCachedTime":1572571789,"viewedEntriesCount":2128,"jobTitle":"前端","subscribedTagsCount":61,"totalCollectionsCount":388,"username":"Kerinlin","avatarLarge":"https://user-gold-cdn.xitu.io/2018/10/24/166a48ba69e278f5?w=768&h=768&f=jpeg&s=194514","objectId":"5acf414ef265da238c3b1061"},"author":"","screenshot":"","original":true,"hotIndex":66.7124,"content":"当调用setTimeout事件时，会把函数参数，放到事件队列中。等主程序运行完，再调用 变量和函数的访问区域,分全局作用域和函数作用域,在es6中添加let关键字后有了块级作用域概念. 为什么第一个值为undefined?因为函数体内的Gscope变量被提升至函数体顶端,但是未…","title":"由两道题扩展的对作用域,作用域链,闭包,立即执行函数,匿名函数的认识总结","lastCommentTime":"2018-04-25T16:49:14.506Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":536,"summaryInfo":"##前言最近在学JS,前几天看到两道题,刚开始看懵懵懂懂,这几天通过各种查资料,慢慢的理解,顿悟了,对匿名函数,闭包,立即执行函数的理解也更深了一点,在此分享给大家我的理解与总结,希望能帮助大家理解.因为这篇文章是我用心总结的,查阅了很多的资料,所以总结的比较细,篇幅较长,如果没耐心,建议跳出,点...","isCollected":false},{"collectionCount":35,"commentsCount":1,"gfw":false,"entryView":"581c91cc2f301e005c0ca107","subscribersCount":1,"ngxCachedTime":1572571791,"updatedAt":"2019-10-30T00:54:14.152Z","tags":[{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"581c2972128fe10055b7b272","rankIndex":0.000015367079546289,"hot":false,"autoPass":false,"originalUrl":"https://segmentfault.com/a/1190000007315908","buildTime":1572396854.168,"createdAt":"2016-11-04T06:23:46.247Z","user":{"community":null,"collectedEntriesCount":4,"company":"0731房产网","followersCount":6,"followeesCount":10,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":1,"ngxCachedTime":1572571791,"viewedEntriesCount":60,"jobTitle":"前端工程师","subscribedTagsCount":31,"totalCollectionsCount":53,"username":"yancy","avatarLarge":"https://leancloud-gold-cdn.xitu.io/d6bb53b64a212a16ee00.jpg?imageView/2/w/100/h/100/q/80/format/png","objectId":"581bdc09da2f60005dea3203"},"author":"","screenshot":"","original":false,"hotIndex":65.0034,"content":"有人说闭包会造成内存泄漏，该文讲述闭包是否真的会造成内存泄漏","title":"闭包会造成内存泄漏吗？","lastCommentTime":"2016-11-05T05:44:36.754Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":575,"summaryInfo":"在谈内存泄漏这个问题之前先看看JavaScript的垃圾收集机制，JavaScript 具有自动垃圾收集机制，就是找出那些不再继续使用的变量，然后释放其占用的内存。为此，垃圾收集器会按照固定的时间间隔（或代码执行中预定的收集时间）。常用的的方法有两种，即标记清楚和引用计数。 1. 标记清除 Jav...","isCollected":false},{"collectionCount":33,"userRankIndex":0,"buildTime":1572410867.3395,"commentsCount":4,"gfw":false,"objectId":"5d11e6b6e51d454d544abf8c","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571648,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T04:47:47.314Z","rankIndex":0.00033937517632853,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d11e667e51d4510aa01152b","verifyCreatedAt":"2019-06-25T11:14:38.783Z","createdAt":"2019-06-25T11:14:38.783Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIQdAtqiaS9GYLVia1vicqEGyfUib73SfL7Rfia3uFmKoDCMUYBpicO4KSYJllRGGYibGwrCv6gLYbRmCJjw/132"}},"collectedEntriesCount":52,"company":"vlog","followersCount":124,"followeesCount":120,"role":"guest","postedPostsCount":11,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":53,"ngxCachedTime":1572571559,"ngxCached":true,"viewedEntriesCount":2965,"jobTitle":"前端开发工程师","subscribedTagsCount":33,"totalCollectionsCount":548,"username":"落落落洛克","avatarLarge":"https://user-gold-cdn.xitu.io/2019/7/17/16bfe2124fbd9dcc?w=1239&h=1242&f=png&s=1990738","objectId":"5bf0eac3518825604e0e4849"},"author":"","screenshot":"","original":true,"hotIndex":56.9557,"content":"。哦，概念是这样讲的没错，那么我let声明变量不会再for循环外是访问不到的，对我们得到的有用信息是这样的，然后这块得到的信息对我们解决这个问题就占一小部分，实际的原因是如下： 上面代码中，变量i是let声明的，当前的i只在本轮循环有效，所以每一次循环的i其实都是一个新的变量，…","title":"浅谈var、let、闭包以及立即执行函数(namespace)","lastCommentTime":"2019-07-15T12:57:05.426Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":393,"summaryInfo":"分析：上述例子其实是一样的 不管有没有存在异步函数（这里的setTimeout就是异步函数），例子一我执行a6和例子二执行异步函数都是for循环执行完以后再去执行的所以此时的i值就是10或者6而不是按照我们想要的结果输出6或者12345，那么如何得到想要的结果呢？请看下面分析 上诉问题得到的答案确...","isCollected":false},{"collectionCount":33,"userRankIndex":13.023773611448,"buildTime":1572567889.1626,"commentsCount":4,"gfw":false,"objectId":"5da65f30e51d4524e31fb0e4","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571638,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571637,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"updatedAt":"2019-11-01T00:24:49.143Z","rankIndex":0.021118725803243,"hot":false,"autoPass":true,"originalUrl":"https://juejin.im/post/5da65ed26fb9a04df26c2e0d","verifyCreatedAt":"2019-10-16T00:07:12.375Z","createdAt":"2019-10-16T00:07:12.375Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ7qjRGwP5t74BWKb3UAzyYHqrSyBgHNYI3WbsB1UGubuL3915ywQqibDDWhQnWZJ3jllUR3LIWAwA/132"}},"collectedEntriesCount":62,"company":"","followersCount":13557,"followeesCount":21,"role":"guest","postedPostsCount":121,"level":6,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1173,"ngxCachedTime":1572571592,"ngxCached":true,"viewedEntriesCount":3036,"jobTitle":"公众号 @ 大迁世界","subscribedTagsCount":40,"totalCollectionsCount":16118,"username":"前端小智","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08a02f4dda88289","objectId":"59df61ec51882578ce26ee6e"},"author":"","screenshot":"","original":true,"hotIndex":146.6948,"content":"为了保证的可读性，本文采用意译而非直译。 全局变量使用容易引发bug，咱们经常教导尽量不要使用全局变量，尽管全局变量在某些情况下是有用的。 例如，在浏览器中使用JS时，咱们可以访问全局window对象，window中有很多有用的方法，比如： 这是方便的。Redux是另一个“好”…","title":"【JS 口袋书】第 6 章：JS 中的闭包与模块","lastCommentTime":"2019-10-17T12:09:25.702Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":2190,"summaryInfo":"阿里云最近在做活动，低至2折，有兴趣可以看看：https://promotion.aliyun.com/ntms/yunparter/invite.html?userCode=pxuujn3r 为了保证的可读性，本文采用意译而非直译。 全局变量使用容易引发bug，咱们经常教导尽量不要使用全局变量，...","isCollected":false},{"collectionCount":33,"commentsCount":1,"gfw":false,"entryView":"575c6dea207703006fff8466","subscribersCount":1,"ngxCachedTime":1572571685,"updatedAt":"2019-09-09T12:49:01.915Z","tags":[{"ngxCachedTime":1572571679,"ngxCached":true,"title":"PHP","id":"555e9a84e4b00c57d9955e1b"},{"ngxCachedTime":1572571592,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"}],"objectId":"575bebe01532bc00608766fd","rankIndex":0.000019180560145261,"hot":false,"autoPass":false,"originalUrl":"https://awezome.net/2548/","buildTime":1568033341.9333,"createdAt":"2016-06-11T10:45:52.570Z","user":{"community":null,"collectedEntriesCount":5,"company":"","followersCount":7,"followeesCount":0,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":4,"totalCommentsCount":4,"ngxCachedTime":1572571587,"ngxCached":true,"viewedEntriesCount":169,"jobTitle":"服务端开发工程师","subscribedTagsCount":1,"totalCollectionsCount":145,"username":"Awezome","avatarLarge":"","objectId":"57543b691532bc006494a42e"},"author":"","screenshot":"","original":false,"hotIndex":92.008,"content":"闭包（closures）是指在创建时封装的状态的函数，匿名函数（Anonymous functions）是指没有名称的函数。在 PHP 中，闭包和匿名函数被看成一种东西。理论上是不同的，可以理解闭包是由匿名函数构成的一种 “结构”。","title":"Modern PHP : 闭包和匿名函数","lastCommentTime":"2016-06-16T01:11:31.309Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571577},"viewsCount":1142,"summaryInfo":"闭包（closures）是指在创建时封装的状态的函数，匿名函数（Anonymous functions）是指没有名称的函数。在PHP中，闭包和匿名函数被看成一种东西。理论上是不同的，可以理解闭包是由匿名函数构成的一种“结构”。 像string,int等，可以把闭包函数作为变量的值来使用。PHP会自...","isCollected":false},{"collectionCount":33,"commentsCount":1,"gfw":false,"entryView":"","subscribersCount":1,"ngxCachedTime":1572571394,"updatedAt":"2019-07-21T15:02:26.135Z","tags":[{"ngxCachedTime":1572571371,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"objectId":"582d52f82f301e00594c7d83","rankIndex":0.000013735330783488,"hot":false,"autoPass":false,"originalUrl":"https://funhacks.net/2016/11/17/closure/","buildTime":1563721346.1502,"createdAt":"2016-11-17T06:49:28.280Z","user":{"community":null,"collectedEntriesCount":23,"company":"funhacks.net","followersCount":2562,"followeesCount":5,"role":"editor","postedPostsCount":6,"level":2,"isAuthor":true,"postedEntriesCount":13,"totalCommentsCount":35,"ngxCachedTime":1572571324,"ngxCached":true,"viewedEntriesCount":225,"jobTitle":"后端研发","subscribedTagsCount":9,"totalCollectionsCount":1355,"username":"funhacks","avatarLarge":"https://lc-gold-cdn.xitu.io/d9de0b38a219f83d613d.png","objectId":"574d8e0ba3413100592ccc0c"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/303232cadb2a014392b5.png","original":true,"hotIndex":49.2705,"content":"闭包（closures）是引用了自由变量的函数，本文通过一些简单的例子介绍闭包在 Python 中的使用，以及使用闭包的常见误区。","title":"Python: 携带状态的闭包","lastCommentTime":"2016-11-22T07:09:55.666Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571339},"viewsCount":303,"summaryInfo":"","isCollected":false},{"collectionCount":33,"autoPass":false,"commentsCount":1,"gfw":false,"buildTime":1568576434.5963,"checkStatus":true,"objectId":"5bbb367ff265da0ab2284624","entryView":"","subscribersCount":0,"ngxCachedTime":1572571646,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.000095954115992862,"hot":false,"updatedAt":"2019-09-15T19:40:34.578Z","originalUrl":"https://zhuanlan.zhihu.com/p/46180934","verifyCreatedAt":"2018-10-12T08:44:36.035Z","createdAt":"2018-10-12T08:44:36.035Z","user":{"community":{"weibo":{"selfDescription":"道系程序员，秒杀佛系","uid":"1911207061","blogAddress":"http://weibo.com/physx7","username":"小洋粉丶爱学习","avatarLarge":"http://tvax1.sinaimg.cn/crop.0.0.48.48.180/71eab495ly1fmbqqzmwe2j201c01cgle.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/uyqUmmrnVcnRUUrYXCLWWjLELuFl9yGANhvLz1X3Es7gibiab2PynAhh1K6rxbvibf9MwicXR1ib3QAX0J9UEun9cjg/132"},"github":{"username":"xyfll7","avatarLarge":"https://avatars2.githubusercontent.com/u/28172140?v=4","uid":"28172140"}},"collectedEntriesCount":56,"company":"小洋粉|自习室","followersCount":606,"followeesCount":50,"role":"guest","postedPostsCount":8,"level":1,"isAuthor":false,"postedEntriesCount":180,"totalCommentsCount":27,"ngxCachedTime":1572571646,"viewedEntriesCount":1261,"jobTitle":"自学员","subscribedTagsCount":37,"totalCollectionsCount":227,"username":"小洋粉","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0904d838c386465","objectId":"5b0527ab51882542845267d3"},"author":"","screenshot":null,"original":false,"hotIndex":70.2608,"content":"请倒序阅读","title":"重新理解闭包，扒出来一个伪闭包？","lastCommentTime":"2018-10-13T15:48:05.328Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":715,"summaryInfo":"fuc～我们把代码丢进浏览器，调试模式看看 想真正理解闭包，最终的办法还是要使用单步调试模式。 接下来的调用就顺理成章了，每次点击按钮，直接去对应的闭包作用域内拿走展示给用户就可以了  https://www.w3schools.com/js/js_function_closures.asp  f...","isCollected":false},{"collectionCount":33,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572570582.1574,"checkStatus":true,"objectId":"5c67a74d6fb9a049f819d31f","entryView":"","subscribersCount":0,"ngxCachedTime":1572571643,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-11-01T01:09:42.138Z","rankIndex":0.00018575566919125,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c67a7236fb9a04a0540350c","verifyCreatedAt":"2019-02-16T06:41:16.307Z","createdAt":"2019-02-16T06:41:16.307Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/a1UfwCbSNiciawTuPSTBkgMpiaIFQCe0u2kZgvpibf89qCPua2A9OcnfIbhLcFSr1kymVhCT0ufgOIRG2zPLl2iaATQ/132"}},"collectedEntriesCount":8,"company":"哈尔滨工业大学（威海）","followersCount":28,"followeesCount":46,"role":"guest","postedPostsCount":49,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":4,"ngxCachedTime":1572571643,"viewedEntriesCount":395,"jobTitle":"学生","subscribedTagsCount":9,"totalCollectionsCount":90,"username":"追逐。","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0941d7473e00136","objectId":"5b987fdde51d450e8d76396d"},"author":"","screenshot":"","original":true,"hotIndex":90.4091,"content":"通过变量向外传递。 通过函数向外传递。 条件和循环体：{}不代表作用域，在es6语法中，{}会被看做代码块，此时在{}当中声明一个函数，相当于var声明，尽量不要在{}当中声明函数，否则调用的时候会有问题。 js垃圾回收机制：js 中的变量和函数不再使用后，会被自动js垃圾回收…","title":"JavaScript闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":1143,"summaryInfo":"使用js的命名空间，优点：变量不受污染。","isCollected":false},{"collectionCount":33,"isEvent":false,"commentsCount":13,"gfw":false,"buildTime":1572535794.5816,"checkStatus":true,"objectId":"5c0e6751f265da617974a96c","entryView":"","subscribersCount":0,"ngxCachedTime":1572571455,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571379,"ngxCached":true,"title":"设计模式","id":"55a872f0e4b05881ac919dfc"}],"updatedAt":"2019-10-31T15:29:54.564Z","rankIndex":0.00031794480840138,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c0e670ce51d452e2c697955","verifyCreatedAt":"2018-12-11T07:12:54.738Z","createdAt":"2018-12-11T07:12:54.738Z","user":{"community":{"github":{"username":"a244784740","avatarLarge":"https://avatars0.githubusercontent.com/u/18050754?v=4","uid":"18050754"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DGyemZ6mBWlqkaKLwJ2f5MDXcNuvd0oFcCCibS7LyB6mXCmCIicjK1jgRicfLPeUnhAhRjkBaPvkbdIFDsuKhGqmQ/132"}},"collectedEntriesCount":67,"company":"轻图信息技术","followersCount":391,"followeesCount":103,"role":"guest","postedPostsCount":26,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":57,"ngxCachedTime":1572571455,"viewedEntriesCount":1979,"jobTitle":"大数据","subscribedTagsCount":25,"totalCollectionsCount":860,"username":"嗨呀豆豆呢","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/17/16a2928ce08b7902?w=400&h=400&f=jpeg&s=31518","objectId":"5a2f82d3f265da430f3210f9"},"author":"","screenshot":"","original":true,"hotIndex":218.4054,"content":"对于全局变量来说，全局变量的生存周期当然是永久的，除非我们主动销毁这个全局变量。 currying 又称部分求值。一个 currying 的函数首先会接受一些参数，接受了这些参数之后， 该函数并不会立即求值，而是继续返回另外一个函数，刚才传入的参数在函数形成的闭包中被保 存起来…","title":"《JavaScript设计模式与开发实践》基础篇（2）—— 闭包和高阶函数","lastCommentTime":"2019-01-26T11:11:08.618Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571399},"viewsCount":3437,"summaryInfo":"","isCollected":false},{"collectionCount":32,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571726,"updatedAt":"2019-01-24T07:46:21.086Z","tags":[{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"596887696fb9a06ba14baed2","rankIndex":0.000040562942589985,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/b2042a716594","buildTime":1556101010.7501,"createdAt":"2017-07-14T09:21:26.247Z","user":{"community":{"github":{"username":"itclanCode","avatarLarge":"https://avatars2.githubusercontent.com/u/25076543?v=4","uid":"25076543"}},"collectedEntriesCount":178,"company":"","followersCount":564,"followeesCount":67,"role":"editor","postedPostsCount":23,"level":3,"isAuthor":true,"postedEntriesCount":12,"totalCommentsCount":60,"ngxCachedTime":1572571726,"viewedEntriesCount":1289,"jobTitle":"前端开发","subscribedTagsCount":70,"totalCollectionsCount":1591,"username":"itclanCoder","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/7/bf5f6206aa1c84c736e4ffc946c77517","objectId":"5900e97b1b69e60058b936ed"},"author":"","screenshot":"","original":true,"hotIndex":1092.0168,"content":"有音频,紧接着上文,进一步的聊一聊js中的闭包,自己的一点学习心得..","title":"窥探js中的闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":760,"summaryInfo":"","isCollected":false},{"collectionCount":31,"commentsCount":0,"gfw":false,"entryView":"583fbc54ac502e006b8e93fa","subscribersCount":0,"ngxCachedTime":1572571695,"updatedAt":"2019-07-13T14:19:21.448Z","tags":[{"ngxCachedTime":1572571669,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"583f9e68ac502e006be3c71d","rankIndex":0.000016693822649685,"hot":false,"autoPass":false,"originalUrl":"http://click.aliyun.com/m/7945/","buildTime":1563027561.4661,"createdAt":"2016-12-01T03:52:08.327Z","user":{"community":{"weibo":{"selfDescription":"IT咨询，每日更新","uid":"5747083810","blogAddress":"http://weibo.com/u/5747083810","username":"金翼公子","avatarLarge":"http://tvax2.sinaimg.cn/crop.8.0.711.711.180/006gWb2aly8fjvk3z1cagj30k00zkwg9.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/EK8FZ09JfUIj308Tc1TNyP03ur0TLP7BeXGicynWnHb43yzresLjlPibjEyWSWm1eDXQ1R2OkZkcrLjrndAFxd7g/132"}},"collectedEntriesCount":519,"company":"阿里云","followersCount":5376,"followeesCount":39,"role":"guest","postedPostsCount":47,"level":1,"isAuthor":false,"postedEntriesCount":667,"totalCommentsCount":61,"ngxCachedTime":1572571656,"ngxCached":true,"viewedEntriesCount":86,"jobTitle":"资深运营编辑","subscribedTagsCount":1,"totalCollectionsCount":6783,"username":"云栖小二","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/23/5eaa0e1c44d077d6043bbc267dd4cbb8","objectId":"577f6ec08ac2470061daeceb"},"author":"","screenshot":"","original":false,"hotIndex":57.879,"content":"浅析 JavaScript 中的 “闭包”","title":"浅析 JavaScript 中的 “闭包”","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571599},"viewsCount":528,"summaryInfo":"Wikipedia：. 译文：”在编程语言中，闭包（也词法闭包或函数闭包）是结合拥有 First-class function 的语言，实现词法作用域名的一种技术。” 从概念上来看，维基百科的解释更加偏向于理论层面的抽象概念，而百度百科的定义则偏重实际编码中的实体。 以 JavaScript 语言...","isCollected":false},{"collectionCount":31,"commentsCount":0,"gfw":false,"entryView":"57cd325d8ac247006458aedf","subscribersCount":0,"ngxCachedTime":1572571691,"updatedAt":"2019-10-25T11:03:29.455Z","tags":[{"ngxCachedTime":1572571669,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"}],"objectId":"57cd2d6d8ac2470064587ea2","rankIndex":0.000014770284852197,"hot":false,"autoPass":false,"originalUrl":"http://luodw.cc/2016/09/04/golang03/","buildTime":1572001409.4708,"createdAt":"2016-09-05T08:31:41.530Z","user":{"community":null,"collectedEntriesCount":59,"company":"大山","followersCount":12,"followeesCount":9,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":true,"postedEntriesCount":5,"totalCommentsCount":0,"ngxCachedTime":1572571691,"viewedEntriesCount":296,"jobTitle":"系统研发工程师","subscribedTagsCount":24,"totalCollectionsCount":111,"username":"Charles道道","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/58df5e993cfcd778cfc355ed33169ad7","objectId":"57c3d2b7a341316fa625b4d3"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/4e5df3aa2cc38f3b2c06.jpg","original":true,"hotIndex":67.2973,"content":"今天聊两个轻松的话题，golang 相比与之前学习的 C/C++，有很多新颖的特性，不知道大家的使用的时候，有没想过，这些特性是如何实现的？当然你可能会说，不了解这些特性好像也不影响自己使用 golang；对，你说的也有道理；但是，多了解底层的实现原理，对于在使用 golang 时的眼界是完全不一样的，就类似于看过 http 的实现之后，再来使用 http 框架，和未看过 http 框架时的眼界是不一样的，当然，你如果是一名 it 爱好者，求知欲自然会引导你去学习；知其然而不知其所以然，是很可怕的；","title":"从汇编角度理解 golang 多值返回和闭包 ","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571599},"viewsCount":715,"summaryInfo":"今天聊两个轻松的话题，golang相比与之前学习的C/C++，有很多新颖的特性，不知道大家的使用的时候，有没想过，这些特性是如何实现的？当然你可能会说，不了解这些特性好像也不影响自己使用golang；对，你说的也有道理；但是，多了解底层的实现原理，对于在使用golang时的眼界是完全不一样的，就类...","isCollected":false},{"collectionCount":31,"isEvent":false,"commentsCount":21,"gfw":false,"buildTime":1572236519.0503,"checkStatus":true,"objectId":"5ca47f60e51d4545133e5fb9","entryView":"","subscribersCount":0,"ngxCachedTime":1572571641,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-28T04:21:59.033Z","rankIndex":0.00033158777863299,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ca47e7251882543e10ec5f7","verifyCreatedAt":"2019-04-03T14:40:57.086Z","createdAt":"2019-04-03T14:40:57.086Z","user":{"community":{"weibo":{"selfDescription":"happy and chilling code queen(◔◡◔)","uid":"1871577107","blogAddress":"http://weibo.com/tactics2011","username":"张君卓myTAC","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.0.996.996.180/6f8e0013ly8fhjwhmcaf8j20ro0roada.jpg"},"github":{"username":"mytac","avatarLarge":"https://avatars3.githubusercontent.com/u/17641146?v=4","uid":"17641146"}},"collectedEntriesCount":90,"company":"独立开发","followersCount":14,"followeesCount":39,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":7,"ngxCachedTime":1572571641,"viewedEntriesCount":612,"jobTitle":"","subscribedTagsCount":16,"totalCollectionsCount":31,"username":"mytac","avatarLarge":"https://user-gold-cdn.xitu.io/2019/10/4/16d926e0bc329f04?w=543&h=543&f=jpeg&s=153346","objectId":"59acca62518825242238ffe9"},"author":"","screenshot":"","original":true,"hotIndex":116.6255,"content":"之前写过关于闭包的文章，本来以为自己懂了，后来面试时被问到怀疑人生。才明白自己只是觉得自己明白了而已，如果说要将一个东西理解的彻彻底底，就不能“抄书”（我之前就是抄书），而是死抠每一个知识点，一点含糊都会让整个系统崩塌。 ok，现在开始死抠。什么是闭包？ 如图，每个框框中都是一…","title":"拒绝抄书，彻底消化闭包","lastCommentTime":"2019-05-16T17:16:28.521Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":1292,"summaryInfo":"ok，现在开始死抠。什么是闭包？ 看不太懂，那就拆开看，什么是词法作用域？ 如图，每个框框中都是一个作用域，引擎在执行时（黄色框中的语句），会从内向外逐个作用域查找变量。在baz中，我们找到了变量c，没有找到a,b，就会往上一层找，bar中有b,c,baz，找到了b，同名变量c被忽略，以此类推，直...","isCollected":false},{"collectionCount":31,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572511751.0351,"checkStatus":true,"objectId":"5bae23a5f265da0ab41e6543","entryView":"","subscribersCount":0,"ngxCachedTime":1572571696,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571645,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571613,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"isEvent":false,"rankIndex":0.000060696395354147,"hot":false,"updatedAt":"2019-10-31T08:49:11.016Z","originalUrl":"https://juejin.im/post/5bae1fa95188255c3272c8bd","verifyCreatedAt":"2018-09-29T08:13:21.811Z","createdAt":"2018-09-29T08:13:21.811Z","user":{"community":{"weibo":{"selfDescription":"安卓论坛资源组","uid":"3537607331","blogAddress":"http://weibo.com/u/3537607331","username":"JIAKELEI","avatarLarge":"http://tva1.sinaimg.cn/crop.0.1.794.794.180/d2db9aa3gw1eg0sbhikcuj20m80m7diy.jpg"},"github":{"username":"helyilf","avatarLarge":"https://avatars2.githubusercontent.com/u/33384561?v=4","uid":"33384561"}},"collectedEntriesCount":76,"company":"","followersCount":4,"followeesCount":10,"role":"guest","postedPostsCount":28,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571696,"viewedEntriesCount":562,"jobTitle":"","subscribedTagsCount":29,"totalCollectionsCount":34,"username":"贾富程","avatarLarge":"https://leancloud-gold-cdn.xitu.io/wXmBNSEYeGFELEsfdEnKDqB","objectId":"57f897e1a22b9d005bf06de7"},"author":"","screenshot":"","original":true,"hotIndex":56.4644,"content":"闭包是指在一个函数中定义了一个另外一个函数，内函数里运用了外函数的临时变量，并且外函数的返回值是内函数的引用，这样就构成一个闭包。 例如以下： 去掉了全局变量的使用。而且将 show 函数封装在了 callFunc 函数内部，使外部不可见，不能使用 show 函数，隐藏了实现细…","title":"Python提高:关于闭包和装饰器","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571579},"viewsCount":508,"summaryInfo":"闭包是指在一个函数中定义了一个另外一个函数，内函数里运用了外函数的临时变量，并且外函数的返回值是内函数的引用，这样就构成一个闭包。 例如以下： 去掉了全局变量的使用。而且将 show 函数封装在了 callFunc 函数内部，使外部不可见，不能使用 show 函数，隐藏了实现细节 程序在执行时，c...","isCollected":false},{"collectionCount":29,"commentsCount":0,"gfw":false,"entryView":"581b2a3e0ce4630058729ac6","subscribersCount":0,"ngxCachedTime":1572571698,"updatedAt":"2019-10-07T15:04:55.413Z","tags":[{"ngxCachedTime":1572571581,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571588,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"objectId":"581b17038ac247004fdbf2ca","rankIndex":0.000013168015075418,"hot":false,"autoPass":false,"originalUrl":"http://sunms.codefly.top/2016/11/03/python%E4%B8%AD%E7%9A%84%E9%97%AD%E5%8C%85%E4%BB%A5%E5%8F%8A%E8%A3%85%E9%A5%B0%E5%99%A8/","buildTime":1570460695.4315,"createdAt":"2016-11-03T10:52:51.903Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erWoTbsoWLJcD8GFZEsqfjV2DvNcjmSdjg7qK6iajVZcDUVbaxlXXTeQgHDD3QaR4CwNAW99icJ3xXA/132"}},"collectedEntriesCount":221,"company":"杭州","followersCount":5299,"followeesCount":49,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":true,"postedEntriesCount":12,"totalCommentsCount":117,"ngxCachedTime":1572571674,"ngxCached":true,"viewedEntriesCount":4767,"jobTitle":"后端开发工程师","subscribedTagsCount":398,"totalCollectionsCount":2624,"username":"codefly","avatarLarge":"https://leancloud-gold-cdn.xitu.io/dcda1e9dc9c67eb97ab3.jpg?imageView/2/w/100/h/100/q/80/format/png","objectId":"57c4e4058ac24700635210f6"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/2badf32b7963dc728faa.png","original":false,"hotIndex":54.0538,"content":"python 装饰器","title":"python 中的闭包以及装饰器","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571581},"viewsCount":493,"summaryInfo":"学习闭包以及装饰器首先要了解函数的作用域,在python中函数中变量的作用域优先级如下: 注意:不是所有的语言都是支持函数内部可以访问函数外部的变量。比如说PHP中函数内部查找不到变量的时候是不会去函数外部查找的，除非使用global指定全局。在这方面，python和javascript比较类似。...","isCollected":false},{"collectionCount":29,"commentsCount":0,"gfw":false,"entryView":"58e4acc0570c350057b675e8","subscribersCount":0,"ngxCachedTime":1568851512,"updatedAt":"2019-09-05T10:34:31.681Z","tags":[{"ngxCachedTime":1568851485,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"objectId":"58e4acbf570c350057b675e7","rankIndex":0.000020925768516299,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/58e4ac5d44d904006d2a9a19","buildTime":1567679671.6974,"createdAt":"2017-04-05T08:37:19.874Z","user":{"community":{"github":{"username":"atuooo","avatarLarge":"https://avatars0.githubusercontent.com/u/12973478?v=4","uid":"12973478"}},"collectedEntriesCount":8,"company":"","followersCount":295,"followeesCount":6,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":true,"postedEntriesCount":3,"totalCommentsCount":3,"ngxCachedTime":1568851394,"ngxCached":true,"viewedEntriesCount":715,"jobTitle":"","subscribedTagsCount":28,"totalCollectionsCount":81,"username":"a_tuooo","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/3/16c55fccf7ae7115?w=400&h=400&f=jpeg&s=34606","objectId":"57f9a9aeda2f60004f90e4ac"},"author":"","screenshot":"","original":true,"hotIndex":64.5699,"content":"原文地址：Swift Retention Cycle in Closures and Delegate 原文作者：Bob Lee 译文出自：掘金翻译计划 译者：oOatuo 校对者：Deepmissea, gy134340 Swift 闭包和代理中的保留周期 让我们一起来弄明白…","title":"[译] Swift 闭包和代理中的保留周期 ","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851405},"viewsCount":697,"summaryInfo":"当我第一次遇到闭包和代理时，我注意到人们在闭包中声明 ，在委托属性前声明 。我想知道为什么。 这不是一篇给初学者的教程。以下列表是我期望我的读者知道的。 如果你不是很熟悉上面的知识点，别担心。我以前的文章和 YouTube 教程涵盖了所有这些知识。你可以在 这里 找到所需的知识以及我高效的开发工具...","isCollected":false},{"collectionCount":29,"commentsCount":1,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571796,"updatedAt":"2019-10-23T15:28:59.690Z","tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571683,"ngxCached":true,"title":"Node.js","id":"555e9a77e4b00c57d9955d64"},{"ngxCachedTime":1572571702,"ngxCached":true,"title":"Chrome","id":"555e9ae0e4b00c57d99562ee"}],"objectId":"59b9e7dd6fb9a00a4c26ecd5","rankIndex":0.000020669144989321,"hot":false,"autoPass":false,"originalUrl":"http://www.zcfy.cc/article/javascript-scope-and-closures-css-tricks-4107.html?t=new","buildTime":1571844539.7097,"createdAt":"2017-09-14T02:22:21.282Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/0viawNqRfUfBECkYNpibdQMlqaiaibToqyD9icHgP4Jm0BdoSXzCiaX3h80u4mQjO6SodYZvd6ibY2Tp65o1lh6U17ccA/132"}},"collectedEntriesCount":547,"company":"丹佛掘金","followersCount":3729,"followeesCount":32,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":293,"totalCommentsCount":352,"ngxCachedTime":1572571701,"ngxCached":true,"viewedEntriesCount":2589,"jobTitle":"编辑","subscribedTagsCount":15,"totalCollectionsCount":10400,"username":"Plum","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/28/64594283519482d5411728f04e359195","objectId":"5951d9005188250d7e730340"},"author":"","screenshot":null,"original":false,"hotIndex":51.8832,"content":"作用域和闭包在JavaScript里非常重要。但是在我最初学习JavaScript的时候，却很难理解。这篇文章会用一些例子帮你理解它们。","title":"JavaScript作用域和闭包","lastCommentTime":"2017-09-14T11:59:33.280Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":424,"summaryInfo":"作用域和闭包在JavaScript里非常重要。但是在我最初学习JavaScript的时候，却很难理解。这篇文章会用一些例子帮你理解它们。 JavaScript的作用域限定了你可以访问哪些变量。有两种作用域：全局作用域，局部作用域。 在所有函数声明或者大括号之外定义的变量，都在全局作用域里。 不过这...","isCollected":false},{"collectionCount":29,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572522861.7183,"checkStatus":true,"objectId":"5aedc7def265da0ba351f071","entryView":"","subscribersCount":0,"ngxCachedTime":1572571789,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571688,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000044815831151521,"hot":false,"updatedAt":"2019-10-31T11:54:21.702Z","originalUrl":"https://juejin.im/post/5aedc54e51882567147d44be","verifyCreatedAt":"2018-05-08T07:25:17.805Z","createdAt":"2018-05-08T07:25:17.805Z","user":{"community":null,"collectedEntriesCount":2,"company":"","followersCount":1,"followeesCount":58,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571790,"viewedEntriesCount":14,"jobTitle":"","subscribedTagsCount":34,"totalCollectionsCount":29,"username":"Alex365","avatarLarge":"","objectId":"5ad045b06fb9a028c97a7803"},"author":"","screenshot":"","original":true,"hotIndex":66.3467,"content":"需要注意的是，函数内部可以直接读取全局变量。 函数外部无法读取到函数内部的局部变量，因为函数在执行完之后，函数内部的环境就被销毁了。 如果函数内部没有使用var，那么实际上就相当于把这个变量声明为全局变量了。 上面的代码中，f2可以访问到f1的局部变量message，那么我们只…","title":"面试：对javascript的闭包的理解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":732,"summaryInfo":"js的变量作用域有两种，全局变量和局部变量 需要注意的是，函数内部可以直接读取全局变量。 函数外部无法读取到函数内部的局部变量，因为函数在执行完之后，函数内部的环境就被销毁了。 如果函数内部没有使用，那么实际上就相当于把这个变量声明为全局变量了。 上面的代码中，可以访问到的局部变量，那么我们只要把...","isCollected":false},{"collectionCount":29,"commentsCount":0,"gfw":false,"objectId":"59c33bf351882529c444988d","checkStatus":true,"buildTime":1571752949.0743,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571491,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571421,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"},{"ngxCachedTime":1572571461,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571456,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"},{"ngxCachedTime":1572571377,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"autoPass":false,"rankIndex":0.000019546893632163,"hot":false,"updatedAt":"2019-10-22T14:02:29.056Z","originalUrl":"https://zhuanlan.zhihu.com/p/29245059","verifyCreatedAt":"2017-09-21T10:04:51.020Z","createdAt":"2017-09-21T10:04:51.020Z","user":{"community":{"weibo":{"selfDescription":"一个普普通通简简单单平平凡凡的神","uid":"2598069875","blogAddress":"http://weibo.com/u/2598069875","username":"刺客白告","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.0.996.996.180/9adb6673ly8fe01mxyxm0j20ro0roac8.jpg"}},"collectedEntriesCount":827,"company":"鹅厂","followersCount":5765,"followeesCount":24,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":544,"totalCommentsCount":210,"ngxCachedTime":1572571381,"ngxCached":true,"viewedEntriesCount":1215,"jobTitle":"神","subscribedTagsCount":9,"totalCollectionsCount":10611,"username":"一个普普通通简简单单平平凡凡的神","avatarLarge":"https://user-gold-cdn.xitu.io/2017/8/7/b13842a126fb8c8a22b94b9e2498a75a","objectId":"598413fef265da3e2a2f7fda"},"author":"","screenshot":null,"original":false,"hotIndex":48.2668,"content":"我们学框架、看源码、学设计模式、学并发编程、学缓存，甚至了解大型网站架构设计，可回过头来看看一些非常简单的Java代码，却发现还有那么几个旮旯，是自己没完全看透的。","title":"为什么说Java匿名内部类是残缺的闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571460},"viewsCount":382,"summaryInfo":" 这段程序的功能非常简单，就是启动一个线程，来模拟一只小狗不断过生日的一个过程。 不过，这段代码并不能通过编译，为什么，仔细看一下！ 看出来了吗？是的，play()方法中，DOG变量要加上FINAL修饰符，否则编译器会提示： 加上final后，编译通过，程序正常运行。 但是，这里为什么一定要加FI...","isCollected":false},{"collectionCount":27,"commentsCount":0,"gfw":false,"entryView":"57c3e91eefa631005ac379b5","subscribersCount":0,"ngxCachedTime":1572484310,"updatedAt":"2019-10-29T11:33:03.163Z","tags":[{"ngxCachedTime":1572484307,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"}],"objectId":"57c3e80f165abd00666ae275","rankIndex":0.000012816800772832,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/83c7581bf8e3","buildTime":1572348783.1793,"createdAt":"2016-08-29T07:45:19.651Z","user":{"community":null,"collectedEntriesCount":4,"company":"","followersCount":13,"followeesCount":1,"role":"guest","postedPostsCount":7,"level":1,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":6,"ngxCachedTime":1572484310,"viewedEntriesCount":118,"jobTitle":"iOS、C#、html5+css+Jquery、SqlServer","subscribedTagsCount":2,"totalCollectionsCount":109,"username":"15010206793","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/42324e265dc5e0a26c5514d085e741e0","objectId":"57c39c0c79bc440063e5ada4"},"author":"","screenshot":"","original":false,"hotIndex":59.2442,"content":"OC 的 block 和 Swift 的闭包对比使用，和各个情况","title":"看我怎么搞定 OC 的 block 和 Swift 的闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484190},"viewsCount":641,"summaryInfo":"gitHub:https://github.com/7General/OC-BlocK-Swift/tree/master // ****1：在函数中使用Block不带参数和没返回值的block-(void)AFNetWork:(NSString *)name withComplated:(voi...","isCollected":false},{"collectionCount":27,"autoPass":false,"commentsCount":14,"gfw":false,"buildTime":1572546384.7345,"checkStatus":true,"objectId":"5aac88ff6fb9a028d207b4c7","entryView":"","subscribersCount":0,"ngxCachedTime":1572571684,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571578,"ngxCached":true,"title":"PHP","id":"555e9a84e4b00c57d9955e1b"},{"ngxCachedTime":1572571581,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"}],"isEvent":false,"rankIndex":0.000059329154707984,"hot":false,"updatedAt":"2019-10-31T18:26:24.716Z","originalUrl":"https://juejin.im/post/5aac88ab51882555627d0d37","verifyCreatedAt":"2018-03-19T02:07:33.303Z","createdAt":"2018-03-19T02:07:33.303Z","user":{"community":null,"collectedEntriesCount":28,"company":"null","followersCount":6,"followeesCount":15,"role":"guest","postedPostsCount":3,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571684,"viewedEntriesCount":596,"jobTitle":"研发工程师","subscribedTagsCount":27,"totalCollectionsCount":72,"username":"枫恋寒","avatarLarge":"https://user-gold-cdn.xitu.io/2018/3/17/16231f3a4c54803a?w=640&h=640&f=jpeg&s=90856","objectId":"58607d51b123db0065ba954e"},"author":"","screenshot":"","original":true,"hotIndex":100.4063,"content":"匿名函数，也叫闭包函数，说白了就是“没有名字的函数”，和一般函数结构一样，只是少了函数名以及最后需要加上分号;。 匿名函数也可以作为变量的值来使用。 匿名函数可以从父作用域继承变量，而这个父作用域是定义该闭包的函数（不一定是调用它的函数）。 注意：必须使用use关键字将变量传递…","title":"PHP 闭包那些事儿","lastCommentTime":"2018-05-01T08:22:15.222Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571581},"viewsCount":1174,"summaryInfo":"匿名函数，也叫闭包函数，说白了就是“没有名字的函数”，和一般函数结构一样，只是少了函数名以及最后需要加上分号。 闭包除了可以从父作用域继承变量外，还可以使用关键字将变量传递进去，具体见官方文档。 定义一个闭包函数，其实就是实例化一个闭包类()对象： 除了以上方法，闭包还实现了一个魔术方法，当尝试以...","isCollected":false},{"collectionCount":26,"isEvent":false,"commentsCount":13,"gfw":false,"buildTime":1572534293.6401,"checkStatus":true,"objectId":"5c516bc8518825260a7e06ad","entryView":"","subscribersCount":0,"ngxCachedTime":1572571645,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T15:04:53.623Z","rankIndex":0.00014648297865474,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c51665d6fb9a049c84fdf75","verifyCreatedAt":"2019-01-31T08:56:41.116Z","createdAt":"2019-01-31T08:56:41.116Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/tNHYbW9g7BYLLU7CoGMLvjz7FyBnsY4Swuicdr56PjIoR3fTuH35ffRQrNYaaHwibpv1Y5lX3wDu1H0ibybme9x0A/132"}},"collectedEntriesCount":360,"company":"金蝶软件（中国）有限公司","followersCount":541,"followeesCount":124,"role":"guest","postedPostsCount":7,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":166,"ngxCachedTime":1572571560,"ngxCached":true,"viewedEntriesCount":2204,"jobTitle":"Web前端开发","subscribedTagsCount":25,"totalCollectionsCount":1686,"username":"_呜啦啦啦火车笛","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/9/16c73b45e5a27cc6?w=658&h=548&f=png&s=17010","objectId":"5ad2ab5d6fb9a028c14ae6de"},"author":"","screenshot":"","original":true,"hotIndex":77.8139,"content":"说起javascript中的闭包，首先要知道为什么会存在闭包，其作用又是什么。且为什么闭包中就能让外层函数的变量始终保存呢？下面我们将从这两个角度去剖析它。当然，大神绕道，谢谢哈。 让变量始终保存在内存中。 对此：阮一峰老师给出了一个通俗的关于闭包的解释： 闭包就是能够读取其他…","title":"用垃圾回收机制解释JavaScript中的闭包","lastCommentTime":"2019-08-07T15:50:20.874Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":764,"summaryInfo":"说起javascript中的闭包，首先要知道为什么会存在闭包，其作用又是什么。且为什么闭包中就能让外层函数的变量始终保存呢？下面我们将从这两个角度去剖析它。当然，大神绕道，谢谢哈。 开门见山，直接总结闭包的两大核心作用： 众所周知，变量在javascript中有全局变量和局部变量，函数内部可以访问...","isCollected":false},{"collectionCount":26,"commentsCount":2,"gfw":false,"objectId":"5a7d1013f265da4e83265a56","checkStatus":true,"buildTime":1569743173.1934,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571395,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571344,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"autoPass":true,"rankIndex":0.000024200870157888,"hot":false,"updatedAt":"2019-09-29T07:46:13.176Z","originalUrl":"http://www.cnblogs.com/renpingsheng/p/8433212.html","verifyCreatedAt":"2018-02-09T03:05:55.242Z","createdAt":"2018-02-09T03:05:55.242Z","user":{"community":{"weibo":{"selfDescription":"一个普普通通简简单单平平凡凡的神","uid":"2598069875","blogAddress":"http://weibo.com/u/2598069875","username":"刺客白告","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.0.996.996.180/9adb6673ly8fe01mxyxm0j20ro0roac8.jpg"}},"collectedEntriesCount":827,"company":"鹅厂","followersCount":5765,"followeesCount":24,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":544,"totalCommentsCount":210,"ngxCachedTime":1572571318,"ngxCached":true,"viewedEntriesCount":1215,"jobTitle":"神","subscribedTagsCount":9,"totalCollectionsCount":10611,"username":"一个普普通通简简单单平平凡凡的神","avatarLarge":"https://user-gold-cdn.xitu.io/2017/8/7/b13842a126fb8c8a22b94b9e2498a75a","objectId":"598413fef265da3e2a2f7fda"},"author":"","screenshot":null,"original":false,"hotIndex":41.5305,"content":"其实在函数式编程中，函数里面还可以嵌套函数，如下面这样 此时我们调用foo函数，执行结果会是什么样子的呢？？ 结果如上所示，只会执行foo函数的第一层函数，bar函数是不会被执行的。为什么呢 实际上来说，不管函数写在哪个部分，那都只是定义了一个函数，只有这个函数被调用，函数内部…","title":"浅谈python中的闭包函数","lastCommentTime":"2018-02-10T11:36:02.471Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571337},"viewsCount":267,"summaryInfo":"其实在函数式编程中，函数里面还可以嵌套函数，如下面这样 此时我们调用foo函数，执行结果会是什么样子的呢？？ 结果如上所示，只会执行foo函数的第一层函数，bar函数是不会被执行的。为什么呢 实际上来说，不管函数写在哪个部分，那都只是定义了一个函数，只有这个函数被调用，函数内部的语句才会被执行 这...","isCollected":false},{"collectionCount":25,"isEvent":false,"commentsCount":2,"gfw":false,"buildTime":1572411392.0149,"checkStatus":true,"objectId":"5c623477518825622f12d790","entryView":"","subscribersCount":0,"ngxCachedTime":1572571643,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T04:56:31.997Z","rankIndex":0.00018652483319621,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c6232e2e51d457f39411eee","verifyCreatedAt":"2019-02-12T02:55:15.993Z","createdAt":"2019-02-12T02:55:15.993Z","user":{"community":null,"collectedEntriesCount":10,"company":"","followersCount":8,"followeesCount":4,"role":"guest","postedPostsCount":4,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":2,"ngxCachedTime":1572571643,"viewedEntriesCount":212,"jobTitle":"","subscribedTagsCount":5,"totalCollectionsCount":42,"username":"moZLeo","avatarLarge":"https://user-gold-cdn.xitu.io/2019/2/12/168df9350b088436?w=256&h=256&f=png&s=2849","objectId":"5c6231c6e51d457fa44f414d"},"author":"","screenshot":"","original":true,"hotIndex":92.0087,"content":"局限自定义: 在Javascript 中子函数使用了其父函数或者外层函数的变量就产生了一个闭包。这时外层变量的值能被子函数使用且外层变量在子函数未销毁之前一直被分配不会被释放。 闭包的产生由于变量作用域链引起的(由词法作用域导致)。 eval作用域。 在函数中定义的变量，就属于…","title":"JavaScript 闭包那些事","lastCommentTime":"2019-07-11T15:53:26.898Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":1299,"summaryInfo":"其他时效优质文章，欢迎 ❤️ Blog 🌟 局限自定义: 在Javascript 中子函数使用了其父函数或者外层函数的变量就产生了一个闭包。这时外层变量的值能被子函数使用且外层变量在子函数未销毁之前一直被分配不会被释放。 闭包的产生由于变量作用域链引起的(由词法作用域导致)。 在函数中定义的变量，...","isCollected":false},{"collectionCount":25,"commentsCount":5,"gfw":false,"objectId":"59e8972bf265da432f303b3a","checkStatus":true,"buildTime":1571055463.6298,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571791,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"autoPass":false,"rankIndex":0.000028340318806974,"hot":false,"updatedAt":"2019-10-14T12:17:43.613Z","originalUrl":"https://juejin.im/post/59e896d7f265da432a7ab206","verifyCreatedAt":"2017-10-19T12:14:35.552Z","createdAt":"2017-10-19T12:14:35.552Z","user":{"community":{"weibo":{"selfDescription":"卫斯理/三国/JavaScript　文学·历史·编程","uid":"1795310341","blogAddress":"http://weibo.com/javarun","username":"天方夜影","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.179.179.180/6b024305tw1eh5fyq33dlj20500503yk.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eozpyAUaM6razM3WqWghsPk4C63HPuoT8vkNtl6qLJnMVh0hu2LX5drVrurzK0WVuO1ibYBfw6qwaQ/132"},"github":{"username":"AlphaBao","avatarLarge":"https://avatars0.githubusercontent.com/u/3227118?v=4","uid":"3227118"}},"collectedEntriesCount":20,"company":"","followersCount":34,"followeesCount":2,"role":"editor","postedPostsCount":11,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":18,"ngxCachedTime":1572571791,"viewedEntriesCount":505,"jobTitle":"","subscribedTagsCount":27,"totalCollectionsCount":582,"username":"天方夜","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08a677c1c2931f9","objectId":"59e85c146fb9a045284598b1"},"author":"","screenshot":"","original":true,"hotIndex":65.0531,"content":"本文写于 2013年06月16日，今天做了一点修改，所谓修改，其实只是删去了几句不影响技术内容的话。关于闭包，我最近写了一篇新的文章，提到了静态作用域，相比本文，是对闭包的更深一层的解释，可以作为本文的后续阅读。至于本文，也不是已经没有阅读的价值，因为它说明了以下两点： 闭包是…","title":"【旧文新读】解释“闭包”需要几行代码？","lastCommentTime":"2017-12-09T09:20:26.103Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":689,"summaryInfo":"本文写于 ，今天做了一点修改，所谓修改，其实只是删去了几句不影响技术内容的话。关于闭包，我最近写了一篇新的文章，提到了静态作用域，相比本文，是对闭包的更深一层的解释，可以作为本文的后续阅读。至于本文，也不是已经没有阅读的价值，因为它说明了以下两点： 关于什么是闭包，很多“高手”会给出一段“特权函数...","isCollected":false},{"collectionCount":25,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571084,"updatedAt":"2019-10-31T10:24:47.725Z","tags":[{"ngxCachedTime":1572571048,"ngxCached":true,"title":"函数式编程","id":"584628f161ff4b006c3c147f"}],"objectId":"5950af566fb9a06bc3407be9","rankIndex":0.000011784487520803,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5950af315188250d892f47b6","buildTime":1572517487.7419,"createdAt":"2017-06-26T06:53:10.726Z","user":{"community":null,"collectedEntriesCount":28,"company":"","followersCount":314,"followeesCount":9,"role":"editor","postedPostsCount":10,"level":2,"isAuthor":true,"postedEntriesCount":8,"totalCommentsCount":12,"ngxCachedTime":1572571084,"viewedEntriesCount":28,"jobTitle":"","subscribedTagsCount":43,"totalCollectionsCount":208,"username":"疯狂的小蘑菇","avatarLarge":"","objectId":"593828e8b123db00644e9a89"},"author":"","screenshot":"","original":true,"hotIndex":34.773,"content":"动态作用域 在任何JS核心引擎中，都有一张全局表来存储全局变量 const _ = require('../util/understore') // 动态作用域，任何JS核心引擎中，有个全局查找表 const globals = {} const makeBind = resol…","title":"函数式编程3-作用域与闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571007},"viewsCount":179,"summaryInfo":"在任何JS核心引擎中，都有一张全局表来存储全局变量 我们无法精确控制函数中的this是什么，因为函数的this由调用者决定。所以，我们需要在调用函数前进行绑定。 闭包的用途非常广泛，任何函数内部能读取外部变量（包括参数，全局变量，私有变量），这就形成了一个闭包。","isCollected":false},{"collectionCount":25,"commentsCount":2,"gfw":false,"objectId":"5a5b5dbf6fb9a01cb13919bf","checkStatus":true,"buildTime":1572491958.3837,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571801,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"autoPass":true,"rankIndex":0.00002121300941438,"hot":false,"updatedAt":"2019-10-31T03:19:18.366Z","originalUrl":"https://github.com/wangzianan/Blog/issues/2","verifyCreatedAt":"2018-01-15T05:52:17.850Z","createdAt":"2018-01-15T05:52:17.850Z","user":{"community":{"github":{"username":"wangzianan","avatarLarge":"https://avatars0.githubusercontent.com/u/13514472?v=4","uid":"13514472"}},"collectedEntriesCount":2,"company":"前端之心","followersCount":933,"followeesCount":18,"role":"guest","postedPostsCount":7,"level":2,"isAuthor":true,"postedEntriesCount":7,"totalCommentsCount":39,"ngxCachedTime":1572571739,"ngxCached":true,"viewedEntriesCount":477,"jobTitle":"前端","subscribedTagsCount":89,"totalCollectionsCount":979,"username":"端端君","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0838fdbb1353f4e","objectId":"5844304bac502e006bfd412e"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/1/14/160f4e6310a078c7?w=1080&h=810&f=jpeg&s=19703","original":false,"hotIndex":41.7082,"content":"结合实例深入理解闭包","title":"深入理解JavaScript的闭包","lastCommentTime":"2018-01-16T11:12:27.963Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":287,"summaryInfo":"闭包是指有权访问另一个函数作用域中的变量的函数 创建闭包的常见方式，在一个函数内部创建另一个函数 当函数第一次被调用时，会创建一个执行环境（execution context）及相应的作用域链，并把作用域链赋值给一个特殊的内部属性（scope）。然后，使用 this, arguments 和其它命...","isCollected":false},{"collectionCount":24,"commentsCount":0,"gfw":false,"entryView":"57a97ca079bc440054deda1c","subscribersCount":0,"ngxCachedTime":1572096456,"updatedAt":"2019-10-18T15:46:31.232Z","tags":[{"ngxCachedTime":1572096444,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"},{"ngxCachedTime":1572096416,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"},{"ngxCachedTime":1572096362,"ngxCached":true,"title":"掘金翻译计划","id":"56b5a7f3df0eea00544e1993"},{"ngxCachedTime":1572096407,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"}],"objectId":"57a4b3d37db2a2005a992f67","rankIndex":0.000019791713492822,"hot":true,"autoPass":false,"originalUrl":"https://github.com/yifili09/gold-miner/blob/master/TODO/closure-capture-1.md","buildTime":1571413591.2504,"createdAt":"2016-08-05T15:42:11.300Z","user":{"community":{"github":{"email":"yifili09@gmail.com","uid":"1016943","nickname":"Nicolas(Yifei) Li"}},"collectedEntriesCount":73,"company":"福特汽车(中国)有限公司","followersCount":1222,"followeesCount":53,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":21,"totalCommentsCount":17,"ngxCachedTime":1572096456,"viewedEntriesCount":212,"jobTitle":"Adv. Engineer","subscribedTagsCount":21,"totalCollectionsCount":921,"username":"Nicolas_Yifei_Li","avatarLarge":"https://lc-gold-cdn.xitu.io/ae9d2758b27b4a1b33c4.jpg?imageView/1/w/100/h/100/q/80/format/png","objectId":"576a01722e958a00584180fa"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/c4363ee806031182a302.jpg","original":false,"hotIndex":93.0137,"content":"全面分析 `Swift` 中的闭包是如何捕获变量的！ ","title":"[译] 深入理解 Swift 中闭包的捕捉语义（一）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572096401},"viewsCount":1376,"summaryInfo":"即使是有 的今天，理解内存管理和对象的生命周期仍旧是非常重要的。当使用闭包的时候是一个特例，它在 中出现的场景越来越多，比起 的代码块的捕获规则有很多不同的捕获语法。让我们看看它们是如果工作的吧。 在 中，闭包捕获了他们引用到的变量: 默认情况下，在闭包外申明的变量会被使用这些变量的闭包在内部保留...","isCollected":false},{"collectionCount":24,"commentsCount":1,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571396,"updatedAt":"2019-10-30T08:39:50.981Z","tags":[{"ngxCachedTime":1572571348,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"},{"ngxCachedTime":1572571344,"ngxCached":true,"title":"GitHub","id":"555e9abee4b00c57d9956152"}],"objectId":"56e111a9816dfa005269700a","rankIndex":0.0000063301879617188,"hot":false,"autoPass":false,"originalUrl":"https://github.com/rainyear/pytips/blob/master/Markdowns/2016-03-10-Scope-and-Closure.md","buildTime":1572424790.9999,"createdAt":"2016-03-10T06:18:17.995Z","user":{"community":{"github":{"username":"rainyear","avatarLarge":"https://avatars2.githubusercontent.com/u/3953966?v=4","uid":"3953966"}},"collectedEntriesCount":268,"company":"HUAWEI","followersCount":20059,"followeesCount":8,"role":"editor","postedPostsCount":13,"level":3,"isAuthor":true,"postedEntriesCount":148,"totalCommentsCount":195,"ngxCachedTime":1572571298,"ngxCached":true,"viewedEntriesCount":877,"jobTitle":"UX","subscribedTagsCount":17,"totalCollectionsCount":8255,"username":"雨神姥爷","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/18/16726c50eafe93ff?w=5472&h=3648&f=jpeg&s=3014883","objectId":"559603dce4b001ca17215568"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/fcfe158637925eac9136.png","original":true,"hotIndex":36.0653,"content":"每天一点 Python！","title":"Python 作用域与闭包 - PyTips 0x04","lastCommentTime":"2016-03-11T15:29:46.288Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571359},"viewsCount":219,"summaryInfo":"","isCollected":false},{"collectionCount":24,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1570685760.1368,"checkStatus":true,"objectId":"5b02755ef265da0b776ffdc3","entryView":"","subscribersCount":0,"ngxCachedTime":1572571392,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571371,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"isEvent":false,"rankIndex":0.000079760323241677,"hot":false,"updatedAt":"2019-10-10T05:36:00.120Z","originalUrl":"https://www.codevoila.com/post/51/python-tutorial-python-function-and-python-closure","verifyCreatedAt":"2018-05-21T08:16:17.945Z","createdAt":"2018-05-21T08:16:17.945Z","user":{"community":{"weibo":{"selfDescription":"校长只能帮到你这里了","uid":"1930864582","blogAddress":"http://weibo.com/318580666","username":"橙子_校长","avatarLarge":"https://tvax1.sinaimg.cn/crop.0.0.750.750.180/7316a7c6ly8fohkmj4zuuj20ku0kuq33.jpg?KID=imgbed,tva&Expires=1570869367&ssig=5UKr3eCICn"}},"collectedEntriesCount":28,"company":"","followersCount":6,"followeesCount":13,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":1,"ngxCachedTime":1572571392,"viewedEntriesCount":477,"jobTitle":"","subscribedTagsCount":3,"totalCollectionsCount":47,"username":"橙子_校长","avatarLarge":"https://leancloud-gold-cdn.xitu.io/6c30ab374fb41f3aa583.JPG","objectId":"58d1084d44d90400684e4b9a"},"author":"","screenshot":null,"original":false,"hotIndex":107.0351,"content":"分享这个的原因主要是，使用闭包时一个常见的错误，内部嵌套的函数(inner function)直接修改外部函数(outer function) 的变量即 free variables时，会报 UnboundLocalError错误。这篇博文有详细解释","title":"Python教程：Python函数和Python闭包","lastCommentTime":"2018-08-23T22:14:03.897Z","type":"article","english":true,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571339},"viewsCount":1656,"summaryInfo":"Python functions beyond basics and a deep look at closure in Python. All examples in this article use Python 3.3+. Let's introduce several important ...","isCollected":false},{"collectionCount":24,"commentsCount":2,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571789,"updatedAt":"2019-10-21T18:20:21.697Z","tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"59840618f265da3e252a08a7","rankIndex":0.000024933945404716,"hot":false,"autoPass":false,"originalUrl":"https://mp.weixin.qq.com/s/5rZIW2CTL0DzYBZ06w1VSA","buildTime":1571682021.715,"createdAt":"2017-08-04T06:55:25.509Z","user":{"community":null,"collectedEntriesCount":2,"company":"斯伦贝谢","followersCount":3,"followeesCount":45,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":4,"ngxCachedTime":1572571789,"viewedEntriesCount":0,"jobTitle":"前端开发专家","subscribedTagsCount":24,"totalCollectionsCount":125,"username":"神码大姐","avatarLarge":"","objectId":"5964d0c26fb9a06baf2eb9a7"},"author":"","screenshot":"","original":true,"hotIndex":67.3972,"content":"追了这么久的楚乔传，终于也快大结局了。然而大魏燕北这场恶战导致多少人游离失所。其实这场战争本是可以避免的，只因皇帝老儿不懂闭包之法。","title":"楚乔传为你解秘闭包","lastCommentTime":"2017-08-06T18:49:30.454Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":814,"summaryInfo":"功能介绍 一个前端码农对技术，生活，育儿，八卦的闲聊。  眼看燕北的势力日益壮大，大魏皇帝赵正德正托着下巴思忖着燕将是否有造反之意。这天他约见了颇有谋略的宇文府四少宇文钥。 远处宇文钥来到大殿，定了定神,毕恭毕敬的说道 ：“皇上，今日传微臣来，不知所谓何事？” 皇上，看了看他。眯着眼睛，装作毫不在...","isCollected":false},{"collectionCount":24,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572518330.4922,"checkStatus":true,"objectId":"5c850ddde51d453c8f486d24","entryView":"","subscribersCount":0,"ngxCachedTime":1572571192,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571096,"ngxCached":true,"title":"Go","id":"555e9a80e4b00c57d9955de2"}],"updatedAt":"2019-10-31T10:38:50.478Z","rankIndex":0.00032793953193766,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c850d035188257ec629e73e","verifyCreatedAt":"2019-03-11T07:03:38.151Z","createdAt":"2019-03-11T07:03:38.151Z","user":{"community":{"weibo":{"selfDescription":"","uid":"3795602721","blogAddress":"http://weibo.com/u/3795602721","username":"liSeriod","avatarLarge":"https://tvax1.sinaimg.cn/default/images/default_avatar_female_180.gif?KID=imgbed,tva&Expires=1571920759&ssig=Ohc5loCYhL"}},"collectedEntriesCount":35,"company":"","followersCount":27,"followeesCount":28,"role":"guest","postedPostsCount":6,"level":2,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":6,"ngxCachedTime":1572571158,"ngxCached":true,"viewedEntriesCount":5883,"jobTitle":"后端","subscribedTagsCount":315,"totalCollectionsCount":67,"username":"sulinehk","avatarLarge":"https://user-gold-cdn.xitu.io/2019/6/11/16b45d5f0ffad123?w=440&h=292&f=png&s=249451","objectId":"5a65c02df265da3e5a576387"},"author":"","screenshot":"","original":true,"hotIndex":138.1867,"content":"什么是闭包？闭包是由函数和与其相关的引用环境组合而成的实体。 下面就来通过几个例子来说明 Go 语言中的闭包以及由闭包引用产生的问题。 在说明闭包之前，先来了解一下什么是函数变量。 在 Go 语言中，函数被看作是第一类值，这意味着函数像变量一样，有类型、有值，其他普通变量能做的…","title":"Go 语言闭包详解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571118},"viewsCount":2272,"summaryInfo":"什么是闭包？闭包是由函数和与其相关的引用环境组合而成的实体。 下面就来通过几个例子来说明 Go 语言中的闭包以及由闭包引用产生的问题。 在说明闭包之前，先来了解一下什么是函数变量。 在 Go 语言中，函数被看作是第一类值，这意味着函数像变量一样，有类型、有值，其他普通变量能做的事它也可以。 调用这...","isCollected":false},{"collectionCount":24,"commentsCount":0,"gfw":false,"objectId":"59e5c85b6fb9a04528458ec8","checkStatus":true,"buildTime":1571055410.1165,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571802,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"autoPass":false,"rankIndex":0.000017360912651695,"hot":false,"updatedAt":"2019-10-14T12:16:50.100Z","originalUrl":"https://juejin.im/post/59e5c806f265da43085d1a45","verifyCreatedAt":"2017-10-18T02:09:11.777Z","createdAt":"2017-10-18T02:09:11.777Z","user":{"community":{"github":{"username":"cduyzh","avatarLarge":"https://avatars2.githubusercontent.com/u/19870533?v=4","uid":"19870533"}},"collectedEntriesCount":30,"company":"乐檬互动科技","followersCount":1,"followeesCount":16,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":7,"ngxCachedTime":1572571802,"viewedEntriesCount":1822,"jobTitle":"FE","subscribedTagsCount":13,"totalCollectionsCount":24,"username":"杨子皓cduyzh","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0845d553566caf9","objectId":"58cbd75c2f301e007e4072e8"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/10/17/fd9714c11209a67bfed7cf64ad841438","original":true,"hotIndex":39.9678,"content":"有很多人搞不清匿名函数和闭包这两个概念，经常混用。闭包是指有权访问另一个函数作用域中的变量的函数。匿名函数就是没有实际名字的函数。 闭包，其实是一种语言特性，它是指的是程序设计语言中，允许将函数看作对象，然后能像在对象中的操作搬在函数中定义实例（局部）变量，而这些变量能在函数中…","title":"JS的闭包相关知识","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":316,"summaryInfo":"有很多人搞不清匿名函数和闭包这两个概念，经常混用。闭包是指有权访问另一个函数作用域中的变量的函数。匿名函数就是没有实际名字的函数。 闭包，其实是一种语言特性，它是指的是程序设计语言中，允许将函数看作对象，然后能像在对象中的操作搬在函数中定义实例（局部）变量，而这些变量能在函数中保存到函数的实例对象...","isCollected":false},{"collectionCount":24,"commentsCount":0,"gfw":false,"entryView":"58ad06422f301e006c42d81a","subscribersCount":0,"ngxCachedTime":1572571651,"updatedAt":"2019-09-12T03:52:15.439Z","tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58ad044fb123db00672b43e7","rankIndex":0.0000121296349908,"hot":false,"autoPass":false,"originalUrl":"https://github.com/SimonZhangITer/MyBlog/issues/7","buildTime":1568260335.4552,"createdAt":"2017-02-22T03:23:59.800Z","user":{"community":{"github":{"username":"SimonZhangITer","avatarLarge":"https://avatars2.githubusercontent.com/u/20501873?v=4","uid":"20501873"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/2YmH0icY78hZuTlEVkAoHMykgmscP0bNWsRfuNEdQ0ia1DiaJPbt1zNQdKJ27MYjQssvjvP8ZrN6PPQdjTiamibPjrQ/132"}},"collectedEntriesCount":58,"company":"美团点评","followersCount":293,"followeesCount":2,"role":"editor","postedPostsCount":5,"level":2,"isAuthor":true,"postedEntriesCount":13,"totalCommentsCount":53,"ngxCachedTime":1572571640,"ngxCached":true,"viewedEntriesCount":1174,"jobTitle":"前端","subscribedTagsCount":16,"totalCollectionsCount":1807,"username":"SimonZhang","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08390154a5a963c","objectId":"5844d2e961ff4b006c350a59"},"author":"","screenshot":"","original":true,"hotIndex":40.5818,"content":"通过实例对闭包的各种使用场景进行分析","title":"语句或语句块中的闭包问题实例分析","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":323,"summaryInfo":"一般情况下，当一个函数实例被创建时，它唯一对应的一个闭包也就被创建。在下面的代码中，由于外部的构造器函数被执行两次，因此内部的foo函数也被创建了两个函数实例（以及闭包）并赋值给this对象的成员： 这在函数之外（语句级别）也具有完全相同的表现。在下面的例子中，多个匿名函数的实例被赋给了obj的成...","isCollected":false},{"collectionCount":24,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572484312,"updatedAt":"2019-08-12T08:12:07.707Z","tags":[{"ngxCachedTime":1572484261,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"},{"ngxCachedTime":1572484309,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"}],"objectId":"57d4fa6ac4c97100613a1715","rankIndex":0.000011023103807511,"hot":false,"autoPass":false,"originalUrl":"http://swift.gg/2016/09/09/closure-capture-1/","buildTime":1565597527.7232,"createdAt":"2016-09-11T06:32:10.452Z","user":{"community":null,"collectedEntriesCount":1056,"company":"新浪","followersCount":10854,"followeesCount":9,"role":"editor","postedPostsCount":10,"level":2,"isAuthor":true,"postedEntriesCount":159,"totalCommentsCount":366,"ngxCachedTime":1572484196,"ngxCached":true,"viewedEntriesCount":6412,"jobTitle":"Unity","subscribedTagsCount":7,"totalCollectionsCount":11246,"username":"轩辕小羽","avatarLarge":"https://leancloud-gold-cdn.xitu.io/4VfvYeQ5ASY40AoKoCgBEfD","objectId":"567bbee434f81a1d8790bd0c"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/24998011cca001ea234c.jpg","original":false,"hotIndex":45.0519,"content":"尽管现在已经是 ARC 的天下了，但对于程序员来说理解内存管理和对象的生命周期依然是一门必修课。对于在 Swift 当中广泛应用的闭包就是其中一个特殊的例子，与 Objc 的闭包相比，Swift 的闭包也有着不同的捕获语义。下面让我们看看闭包是如何工作的。","title":"闭包捕获语义第一弹：一网打尽！","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484205},"viewsCount":406,"summaryInfo":"","isCollected":false},{"collectionCount":23,"commentsCount":0,"gfw":false,"entryView":"5684923060b24d71fea21f4e","subscribersCount":0,"ngxCachedTime":1568851512,"updatedAt":"2019-08-19T06:20:05.776Z","tags":[{"ngxCachedTime":1568851411,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"objectId":"5683eb1000b009a31af2acde","rankIndex":0.0000087832452430544,"hot":false,"autoPass":false,"originalUrl":"http://swiftcafe.io/2015/12/30/closure-usage","buildTime":1566195605.7952,"createdAt":"2015-12-30T14:32:48.114Z","user":{"community":{"weibo":{"selfDescription":"专注阅读体验，品味开发之美。 swiftcafe.io 讨论 Swift 语言以及 iOS 开发相关内容。","uid":"5721760998","blogAddress":"http://weibo.com/u/5721760998","username":"SwiftCafe","avatarLarge":"http://tva3.sinaimg.cn/crop.0.0.199.199.180/006fdVpIjw1exgnmufpscj305k05kdfu.jpg"}},"collectedEntriesCount":102,"company":"","followersCount":2243,"followeesCount":0,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":116,"totalCommentsCount":74,"ngxCachedTime":1568851485,"ngxCached":true,"viewedEntriesCount":559,"jobTitle":"","subscribedTagsCount":1,"totalCollectionsCount":3403,"username":"SwiftCafe","avatarLarge":"https://lc-gold-cdn.xitu.io/2e1b3fda185b6aab9e2d.jpg?imageView/1/w/100/h/100/q/80/format/png","objectId":"5626e298ddb2084ab0ec3ffc"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/9858b183423394c07cb6.png","original":true,"hotIndex":49.9599,"content":"闭包和属性是 Swift 中的两个特性。闭包在 Swift 的应用非常灵活，使用得当的话，可以大大提升开发的效率以及代码的健壮性。","title":"Swift 中闭包与属性的一点探索","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851488},"viewsCount":523,"summaryInfo":"闭包和属性是 Swift 中的两个特性。闭包在 Swift 的应用非常灵活，使用得当的话，可以大大提升开发的效率以及代码的健壮性。 Profile 代表用户信息， getPreferredLanguages 方法会返回当前用户设备的语言偏好。我们在这个方法中通过 reduce 方法，将 NSLoc...","isCollected":false},{"collectionCount":22,"autoPass":false,"commentsCount":2,"gfw":false,"buildTime":1572507890.5879,"checkStatus":true,"objectId":"5b2b13736fb9a00e78664d15","entryView":"","subscribersCount":0,"ngxCachedTime":1572571791,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571753,"ngxCached":true,"title":"GitHub","id":"555e9abee4b00c57d9956152"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000050712019828781,"hot":false,"updatedAt":"2019-10-31T07:44:50.571Z","originalUrl":"https://juejin.im/post/5b2b13636fb9a00e4d53e88c","verifyCreatedAt":"2018-06-24T09:17:52.875Z","createdAt":"2018-06-24T09:17:52.875Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL2NibkddSUpjeuDbbibeUchS3dOr8NnicQhF6Gyebm36icOeRboIuf8DDakRFgfibxhzYvf3MldGiba8DQ/132"},"github":{"username":"zhuanyongxigua","avatarLarge":"https://avatars3.githubusercontent.com/u/9625555?v=4","uid":"9625555"}},"collectedEntriesCount":8,"company":"","followersCount":65,"followeesCount":6,"role":"guest","postedPostsCount":13,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":28,"ngxCachedTime":1572571738,"ngxCached":true,"viewedEntriesCount":3561,"jobTitle":"","subscribedTagsCount":11,"totalCollectionsCount":430,"username":"砖用冰西瓜","avatarLarge":"https://user-gold-cdn.xitu.io/2018/6/22/164251132c080ab4?w=640&h=640&f=jpeg&s=13837","objectId":"59ed43f46fb9a044fb06e8a7"},"author":"","screenshot":"","original":true,"hotIndex":65.4618,"content":"这一篇首先是打算证明一下《三个闭包实例理解闭包对内存的影响》。 一共有10个例子，例7、8、9需要注意。 结果，占用内存。 结果同上图。如果把例子改成： 结果就是这样了，局部作用域中的函数fn被销毁了。 结果同图二，返回函数没有被全局变量接住。 这是一个延时销毁的例子。 测试内…","title":"用浏览器测试几种闭包占用内存的情况","lastCommentTime":"2018-06-25T09:55:17.519Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":818,"summaryInfo":"更多相关内容见博客 https://github.com/zhuanyongxigua/blog 这一篇首先是打算证明一下《三个闭包实例理解闭包对内存的影响》，但是暂时不完美的总结，有翻车的地方。 只测试了Chrome，Chrome版本为 结果就是这样了，局部作用域中的函数fn被销毁了。 然后让程...","isCollected":false},{"collectionCount":22,"userRankIndex":6.5,"buildTime":1572446971.2261,"commentsCount":10,"gfw":false,"objectId":"5cc2714b5188252dc1453ca8","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571644,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T14:49:31.209Z","rankIndex":0.00028499420733346,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cc25b926fb9a0321556e70a","verifyCreatedAt":"2019-04-26T02:58:49.906Z","createdAt":"2019-04-26T02:58:49.906Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/MVm9cRa4iaKFbhCydj8KvlGOHM6pSOWkRuLcgAkEdgMKV8eB0WiaOGJwoqoqgibYdUYlvc1Z0VuNPsn3ppxINUrXg/132"},"github":{"username":"luomana","avatarLarge":"https://avatars3.githubusercontent.com/u/34699694?v=4","uid":"34699694"}},"collectedEntriesCount":260,"company":"","followersCount":324,"followeesCount":7,"role":"guest","postedPostsCount":29,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":265,"ngxCachedTime":1572571601,"ngxCached":true,"viewedEntriesCount":10668,"jobTitle":"前端开发","subscribedTagsCount":24,"totalCollectionsCount":1245,"username":"_Dreams","avatarLarge":"https://user-gold-cdn.xitu.io/2019/7/9/16bd573548421a43?w=640&h=640&f=jpeg&s=31640","objectId":"5c31b0176fb9a049f7465912"},"author":"","screenshot":"","original":true,"hotIndex":79.5552,"content":"大家好，本人来在掘金待了有3个多月了，决定跟随前端大佬们的步伐，故决定记录自己的成长轨迹，由于水平有限，对于文章中出现的问题还请大佬们指正。 1.先来看第一句第一条调用语句：fun(0);毋庸置疑肯定是在调用最外层的fun函数，调用时传了0这个参数，因为最外层的fun函数有两个…","title":"开开森森学前端之闭包笔试题","lastCommentTime":"2019-04-26T19:44:27.520Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":947,"summaryInfo":"大家好，本人来在掘金待了有3个多月了，决定跟随前端大佬们的步伐，故决定每天一题记录自己的成长轨迹，由于水平有限，对于文章中出现的问题还请大佬们指正。 那就继续往下看，相反对于丝毫无压力的童鞋就可以快乐的去玩耍了！ 1.先来看第一句第一条调用语句：毋庸置疑肯定是在调用最外层的函数，调用时传了这个参数...","isCollected":false},{"collectionCount":22,"commentsCount":0,"gfw":false,"entryView":"590a9f6a2f301e005828a15f","subscribersCount":0,"ngxCachedTime":1572096457,"updatedAt":"2019-10-21T08:52:10.873Z","tags":[{"ngxCachedTime":1572096401,"ngxCached":true,"title":"掘金翻译计划","id":"56b5a7f3df0eea00544e1993"},{"ngxCachedTime":1572096440,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"},{"ngxCachedTime":1572096392,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"}],"objectId":"590a9f6a44d904006d8df0d1","rankIndex":0.00002374526270889,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/590a9eeab123db00549776ee","buildTime":1571647930.8898,"createdAt":"2017-05-04T03:26:34.623Z","user":{"community":{"github":{"username":"lsvih","avatarLarge":"https://avatars1.githubusercontent.com/u/5164225?v=4","uid":"5164225"}},"collectedEntriesCount":295,"company":"","followersCount":374,"followeesCount":8,"role":"editor","postedPostsCount":54,"level":3,"isAuthor":true,"postedEntriesCount":4,"totalCommentsCount":102,"ngxCachedTime":1572096364,"ngxCached":true,"viewedEntriesCount":2965,"jobTitle":"","subscribedTagsCount":25,"totalCollectionsCount":2557,"username":"lsvih","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/4/160212b42961a3c4?w=636&h=638&f=png&s=173523","objectId":"58d61ff1570c350058d2df0f"},"author":"","screenshot":"","original":true,"hotIndex":75.4139,"content":"原文地址：Swift Lazy Initialization with Closures 原文作者：Bob Lee 译文出自：掘金翻译计划 译者：lsvih 校对者：zhangqippp,Zheaoli 在 Swift 中使用闭包实现懒加载 学习如何兼顾模块化与可读性来创建对象…","title":"在 Swift 中使用闭包实现懒加载","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572096440},"viewsCount":1051,"summaryInfo":"亲爱的读者你们好！我是 BOB，很高兴能在这篇文章中与你们相遇！如你想加入我的邮件列表，获取更多学习 IOS 开发的文章，请点击这儿注册，很快就能完成的哦 :) 在我刚开始学习 iOS 开发的时候，我在 YouTube 上找了一些教程。我发现这些教程有时候会用下面这种方式来创建 UI 对象: 作为...","isCollected":false},{"collectionCount":21,"commentsCount":0,"gfw":false,"entryView":"57c3f78c128fe1005fd39961","subscribersCount":0,"ngxCachedTime":1572096456,"updatedAt":"2019-10-25T09:57:17.562Z","tags":[{"ngxCachedTime":1572096392,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"},{"ngxCachedTime":1572096440,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"},{"ngxCachedTime":1572096401,"ngxCached":true,"title":"掘金翻译计划","id":"56b5a7f3df0eea00544e1993"}],"objectId":"57bd72a3a633bd005d49fa32","rankIndex":0.000020519972945517,"hot":true,"autoPass":false,"originalUrl":"https://github.com/circlelove/gold-miner/blob/sis/TODO/swift-initialization-with-closures.md","buildTime":1571997437.5787,"createdAt":"2016-08-24T10:10:43.331Z","user":{"community":null,"collectedEntriesCount":4,"company":"it公司名","followersCount":40,"followeesCount":8,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":11,"totalCommentsCount":8,"ngxCachedTime":1572096413,"ngxCached":true,"viewedEntriesCount":107,"jobTitle":"手生码农","subscribedTagsCount":13,"totalCollectionsCount":708,"username":"慢走快跑","avatarLarge":"https://leancloud-gold-cdn.xitu.io/SkEG9nxjqlP542QV5I7o6oqoSh5DzZD7i4czIgTr","objectId":"56dff7b3816dfa005b5b5344"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/9b41e782c6f5da06da92.jpeg","original":false,"hotIndex":94.9537,"content":"介绍了利用闭包进行初始化的方法。利用代码编辑风格和设置一些常见的自定义内容。","title":"Swift + 闭包初始化","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572096440},"viewsCount":1468,"summaryInfo":"我准备开始彻底的探明 Swift 安装的整个流程。过去写过这个东西。我解释了它的工作方式。我做了一期讨论，阅读了大量相关内容。但是，我又回来讨论更多有关它的问题。 在 Swift 众多漂亮多样的安装方法当中————使用闭包并不是一向被推荐的方式。但是，它可以使得 boilerplatey**™**...","isCollected":false},{"collectionCount":21,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572418815.5856,"checkStatus":true,"objectId":"5b0e7819f265da092b33d99d","entryView":"","subscribersCount":0,"ngxCachedTime":1572484308,"verifyStatus":true,"tags":[{"ngxCachedTime":1572484307,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"},{"ngxCachedTime":1572484297,"ngxCached":true,"title":"Xcode","id":"55d5a7a760b22b8d7dd21fcc"},{"ngxCachedTime":1572484275,"ngxCached":true,"title":"RxSwift","id":"57ce81f6a0bb9f0057b565c1"},{"ngxCachedTime":1572484308,"ngxCached":false,"title":"Alamofire","id":"58c23bf9128fe1006b2836a2"}],"isEvent":false,"rankIndex":0.000055194898046357,"hot":false,"updatedAt":"2019-10-30T07:00:15.568Z","originalUrl":"https://juejin.im/post/5b0e728e518825157914ffcf","verifyCreatedAt":"2018-05-31T02:34:16.823Z","createdAt":"2018-05-31T02:34:16.823Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJdPpbGVFHUvtZQ2sHOA5dftFIjSg1HAgFrSibGfHO7nYbBibWU4u4EG3NcmuuhaJgCWlSrnpgM62ow/132"},"github":{"username":"IkeBanPC","avatarLarge":"https://avatars3.githubusercontent.com/u/16542321?v=4","uid":"16542321"}},"collectedEntriesCount":15,"company":"","followersCount":6,"followeesCount":13,"role":"guest","postedPostsCount":2,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":5,"ngxCachedTime":1572484308,"viewedEntriesCount":378,"jobTitle":"iOS工程师","subscribedTagsCount":9,"totalCollectionsCount":82,"username":"IsaacPan","avatarLarge":"https://user-gold-cdn.xitu.io/2018/2/27/161d6955e9cde076?w=1242&h=1209&f=png&s=967456","objectId":"5a95095af265da4e8077ddcd"},"author":"","screenshot":"","original":true,"hotIndex":76.3373,"content":"在初学者阶段，开发过程中你甚至不知道会有内存泄漏的问题，完全忽略了他们，以至于最后发现代码中到处都有这种问题，一筹莫展。 所以现在我们来深入理解一下内存泄漏什么时候会出现，以及用什么工具来避免它们。 Apple写了一篇关于类之间的强引用和循环引用的不错的文章，清晰易懂地解释了什…","title":"[译]理解闭包中的内存泄漏","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484190},"viewsCount":1093,"summaryInfo":"在初学者阶段，开发过程中你甚至不知道会有内存泄漏的问题，完全忽略了他们，以至于最后发现代码中到处都有这种问题，一筹莫展。 所以现在我们来深入理解一下内存泄漏什么时候会出现，以及用什么工具来避免它们。 Apple写了一篇关于类之间的强引用和循环引用的不错的文章，清晰易懂地解释了什么是内存泄漏，以及在...","isCollected":false},{"collectionCount":21,"commentsCount":1,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571779,"updatedAt":"2019-10-31T12:00:47.506Z","tags":[{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571688,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"}],"objectId":"59b102946fb9a02484495a6f","rankIndex":0.000035244482507567,"hot":false,"autoPass":false,"originalUrl":"https://segmentfault.com/q/1010000007578832/a-1020000007578970","buildTime":1572523247.5244,"createdAt":"2017-09-07T09:03:34.580Z","user":{"community":{"github":{"username":"Everfighting","avatarLarge":"https://avatars2.githubusercontent.com/u/711060?v=4","uid":"711060"}},"collectedEntriesCount":24,"company":"","followersCount":495,"followeesCount":8,"role":"guest","postedPostsCount":2,"level":0,"isAuthor":false,"postedEntriesCount":15,"totalCommentsCount":10,"ngxCachedTime":1572571779,"viewedEntriesCount":445,"jobTitle":"python工程师","subscribedTagsCount":5,"totalCollectionsCount":915,"username":"everfight","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082d97349caae89","objectId":"578e56d4a34131005b8df6f4"},"author":"","screenshot":"","original":true,"hotIndex":90.9953,"content":"闭包，顾名思义，就是把馒头变成包子~\n馒头全是面粉，包上馅就成了包子 包子是带馅的馒头 闭包是自带运行环境的函数 发哥是自带背景音乐的男人~\n有童鞋不理解“自带运行环境”的含义~\n再举例说一次吧~\n码农们都吃过方便面吧~  它和普通面条有什么区别呢？  就是 自带调味包 。\n调…","title":"面试题：为什么要用闭包？","lastCommentTime":"2017-09-08T00:09:06.291Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":1370,"summaryInfo":"闭包，顾名思义，就是把馒头变成包子~ 馒头全是面粉，包上馅就成了包子 码农们都吃过方便面吧~ 它和普通面条有什么区别呢？ 就是 自带调味包 。调味包就是方便面的烹饪环境。它简化了煮面条的流程。让用户不必练就厨艺也能吃上美味的内牛满面。 函数式编程的闭包，就是函数的调味包。方便用户调用函数。不必为了...","isCollected":false},{"collectionCount":21,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572321904.9048,"checkStatus":true,"objectId":"5c236db2f265da61483ba686","entryView":"","subscribersCount":0,"ngxCachedTime":1572571256,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571173,"ngxCached":true,"title":"PHP","id":"555e9a84e4b00c57d9955e1b"}],"updatedAt":"2019-10-29T04:05:04.888Z","rankIndex":0.00012017348215878,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c236d816fb9a049af6d4ea1","verifyCreatedAt":"2018-12-27T04:23:21.044Z","createdAt":"2018-12-27T04:23:21.044Z","user":{"community":{"github":{"username":"OMGZui","avatarLarge":"https://avatars3.githubusercontent.com/u/15848127?v=4","uid":"15848127"}},"collectedEntriesCount":65,"company":"旅游","followersCount":562,"followeesCount":15,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":19,"ngxCachedTime":1572571256,"viewedEntriesCount":962,"jobTitle":"PHP开发工程师","subscribedTagsCount":16,"totalCollectionsCount":729,"username":"OMGZui","avatarLarge":"https://user-gold-cdn.xitu.io/2018/2/6/16169ae97a0aa7d9?w=1280&h=1280&f=jpeg&s=146580","objectId":"57a7d99a0a2b5800585b73ef"},"author":"","screenshot":"","original":true,"hotIndex":75.6431,"content":"1. call_user_func — 把第一个参数作为回调函数调用 2. call_user_func_array — 调用回调函数，并把一个数组参数作为回调函数的参数 1. Closure::bindTo — 复制当前闭包对象，绑定指定的$this对象和类作用域。 2. C…","title":"通过几个栗子认识 PHP 闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571219},"viewsCount":1073,"summaryInfo":"有收获的话请加颗小星星，没有收获的话可以 反对 没有帮助 举报三连 匿名函数（Anonymous functions），也叫闭包函数（closures），允许 临时创建一个没有指定名称的函数。最经常用作回调函数（callback）参数的值。当然，也有其它应用的情况。 匿名函数目前是通过 Closu...","isCollected":false},{"collectionCount":20,"commentsCount":1,"gfw":false,"objectId":"5a5c3b3351882573514f698a","checkStatus":true,"buildTime":1572542104.0321,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571566,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571535,"ngxCached":true,"title":"Android","id":"5597838ee4b08a686ce2319d"},{"ngxCachedTime":1572571471,"ngxCached":true,"title":"API","id":"55979f27e4b08a686ce550a6"},{"ngxCachedTime":1572571499,"ngxCached":true,"title":"单元测试","id":"584628320ce463005784fd34"},{"ngxCachedTime":1572571479,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"}],"autoPass":true,"rankIndex":0.000022774121626429,"hot":false,"updatedAt":"2019-10-31T17:15:04.012Z","originalUrl":"https://juejin.im/post/5a5c3acf6fb9a01ca10ae2e7","verifyCreatedAt":"2018-01-16T04:04:24.600Z","createdAt":"2018-01-16T04:04:24.600Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epU0V5NLFTZx3JibcTPwLIkkt1g8NLVX9uD21YDR1Vkv6Au6mgUGoZkarl0xickucgRCCD3ibJgyrMIA/132"}},"collectedEntriesCount":119,"company":"","followersCount":34,"followeesCount":1,"role":"guest","postedPostsCount":21,"level":2,"isAuthor":true,"postedEntriesCount":1,"totalCommentsCount":231,"ngxCachedTime":1572571558,"ngxCached":true,"viewedEntriesCount":644,"jobTitle":"Android开发工程师","subscribedTagsCount":22,"totalCollectionsCount":717,"username":"我是传奇哈哈","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/23/1608118029a92693?w=386&h=387&f=png&s=59402","objectId":"57b86d1a7db2a20054240e37"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/1/15/160f845da7bfbf84?w=709&h=434&f=png&s=215223","original":true,"hotIndex":44.7422,"content":"在 Java 编程中，我们以不严格的术语 lambda 表达式来表示 lambda 表达式和闭包。但是在某些情况下，理解它们的区别很重要。lambda 表达式是无状态的，而闭包是带有状态的。将 lambda 表达式替换为闭包，是一种管理函数式程序中的状态的好方法。 我们在这个系…","title":"Java8 新语法习惯 (使用闭包捕获状态)","lastCommentTime":"2018-01-16T19:43:15.360Z","type":"post","english":false,"category":{"ngxCached":true,"title":"android","id":"5562b410e4b00c57d9b94a92","name":"Android","ngxCachedTime":1572571555},"viewsCount":472,"summaryInfo":"在 Java 编程中，我们以不严格的术语 lambda 表达式来表示 lambda 表达式和闭包。但是在某些情况下，理解它们的区别很重要。lambda 表达式是无状态的，而闭包是带有状态的。将 lambda 表达式替换为闭包，是一种管理函数式程序中的状态的好方法。 我们在这个系列中介绍了 lamb...","isCollected":false},{"collectionCount":20,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571084,"updatedAt":"2019-09-25T01:17:52.682Z","tags":[{"ngxCachedTime":1572571026,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"},{"ngxCachedTime":1572571067,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571065,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"},{"ngxCachedTime":1572571084,"ngxCached":false,"title":"函数式编程","id":"584628f161ff4b006c3c147f"}],"objectId":"597e8e9df265da3e390bccdf","rankIndex":0.000023342405944537,"hot":false,"autoPass":false,"originalUrl":"https://sylvanassun.github.io/2017/07/30/2017-07-30-JavaClosure/","buildTime":1569374272.7034,"createdAt":"2017-07-31T03:55:44.115Z","user":{"community":{"github":{"username":"SylvanasSun","avatarLarge":"https://avatars1.githubusercontent.com/u/19670293?v=4","uid":"19670293"}},"collectedEntriesCount":0,"company":"","followersCount":4252,"followeesCount":5,"role":"editor","postedPostsCount":15,"level":3,"isAuthor":true,"postedEntriesCount":17,"totalCommentsCount":49,"ngxCachedTime":1572570968,"ngxCached":true,"viewedEntriesCount":403,"jobTitle":"","subscribedTagsCount":56,"totalCollectionsCount":2088,"username":"SylvanasSun","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/18/d745a6b9901f5198aa7e3de2533b175f","objectId":"575242642e958a0068ad5712"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/7/31/9cc560533cf10d4b93235da6381bd70f","original":true,"hotIndex":60.47,"content":"Java中是否存在闭包呢?","title":"Java中的闭包之争","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572570998},"viewsCount":796,"summaryInfo":"","isCollected":false},{"collectionCount":19,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1569484098.0649,"checkStatus":true,"objectId":"5bd10422518825295071ce78","entryView":"","subscribersCount":0,"ngxCachedTime":1572571445,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571342,"ngxCached":true,"title":"前端框架","id":"55978433e4b0c4d3e6fddcb1"},{"ngxCachedTime":1572571356,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.000054393249294951,"hot":false,"updatedAt":"2019-09-26T07:48:18.048Z","originalUrl":"https://blog.hhking.cn/2018/10/24/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/","verifyCreatedAt":"2018-10-25T02:18:45.325Z","createdAt":"2018-10-25T02:18:45.325Z","user":{"community":{"github":{"username":"hhking","avatarLarge":"https://avatars2.githubusercontent.com/u/11470599?v=4","uid":"11470599"}},"collectedEntriesCount":57,"company":"广州","followersCount":1275,"followeesCount":13,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":16,"totalCommentsCount":11,"ngxCachedTime":1572571445,"viewedEntriesCount":1617,"jobTitle":"前端","subscribedTagsCount":9,"totalCollectionsCount":313,"username":"hhking","avatarLarge":"https://user-gold-cdn.xitu.io/2018/7/21/164bc0f4bcee4ac6?w=744&h=750&f=png&s=579110","objectId":"5712e9f6128fe1006cf35b3f"},"author":"","screenshot":"","original":false,"hotIndex":39.4362,"content":"理解 JavaScript 语言的最重要的基本概念是理解执行上下文。正确的学习执行上下文，可以让你更容易学习更高级的内容，比如变量提升（hoisting）、作用域链（scope chains）和闭包（closures）。","title":"[译]JavaScript 终极指南之执行上下文、变量提升、作用域和闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571399},"viewsCount":408,"summaryInfo":"视频：The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript 我认为理解 JavaScript 语言的最重要的基本概念是理解执行上下文（Execution Context），这点可...","isCollected":false},{"collectionCount":19,"commentsCount":0,"gfw":false,"entryView":"5653d19c00b01b788af1b8e6","subscribersCount":0,"ngxCachedTime":1568851512,"updatedAt":"2019-09-11T10:22:24.383Z","tags":[{"ngxCachedTime":1568851411,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"objectId":"5653575460b2298f1094c9ad","rankIndex":0.0000082960459981264,"hot":true,"autoPass":false,"originalUrl":"http://swiftcafe.io/2015/11/24/autoclosure/","buildTime":1568197344.4007,"createdAt":"2015-11-23T18:13:40.261Z","user":{"community":{"weibo":{"selfDescription":"专注阅读体验，品味开发之美。 swiftcafe.io 讨论 Swift 语言以及 iOS 开发相关内容。","uid":"5721760998","blogAddress":"http://weibo.com/u/5721760998","username":"SwiftCafe","avatarLarge":"http://tva3.sinaimg.cn/crop.0.0.199.199.180/006fdVpIjw1exgnmufpscj305k05kdfu.jpg"}},"collectedEntriesCount":102,"company":"","followersCount":2243,"followeesCount":0,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":116,"totalCommentsCount":74,"ngxCachedTime":1568851485,"ngxCached":true,"viewedEntriesCount":559,"jobTitle":"","subscribedTagsCount":1,"totalCollectionsCount":3403,"username":"SwiftCafe","avatarLarge":"https://lc-gold-cdn.xitu.io/2e1b3fda185b6aab9e2d.jpg?imageView/1/w/100/h/100/q/80/format/png","objectId":"5626e298ddb2084ab0ec3ffc"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/6d4923d9db4fdfcebad9.jpg","original":true,"hotIndex":50.4241,"content":"@autoclosure 关键字，是 Swift 引入的一个便捷操作，旨在让我们使用闭包作为参数的时候，更加的方便，简化语法形式，我们就来看看如何使用吧。","title":"Swift 中的 @autoclosure 关键字与闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851488},"viewsCount":621,"summaryInfo":"@autoclosure 关键字，是 Swift 引入的一个便捷操作，旨在让我们使用闭包作为参数的时候，更加的方便，简化语法形式，我们就来看看如何使用吧。 回答这个问题，首先我们来看一个例子： 这个函数接受一个参数 predicate， 它是一个闭包。 filter 函数会根据这个闭包，也就是 p...","isCollected":false},{"collectionCount":19,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572179892.6421,"checkStatus":true,"objectId":"5c0f18e9e51d4535953250a5","entryView":"","subscribersCount":0,"ngxCachedTime":1572571340,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571228,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"updatedAt":"2019-10-27T12:38:12.624Z","rankIndex":0.000058109325376614,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c0d0d9e6fb9a04a03790a76","verifyCreatedAt":"2018-12-11T06:41:53.260Z","createdAt":"2018-12-11T06:41:53.260Z","user":{"community":{"github":{"username":"logan70","avatarLarge":"https://avatars1.githubusercontent.com/u/31526457?v=4","uid":"31526457"}},"collectedEntriesCount":139,"company":"Pactera","followersCount":129,"followeesCount":9,"role":"guest","postedPostsCount":12,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":35,"ngxCachedTime":1572571340,"ngxCached":true,"viewedEntriesCount":2586,"jobTitle":"前端新人","subscribedTagsCount":3,"totalCollectionsCount":405,"username":"Logan70","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/7/166ee6543eff48f0?w=1009&h=1010&f=jpeg&s=295615","objectId":"5b722e476fb9a009d419cfde"},"author":"","screenshot":"","original":true,"hotIndex":39.163,"content":"这里就不卖关子了，两段代码的运行结果都是local scope。这是JavaScript作用域机制决定的。 大家可能听说过JavaScript采用的是词法作用域（静态作用域），没听说过也没有关系，很好理解，意思就是函数的作用域在函数定义的时候就确定了，也就是说函数的作用域取决于…","title":"深入JavaScript系列（三）：闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571245},"viewsCount":371,"summaryInfo":"这里就不卖关子了，两段代码的运行结果都是。这是JavaScript作用域机制决定的。 大家可能听说过JavaScript采用的是词法作用域（静态作用域），没听说过也没有关系，很好理解，意思就是函数的作用域在函数定义的时候就确定了，也就是说函数的作用域取决于函数在哪里定义，和函数在哪里调用并无关系。...","isCollected":false},{"collectionCount":19,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572507356.2395,"checkStatus":true,"objectId":"5c7c7b94e51d455f1c313dca","entryView":"","subscribersCount":0,"ngxCachedTime":1572571650,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T07:35:56.220Z","rankIndex":0.000093555770120538,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c7c7b81e51d4547222f65d7","verifyCreatedAt":"2019-03-04T03:20:34.907Z","createdAt":"2019-03-04T03:20:34.907Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoyjYXsXpziaCWRBeZxWrhNQa83FwIHjKPut1NEh7ByJzF2r60ziaia8ibO3MWlJTBakzMgqAcnaFzW2A/132"}},"collectedEntriesCount":26,"company":"","followersCount":26,"followeesCount":9,"role":"guest","postedPostsCount":11,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571547,"ngxCached":true,"viewedEntriesCount":303,"jobTitle":"","subscribedTagsCount":24,"totalCollectionsCount":67,"username":"陌上寒","avatarLarge":"https://user-gold-cdn.xitu.io/2018/12/19/167c4e01bb9b86f2?w=144&h=144&f=png&s=4735","objectId":"57baf22fa34131005b12d797"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/3/4/1694709d1431903f?w=6317&h=4211&f=jpeg&s=1674233","original":true,"hotIndex":41.2102,"content":"setTimeout(func,time)是在time（毫秒单位）时间后执行func函数。浏览器引擎按顺序执行程序，遇到setTimeout会将func函数放到执行队列中，等到主程序执行完毕之后，才开始从执行队列（队列中可能有多个待执行的func函数）中按照time延时时间的先…","title":"循环中的异步&&循环中的闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":440,"summaryInfo":"var 是函数级作用域或者全局作用域，let是块级作用域看一个例子 foo函数下的index输出5，全局下的index不存在现在我们把var 换为let 报错了，index不在foo函数作用域下，当然肯定也不会再全局下因为var和let的这个区别（当然var和let的区别不止于此）所以导致了下面的...","isCollected":false},{"collectionCount":19,"commentsCount":0,"gfw":false,"entryView":"578ee6d31532bc00610147e6","subscribersCount":0,"ngxCachedTime":1572484312,"updatedAt":"2019-10-18T15:44:37.532Z","tags":[{"ngxCachedTime":1572484302,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"},{"ngxCachedTime":1572484270,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"}],"objectId":"578e2f0ca633bd0058bd379e","rankIndex":0.0000090539764015647,"hot":false,"autoPass":false,"originalUrl":"http://swiftcafe.io/2016/07/19/funny-closure","buildTime":1571413477.5493,"createdAt":"2016-07-19T13:45:48.521Z","user":{"community":{"weibo":{"selfDescription":"专注阅读体验，品味开发之美。 swiftcafe.io 讨论 Swift 语言以及 iOS 开发相关内容。","uid":"5721760998","blogAddress":"http://weibo.com/u/5721760998","username":"SwiftCafe","avatarLarge":"http://tva3.sinaimg.cn/crop.0.0.199.199.180/006fdVpIjw1exgnmufpscj305k05kdfu.jpg"}},"collectedEntriesCount":102,"company":"","followersCount":2240,"followeesCount":0,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":116,"totalCommentsCount":74,"ngxCachedTime":1572484256,"ngxCached":true,"viewedEntriesCount":559,"jobTitle":"","subscribedTagsCount":1,"totalCollectionsCount":3403,"username":"SwiftCafe","avatarLarge":"https://lc-gold-cdn.xitu.io/2e1b3fda185b6aab9e2d.jpg?imageView/1/w/100/h/100/q/80/format/png","objectId":"5626e298ddb2084ab0ec3ffc"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/22c42c554b51aacbb142.jpg","original":true,"hotIndex":43.4862,"content":"闭包，老生常谈的一个东西。这次咱们再来唠叨唠叨， 看看能不能发现有用的信息。","title":"Swift 闭包趣事谈","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484274},"viewsCount":478,"summaryInfo":"闭包，老生常谈的一个东西。这次咱们再来唠叨唠叨， 看看能不能发现有用的信息。 并且用闭包字面量给他赋值，然后调用它。 这时最常见的用法。 当然， Swift 有 Optionals 特性， 闭包还可以作为 Optionals： 我们第一次调用 optionalDouble 的时候， 因为还没有给他...","isCollected":false},{"collectionCount":19,"isEvent":false,"commentsCount":3,"gfw":false,"buildTime":1571074641.565,"checkStatus":true,"objectId":"5c1faa61e51d45317e24a0c7","entryView":"","subscribersCount":0,"ngxCachedTime":1572571649,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-14T17:37:21.546Z","rankIndex":0.000078481211063359,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c1faa3a6fb9a049ca375859","verifyCreatedAt":"2018-12-24T06:04:52.291Z","createdAt":"2018-12-24T06:04:52.291Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/ovxG1bicQhea1CxIrjc2zjNtVA0UHBa2cTiaQwpdOUBpRpjyQiaTTSKK4OuWrW6Sia6XbicibuGV6UPOvaW2QEQlEAmw/132"}},"collectedEntriesCount":20,"company":"Independent Developer","followersCount":43,"followeesCount":6,"role":"guest","postedPostsCount":8,"level":2,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":18,"ngxCachedTime":1572571629,"ngxCached":true,"viewedEntriesCount":1880,"jobTitle":"程序员","subscribedTagsCount":7,"totalCollectionsCount":347,"username":"Real_Aaron","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/3/16c5643a068462b3?w=748&h=728&f=png&s=183469","objectId":"57e147e35bbb50005e7848f6"},"author":"","screenshot":"","original":true,"hotIndex":46.6402,"content":"这似乎令人惊讶，但在我看来，理解JavaScript语言最重要和最基本的概念是理解执行上下文。通过正确学习它，你将很好地学习更多高级主题，如提升，作用域链和闭包。考虑到这一点，究竟什么是“执行上下文”？为了更好地理解它，我们首先来看看我们如何编写软件。 编写软件的一种策略是将代…","title":"【译】学习JavaScript中提升、作用域、闭包的终极指南","lastCommentTime":"2018-12-25T08:48:44.925Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":482,"summaryInfo":"这似乎令人惊讶，但在我看来，理解JavaScript语言最重要和最基本的概念是理解执行上下文。通过正确学习它，你将很好地学习更多高级主题，如提升，作用域链和闭包。考虑到这一点，究竟什么是“执行上下文”？为了更好地理解它，我们首先来看看我们如何编写软件。 编写软件的一种策略是将代码分解为单独的部分。...","isCollected":false},{"collectionCount":19,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571650,"updatedAt":"2019-10-17T11:49:14.643Z","tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571557,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"}],"objectId":"599bd3d2f265da2476422b63","rankIndex":0.000016771215050417,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/599bca3df265da248d0cc4ee","buildTime":1571312954.6591,"createdAt":"2017-08-22T06:48:50.163Z","user":{"community":{"weibo":{"selfDescription":"EVA新剧场的大结局什么时候出啊！","uid":"1306438921","blogAddress":"http://weibo.com/browsnet","username":"李引证","avatarLarge":"http://tva1.sinaimg.cn/crop.0.0.179.179.180/4ddead09gw1egw82dlyt4j2050050t93.jpg"}},"collectedEntriesCount":5,"company":"","followersCount":1,"followeesCount":0,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":true,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571650,"viewedEntriesCount":95,"jobTitle":"","subscribedTagsCount":5,"totalCollectionsCount":19,"username":"引证","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/4e01609444ce55313a032dbdf641d065","objectId":"55fcd32760b2946038def0c1"},"author":"","screenshot":"","original":true,"hotIndex":43.4733,"content":"闭包(closure)，是一种编程语言特性，它指的是代码块和作用域环境的结合，早期由scheme语言引入这一特性，随后几乎所有语言都带有这一特性，典型的闭包如下： (define (func a) (lambda (b) (lambda (c) (+ a b c)))) (((f…","title":"闭包里的自由变量","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":475,"summaryInfo":"闭包(closure)，是一种编程语言特性，它指的是代码块和作用域环境的结合，早期由scheme语言引入这一特性，随后几乎所有语言都带有这一特性，典型的闭包如下： 闭包里的自由变量会绑定在代码块上，在离开创造它的环境下依旧生效，而这一点使用代码块的人可能无法察觉。 闭包里的自由变量的形式有很多，先...","isCollected":false},{"collectionCount":18,"autoPass":false,"commentsCount":2,"gfw":false,"buildTime":1572353745.7203,"checkStatus":true,"objectId":"5b70dba6f265da282809ed1c","entryView":"","subscribersCount":0,"ngxCachedTime":1572571491,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571425,"ngxCached":true,"title":"Go","id":"555e9a80e4b00c57d9955de2"},{"ngxCachedTime":1572571374,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"},{"ngxCachedTime":1572571459,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"},{"ngxCachedTime":1572571420,"ngxCached":true,"title":"JVM","id":"584628c88e450a006c145de0"}],"isEvent":false,"rankIndex":0.000045782122880254,"hot":false,"updatedAt":"2019-10-29T12:55:45.702Z","originalUrl":"https://juejin.im/post/5b70db05e51d4566381883a1","verifyCreatedAt":"2018-08-13T05:52:13.923Z","createdAt":"2018-08-13T05:52:13.923Z","user":{"community":null,"collectedEntriesCount":13,"company":"秦皇岛牛客科技有限公司","followersCount":3022,"followeesCount":1,"role":"guest","postedPostsCount":40,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":44,"ngxCachedTime":1572571447,"ngxCached":true,"viewedEntriesCount":690,"jobTitle":"","subscribedTagsCount":119,"totalCollectionsCount":1552,"username":"不洗碗工作室","avatarLarge":"https://user-gold-cdn.xitu.io/2018/1/29/1614225b5e67f771?w=1024&h=1024&f=png&s=132509","objectId":"5a083e466fb9a04514638535"},"author":"","screenshot":"","original":true,"hotIndex":50.0773,"content":"在回答这三个问题之前，必须要明确一个点，那就是内部类是依附于外围类而存在的，其实也就是内部类存在着指向外围类的引用。明白了这个之后，上面的问题就好解答了。 内部类与外围类之间形成了一种联系，使得内部类可以无限制地访问外围类中的任意属性。 正如上面的例子中，InnerClass内…","title":"Java 内部类与闭包","lastCommentTime":"2018-08-27T09:42:48.728Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571457},"viewsCount":586,"summaryInfo":"很简单，无非是在类的内部再定义一个类，这被称为成员内部类： 上面这个很简单的例子中，也包含了很多应该思考的问题： 在回答这三个问题之前，必须要明确一个点，那就是内部类是依附于外围类而存在的，其实也就是内部类存在着指向外围类的引用。明白了这个之后，上面的问题就好解答了。 内部类与外围类之间形成了一种...","isCollected":false},{"collectionCount":18,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571492,"updatedAt":"2019-09-26T01:28:07.723Z","tags":[{"ngxCachedTime":1572571374,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"}],"objectId":"587ee968128fe100570baa80","rankIndex":0.000012102320950841,"hot":false,"autoPass":false,"originalUrl":"http://blog.zhaochunqi.com/2016/11/15/java_lambda_expressions/","buildTime":1569461287.7391,"createdAt":"2017-01-18T04:04:56.905Z","user":{"community":{"weibo":{"selfDescription":"哦。","uid":"1651999613","blogAddress":"http://weibo.com/121189047","username":"B-Orz","avatarLarge":"http://tvax3.sinaimg.cn/crop.29.0.992.992.180/6277837dgy1ff920whq1mj20sg0zkgth.jpg"}},"collectedEntriesCount":6,"company":"","followersCount":0,"followeesCount":0,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":0,"ngxCachedTime":1572571492,"viewedEntriesCount":299,"jobTitle":"","subscribedTagsCount":31,"totalCollectionsCount":18,"username":"BOrz","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/99aa083a2e4d31aa87987b7b6619dc5b.jpg","objectId":"578e8828c4c971005e081caa"},"author":"","screenshot":"","original":false,"hotIndex":43.7164,"content":"java 函数式编程","title":"Java Lambda 表达式（又名闭包 (Closure)/ 匿名函数 ) 笔记","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571457},"viewsCount":499,"summaryInfo":"","isCollected":false},{"collectionCount":18,"commentsCount":0,"gfw":false,"entryView":"57edf606d203090068684e18","subscribersCount":0,"ngxCachedTime":1572484312,"updatedAt":"2019-10-15T12:48:44.734Z","tags":[{"ngxCachedTime":1572484309,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"},{"ngxCachedTime":1572484261,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"objectId":"57ecca79bf22ec00643f993f","rankIndex":0.000010444020761567,"hot":false,"autoPass":false,"originalUrl":"http://danny-lau.com/2016/09/29/swift3-0-guided-tour-1/","buildTime":1571143724.753,"createdAt":"2016-09-29T08:02:01.267Z","user":{"community":{"weibo":{"selfDescription":"缺栈程序猿 移不动开发者 🖖🏻 http://danny-lau.com","uid":"1963368701","blogAddress":"http://weibo.com/u/1963368701","username":"小蛮要沉住气要淡定","avatarLarge":"http://tva2.sinaimg.cn/crop.117.0.293.293.180/7506a0fdjw8evi88dm9s6j20c80853z0.jpg"},"wechat":{"nickname":"Danny。","avatar_url":"http://wx.qlogo.cn/mmopen/Q3auHgzwzM6n7P1HaGrmlEXEjoUz1icjkIicma1LHdGq97YBl5mdyLBxqABjG36PtpAy8DuTUWfyCPpcwMODdvYg/0"},"github":{"username":"Danny1451","avatarLarge":"https://avatars3.githubusercontent.com/u/3889817?v=4","uid":"3889817"}},"collectedEntriesCount":56,"company":"DP","followersCount":3749,"followeesCount":7,"role":"editor","postedPostsCount":14,"level":2,"isAuthor":true,"postedEntriesCount":16,"totalCommentsCount":42,"ngxCachedTime":1572484214,"ngxCached":true,"viewedEntriesCount":1392,"jobTitle":"iOS 开发工程师","subscribedTagsCount":11,"totalCollectionsCount":689,"username":"刘小蛮","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/7526023eae9b61d56d7af3cedddb591b","objectId":"56e4dcb27db2a20052bb2946"},"author":"","screenshot":"","original":false,"hotIndex":45.488,"content":"一个系列的 Swift 学习分享 我会坚持写下去的~~","title":"Swift3.0 Guided Tour (1) - 控制流与函数闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484205},"viewsCount":533,"summaryInfo":"半年多没更新了。。。更多的是在印象笔记里写的太乱了。。十一抽个时间整理一下。。。 最近开始学习Swift了，正好Swift也升级到3.0了 目前通过2个方面在并行的学习Swift，这两个都有在我的GitHub上更新进度( 算法[1],项目[2])，有兴趣的同学可以一起哈 这篇是苹果官方的Swift...","isCollected":false},{"collectionCount":17,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572484313,"updatedAt":"2019-10-30T11:30:54.076Z","tags":[{"ngxCachedTime":1572484309,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"},{"ngxCachedTime":1572484261,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"objectId":"582b20eeda2f600063d1f348","rankIndex":0.0000084474937892436,"hot":false,"autoPass":false,"originalUrl":"http://swift.gg/2016/11/15/optional-non-escaping-closures/","buildTime":1572435054.0932,"createdAt":"2016-11-15T14:51:26.696Z","user":{"community":{"weibo":{"selfDescription":"","uid":"5676258279","blogAddress":"http://weibo.com/u/5676258279","username":"宇朋Look","avatarLarge":"http://tva1.sinaimg.cn/crop.0.0.200.200.180/006c904Tjw8ev5m07c8xlj305k05k744.jpg"}},"collectedEntriesCount":21,"company":"昆仑万维","followersCount":2371,"followeesCount":3,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":659,"totalCommentsCount":331,"ngxCachedTime":1572484280,"ngxCached":true,"viewedEntriesCount":95,"jobTitle":"iOS Dev","subscribedTagsCount":4,"totalCollectionsCount":26540,"username":"宇朋Look","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/f7ca74d37cee0bcb0a45646ffae7939a","objectId":"55cc71a840ac8c9708c7273e"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/8848a4c60aae143c9223.png","original":false,"hotIndex":35.198,"content":"Swift 的闭包分为 逃逸 与 非逃逸 两种。一个接受逃逸闭包作为参数的函数，逃逸闭包（可能）会在函数返回之后才被调用————也就是说，闭包逃离了函数的作用域。","title":"[译] 可选型的非逃逸闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484205},"viewsCount":362,"summaryInfo":"","isCollected":false},{"collectionCount":16,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572442961.3791,"checkStatus":true,"objectId":"5aebc7a76fb9a07acc119269","entryView":"","subscribersCount":0,"ngxCachedTime":1572571652,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.00002168978416843,"hot":false,"updatedAt":"2019-10-30T13:42:41.361Z","originalUrl":"https://mp.weixin.qq.com/s?__biz=MjM5MTA1MjAxMQ==&amp;mid=2651228474&amp;idx=1&amp;sn=031ea46ca182f2dacf8f65cc30c6566b&amp;chksm=bd4950be8a3ed9a87e24c664dec77bd63bb69e735887ea33dc574358070affb0fbf6eafd9f0b&amp;mpshare=1&amp;scene=1&amp;srcid=0427nNlcpfRO2I","verifyCreatedAt":"2018-05-07T10:16:50.353Z","createdAt":"2018-05-07T10:16:50.353Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eots2kEyvz73K8dVxU6UnNRMkc6e3jibDkvT9shuLvqkv45oMuRE1zib5hTgIaAbLULTVOeOPhX2ToQ/132"}},"collectedEntriesCount":23,"company":"","followersCount":7251,"followeesCount":271,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":2289,"totalCommentsCount":167,"ngxCachedTime":1572571582,"ngxCached":true,"viewedEntriesCount":7881,"jobTitle":"iOS、Web","subscribedTagsCount":164,"totalCollectionsCount":6339,"username":"iFangcy_","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/eeb8b9cd49838b7543e5474e79eb20b8","objectId":"582f0d17570c35006cfc6de4"},"author":"","screenshot":null,"original":false,"hotIndex":32.1063,"content":"今日早读文章来自海致前端@蔡剑涛投稿分享。\n正文从这开始～ 一：前言 说起闭包，可谓是老生常谈。虽说大家都在谈，面试官也喜欢问，然而我却感觉，鲜有能把这个概念说清楚的，网上很多关于闭包的介绍，包括一些官方性较强的网址如MDN，也是只说其表面，不说其里子。\n我曾经也是个闭包初学者…","title":"从JS垃圾回收机制和词源来透视闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":315,"summaryInfo":"今日早读文章来自海致前端@蔡剑涛投稿分享。 说起闭包，可谓是老生常谈。虽说大家都在谈，面试官也喜欢问，然而我却感觉，鲜有能把这个概念说清楚的，网上很多关于闭包的介绍，包括一些官方性较强的网址如MDN，也是只说其表面，不说其里子。 我曾经也是个闭包初学者，也曾在理解这个概念时苦苦煎熬。所幸在众多的网...","isCollected":false},{"collectionCount":16,"commentsCount":0,"gfw":false,"entryView":"59102ae2da2f6000535f0e30","subscribersCount":0,"ngxCachedTime":1572571397,"updatedAt":"2019-10-19T03:06:49.892Z","tags":[{"ngxCachedTime":1572571347,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"objectId":"59102adba0bb9f0058a16737","rankIndex":0.0000099503208087017,"hot":false,"autoPass":false,"originalUrl":"http://blog.csdn.net/guyuealian/article/details/52784990","buildTime":1571454409.9097,"createdAt":"2017-05-08T08:22:51.737Z","user":{"community":null,"collectedEntriesCount":42,"company":"","followersCount":1344,"followeesCount":1,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":90,"totalCommentsCount":40,"ngxCachedTime":1572571321,"ngxCached":true,"viewedEntriesCount":56,"jobTitle":"","subscribedTagsCount":1,"totalCollectionsCount":2702,"username":"vinegar","avatarLarge":"https://leancloud-gold-cdn.xitu.io/95641f335d0941491739.jpg","objectId":"58de06cb61ff4b006b0c0464"},"author":"","screenshot":"","original":false,"hotIndex":31.263,"content":"对闭包与装饰器的讲解。","title":"Python 闭包与装饰器","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571340},"viewsCount":287,"summaryInfo":" 一、闭包       函数是一个对象，所以可以对象的形式作为某个函数的结果返回。函数执行完后内部变量将会被回收。在闭包中，由于内部函数存在对外部函数的变量的引用，所以即使外部函数执行完毕，该变量依然存在。      闭包简单来说，外部函数FunOut()里面包含一个内部函数FunIn(),并且外...","isCollected":false},{"collectionCount":16,"isEvent":false,"commentsCount":3,"gfw":false,"buildTime":1571974513.8272,"checkStatus":true,"objectId":"5cbddecbe51d456e3a5f0829","entryView":"","subscribersCount":0,"ngxCachedTime":1572571650,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-25T03:35:13.809Z","rankIndex":0.00015039820555124,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c6d785ae51d4539a6427213","verifyCreatedAt":"2019-04-23T06:46:58.993Z","createdAt":"2019-04-23T06:46:58.993Z","user":{"community":null,"collectedEntriesCount":77,"company":"西安","followersCount":34,"followeesCount":7,"role":"guest","postedPostsCount":10,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":19,"ngxCachedTime":1572571650,"viewedEntriesCount":2343,"jobTitle":"web页面开发","subscribedTagsCount":25,"totalCollectionsCount":145,"username":"苏进取","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/24/16a4fe2bace3c5a4?w=720&h=405&f=jpeg&s=30154","objectId":"57d7830ea0bb9f0057f025bd"},"author":"","screenshot":"","original":true,"hotIndex":44.4626,"content":"闭包这个概念并不是 JavaScript 的专利，本篇中描述的闭包均是 JavaScript 中的闭包，其相关的描述也均是围绕 JavaScript 来的。在 JavaScript 中闭包是很常见的，有时甚至不经意间就写出来了，可能自己还没有意识到。比如下面 可能有人会质疑这不…","title":"let和闭包有啥关系","lastCommentTime":"2019-05-13T10:12:44.472Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":493,"summaryInfo":"闭包这个概念并不是 JavaScript 的专利，本篇中描述的闭包均是 JavaScript 中的闭包，其相关的描述也均是围绕 JavaScript 来的。在 JavaScript 中闭包是很常见的，有时甚至不经意间就写出来了，可能自己还没有意识到。比如下面 可能有人会质疑这不是闭包，因为这根本不...","isCollected":false},{"collectionCount":16,"isEvent":false,"commentsCount":1,"gfw":false,"buildTime":1572406083.1529,"checkStatus":true,"objectId":"5c59a3ef6fb9a049a42f7dd5","entryView":"","subscribersCount":0,"ngxCachedTime":1572571650,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T03:28:03.135Z","rankIndex":0.000085242693903298,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c5412b06fb9a049b82ae560","verifyCreatedAt":"2019-02-06T09:41:07.651Z","createdAt":"2019-02-06T09:41:07.651Z","user":{"community":{"github":{"username":"yukisong192517","avatarLarge":"https://avatars2.githubusercontent.com/u/14939138?v=4","uid":"14939138"}},"collectedEntriesCount":28,"company":"Shopee","followersCount":29,"followeesCount":22,"role":"guest","postedPostsCount":11,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":22,"ngxCachedTime":1572571649,"ngxCached":true,"viewedEntriesCount":631,"jobTitle":"菜鸡小前端","subscribedTagsCount":35,"totalCollectionsCount":402,"username":"Yukiiiiiiiiiii","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/10/16c7b6e18205e3e8?w=500&h=500&f=jpeg&s=59599","objectId":"5a07b38e6fb9a0451a75dc35"},"author":"","screenshot":"","original":true,"hotIndex":43.4274,"content":"此篇文章翻译自Sukhjinder Arora文章Understanding Closures in JavaScript. 这篇文章结合了闭包，词法作用域，调用栈以及执行上下文来理解闭包。文章如有翻译不好的地方还望多多包涵。 闭包是每一个js开发者都需要知道和理解的概念。然而…","title":"[译]理解JS中的闭包","lastCommentTime":"2019-02-12T14:48:15.749Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":526,"summaryInfo":"此篇文章翻译自Sukhjinder Arora文章Understanding Closures in JavaScript. 这篇文章结合了闭包，词法作用域，调用栈以及执行上下文来理解闭包。文章如有翻译不好的地方还望多多包涵。 闭包是每一个js开发者都需要知道和理解的概念。然而，它也是一个困扰着所...","isCollected":false},{"collectionCount":16,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572484300,"updatedAt":"2018-12-25T16:17:25.483Z","tags":[{"ngxCachedTime":1572484189,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"},{"ngxCachedTime":1572484262,"ngxCached":true,"title":"Xcode","id":"55d5a7a760b22b8d7dd21fcc"}],"objectId":"5965086751882568af7f3cc1","rankIndex":0.000023062670691358,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/f792f9aa2e45","buildTime":1545754645.612,"createdAt":"2017-07-13T07:03:12.726Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKGxkOibYsbwMY1VdQlxQbffZUekj70eicMeRnPF6f03Q0aXibeRjZEqicQ75QjjqRxBfmu0eo4W5nE3A/132"}},"collectedEntriesCount":269,"company":"","followersCount":645,"followeesCount":3,"role":"guest","postedPostsCount":4,"level":1,"isAuthor":false,"postedEntriesCount":6,"totalCommentsCount":6,"ngxCachedTime":1572484300,"viewedEntriesCount":1011,"jobTitle":"iOS开发工程师","subscribedTagsCount":96,"totalCollectionsCount":117,"username":"剧情的需要","avatarLarge":"https://user-gold-cdn.xitu.io/2017/11/17/15fc8ef06749c96e?w=1948&h=1212&f=png&s=4931188","objectId":"57ab2363a34131206cca8a82"},"author":"","screenshot":"","original":true,"hotIndex":565.5099,"content":"Xcode8调试黑科技：Memory Graph实战解决闭包引用循环问题","title":"Xcode8调试黑科技：Memory Graph实战解决闭包引用循环问题","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484205},"viewsCount":403,"summaryInfo":"Xcode8的调试技能又增加了一个黑科技：Memory Graph。简单的说就是可以在运行时将内存中的对象生成一张图。在现场的开发者听到了这个消息时响起了雷鸣般的掌声！我们来看看前方记者发回的现场照片： 妈妈说再也不用担心引用循环啦！除非你是个瞎子。 那么通过一个实际项目来练习一下吧。首先我们写了...","isCollected":false},{"collectionCount":16,"userRankIndex":4.742178039945,"buildTime":1572568541.0133,"commentsCount":8,"gfw":false,"objectId":"5db5851c518825646f23a047","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571780,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-11-01T00:35:40.997Z","rankIndex":0.084301952082399,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5db5846d51882564696fd606","verifyCreatedAt":"2019-10-27T16:45:59.040Z","createdAt":"2019-10-27T16:45:59.040Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/68ZTicTbMlF3BOqTfbEF7d1kibEOkKA4wJ4BDpfHHNt3YKvu8W2wDYPR0dR5nOozEDeNmZn6Z8OibuHSgzfqvQDwg/132"}},"collectedEntriesCount":18,"company":"","followersCount":39,"followeesCount":39,"role":"guest","postedPostsCount":27,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":27,"ngxCachedTime":1572571685,"ngxCached":true,"viewedEntriesCount":1196,"jobTitle":"前端","subscribedTagsCount":1,"totalCollectionsCount":152,"username":"William陈","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/28/16afc32c0f0ff09a?w=534&h=300&f=jpeg&s=15852","objectId":"5af14ce95188256717764163"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/10/27/16e0d0e47301af62?w=500&h=333&f=jpeg&s=19609","original":true,"hotIndex":85.7381,"content":"闭包的定义：当内部的函数被保存到外部时，将会生成闭包，闭包会导致原有的作用域链不释放，造成内存泄漏。 闭包会导致多个执行函数共用一个公有变量，如果不是特殊需要，应该尽量防止这种情况发生。 立即执行函数定义：此类函数没有声明，在一次执行过后释放，适合做初始化工作。 内存泄漏定义：…","title":"一文理清由闭包引发内存泄漏和垃圾回收机制","lastCommentTime":"2019-10-30T09:37:56.311Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":1215,"summaryInfo":"","isCollected":false},{"collectionCount":14,"commentsCount":0,"gfw":false,"entryView":"58b4dee3570c35006b0a89a6","subscribersCount":0,"ngxCachedTime":1572571195,"updatedAt":"2019-10-08T12:08:57.844Z","tags":[{"ngxCachedTime":1572571096,"ngxCached":true,"title":"Go","id":"555e9a80e4b00c57d9955de2"}],"objectId":"58b4ded98ac247006375cd6e","rankIndex":0.0000087929965076234,"hot":false,"autoPass":false,"originalUrl":"https://github.com/carryxyh/GO-Start/blob/master/Go%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E9%97%AD%E5%8C%85.md","buildTime":1570536537.8618,"createdAt":"2017-02-28T02:22:17.452Z","user":{"community":{"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqR1uIibq33Kr6yhYOy0ia0zsibqt6NzU7rXibluzuJAcUfdJNfU7F7OhvjcjrX3DNXBdq2PJ0yDlsRpw/132"},"github":{"username":"carryxyh","avatarLarge":"https://avatars1.githubusercontent.com/u/12047600?v=4","uid":"12047600"}},"collectedEntriesCount":4,"company":"网易云音乐","followersCount":2901,"followeesCount":2,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":77,"totalCommentsCount":16,"ngxCachedTime":1572571195,"viewedEntriesCount":218,"jobTitle":"高级java开发工程师","subscribedTagsCount":12,"totalCollectionsCount":762,"username":"时无两丶","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08429327fe04fde","objectId":"58b431d5570c350069349b5b"},"author":"","screenshot":"","original":false,"hotIndex":30.389,"content":"Go 语言中的闭包实现","title":"Go 语言中的闭包实现","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571118},"viewsCount":309,"summaryInfo":"函数f返回了一个函数，返回的这个函数就是一个闭包。这个函数中本身是没有定义变量的，而是引用了它所在的环境（）中的变量。 C1跟C2引用的是不同的环境，在调用时修改的不是同一个，因此两次的输出都是1。，对应的闭包中，函数都是同一个函数，环境却是引用不同的环境。 变量是函数f中的局部变量，假设这个变量...","isCollected":false},{"collectionCount":14,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572484312,"updatedAt":"2019-10-21T12:27:44.174Z","tags":[{"ngxCachedTime":1572484309,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"}],"objectId":"5955a015f265da6c3a54bee5","rankIndex":0.000015451906071628,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/f20fdbd8fe0f","buildTime":1571660864.1924,"createdAt":"2017-07-03T02:58:41.776Z","user":{"community":{"github":{"username":"wangrui460","avatarLarge":"https://avatars2.githubusercontent.com/u/11909313?v=4","uid":"11909313"}},"collectedEntriesCount":7,"company":"","followersCount":635,"followeesCount":12,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":2,"ngxCachedTime":1572484312,"viewedEntriesCount":108,"jobTitle":"iOS 工程师","subscribedTagsCount":12,"totalCollectionsCount":81,"username":"wangrui460","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08544bf624ac0f9","objectId":"5941d23161ff4b006cc21424"},"author":"","screenshot":"","original":true,"hotIndex":44.2646,"content":"很方便","title":"基于 Alamofire 的一个网络请求的封装，包括闭包回调 和 成功或失败代理方法","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484205},"viewsCount":602,"summaryInfo":"基于 Alamofire 的一个网络请求的封装，包括闭包回调 和 成功或失败代理方法！ demo地址：https://github.com/wangrui460/WRNetWrapper  强烈推荐：超简单！！！ IOS设置状态栏、导航栏按钮、标题、颜色、透明度，偏移等 https://githu...","isCollected":false},{"collectionCount":14,"commentsCount":0,"gfw":false,"entryView":"58356a4cc59e0d005770a9b7","subscribersCount":0,"ngxCachedTime":1572571701,"updatedAt":"2019-10-31T10:32:06.910Z","tags":[{"ngxCachedTime":1572571701,"ngxCached":false,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571588,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"objectId":"5833f41e570c35006c239deb","rankIndex":0.000010978049729396,"hot":false,"autoPass":false,"originalUrl":"https://www.kindjeff.com/a/local_var_in_python_closure","buildTime":1572517926.9279,"createdAt":"2016-11-22T07:30:38.781Z","user":{"community":{"weibo":{"selfDescription":"主业挖掘最优质的互联网技术→ https://juejin.im 心情好会说点有趣的事","uid":"5383066644","blogAddress":"http://weibo.com/xitucircle","username":"掘金技术社区","avatarLarge":"https://tvax2.sinaimg.cn/crop.12.14.448.448.180/005SiNxyly8g1nzah4zlbj30dc0dcdfz.jpg?KID=imgbed,tva&Expires=1572444920&ssig=oM7XqQ2S4x"}},"collectedEntriesCount":814,"company":"稀土","followersCount":50933,"followeesCount":133,"role":"editor","postedPostsCount":75,"level":5,"isAuthor":true,"postedEntriesCount":2245,"totalCommentsCount":17263,"ngxCachedTime":1572571584,"ngxCached":true,"viewedEntriesCount":7862,"jobTitle":"最酷的","subscribedTagsCount":118,"totalCollectionsCount":45516,"username":"稀土君","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/40f695879c4acce775aba0046bde0bc7","objectId":"551d6923e4b0cd5b623f54da"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/0d2457eea8bf8f66d414.jpg","original":false,"hotIndex":45.3778,"content":"Python 的作用域有这样的规则，你在内部的局部作用域里，仅仅使用外部的变量是允许的，但是改变这个引用本身是不被允许的。","title":"局部变量在 Python 闭包中遇到的一些麻烦","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":false,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571701},"viewsCount":608,"summaryInfo":"Python 的作用域有这样的规则，你在内部的局部作用域里，仅仅使用外部的变量是允许的，但是改变这个引用本身是不被允许的。 上面的代码是没有错误的， v 被认为是外部作用域的变量，引用它是可以的。 上面也是没有错误的， v 被定义为内部作用域的变量，对它的操作和外部的 v 无关。 上面的例子里，执...","isCollected":false},{"collectionCount":14,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571712,"updatedAt":"2019-08-29T14:43:14.930Z","tags":[{"ngxCachedTime":1572571701,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571700,"ngxCached":true,"title":"PHP","id":"555e9a84e4b00c57d9955e1b"}],"objectId":"59714fae6fb9a06ba73d692c","rankIndex":0.0000095311548770427,"hot":false,"autoPass":false,"originalUrl":"https://segmentfault.com/a/1190000010283999","buildTime":1567089794.9462,"createdAt":"2017-07-21T07:40:24.614Z","user":{"community":{"github":{"username":"xx19941215","avatarLarge":"https://avatars0.githubusercontent.com/u/10104328?v=4","uid":"10104328"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erkZYnpDuNBg6MeMmh1hEibeb9oYdppIjnmwdwA3vkkiczp5yZ2gLtiaYUxmlAGT70JAyKofwbNp8siaw/132"}},"collectedEntriesCount":39,"company":"","followersCount":3021,"followeesCount":22,"role":"editor","postedPostsCount":23,"level":3,"isAuthor":true,"postedEntriesCount":8,"totalCommentsCount":55,"ngxCachedTime":1572571712,"viewedEntriesCount":639,"jobTitle":"Web开发","subscribedTagsCount":26,"totalCollectionsCount":1665,"username":"萧潇","avatarLarge":"https://user-gold-cdn.xitu.io/2018/9/16/165dff14331e077a?w=245&h=245&f=jpeg&s=49114","objectId":"596c3f7a5188252a092fa9fc"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/7/21/f75b4bb7a78113983bf7ed9a9f57ba7b","original":true,"hotIndex":23.9131,"content":"一篇很好的介绍PHP基础中关于闭包和匿名函数的文章~","title":"PHP新特性之闭包、匿名函数","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571701},"viewsCount":179,"summaryInfo":"1).闭包和匿名函数在PHP5.3中被引入。2).闭包是指在创建时封装函数周围状态的函数，即使闭包所在的环境不存在了，闭包封装的状态依然存在，这一点和Javascript的闭包特性很相似。3).匿名函数就是没有名称的函数，匿名函数可以赋值给变量，还可以像其他任何PHP对象一样传递。可以将匿名函数和...","isCollected":false},{"collectionCount":13,"userRankIndex":7.50871622944,"buildTime":1572162674.093,"commentsCount":5,"gfw":false,"objectId":"5cfe9544e51d4550723b13cc","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571645,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-27T07:51:14.075Z","rankIndex":0.0004324023044105,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cfd11fbe51d4555fd20a30d","verifyCreatedAt":"2019-06-11T02:40:59.159Z","createdAt":"2019-06-11T02:40:59.159Z","user":{"community":{"github":{"username":"zhaofeihao","avatarLarge":"https://avatars2.githubusercontent.com/u/33317030?v=4","uid":"33317030"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoRe3AbicV2Z7yMgV7bobib9WP2RcPicsWDHhcSYmjRbWicagFFc91v3XYS6icmfegicdp98sBvRP8OYToQ/132"}},"collectedEntriesCount":61,"company":"面向搜索引擎的复制粘贴工程师","followersCount":63,"followeesCount":12,"role":"guest","postedPostsCount":16,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":24,"ngxCachedTime":1572571526,"ngxCached":true,"viewedEntriesCount":845,"jobTitle":"前端","subscribedTagsCount":6,"totalCollectionsCount":241,"username":"zhaofeihao","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0963afb981db0ac","objectId":"5bee78d0e51d452ade4fb053"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/6/9/16b3c8f3722722ca?w=2600&h=1733&f=jpeg&s=640975","original":true,"hotIndex":75.14,"content":"坦白的讲，不掌握闭包这个知识点的话你是不会在 JavaScript 这条路上走太远的。你不仅要掌握闭包的机制是什么，还要知道闭包的重要性在哪，同时能轻松的写出几个可行的闭包用例。 闭包在 JavaScript 中经常用来进行对象数据私有化，在事件处理程序和回调函数中也常常会用到…","title":"[译]玩转 JavaScript 面试：何为闭包？","lastCommentTime":"2019-06-12T10:05:31.723Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":1139,"summaryInfo":"坦白的讲，不掌握闭包这个知识点的话你是不会在 JavaScript 这条路上走太远的。你不仅要掌握闭包的机制是什么，还要知道闭包的重要性在哪，同时能轻松的写出几个可行的闭包用例。 闭包在 JavaScript 中经常用来进行对象数据私有化，在事件处理程序和回调函数中也常常会用到。此外还有偏分函数和...","isCollected":false},{"collectionCount":13,"commentsCount":0,"gfw":false,"entryView":"58eb39e1a0bb9f00692943b1","subscribersCount":0,"ngxCachedTime":1572571397,"updatedAt":"2019-10-24T12:25:12.505Z","tags":[{"ngxCachedTime":1572571344,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"objectId":"58eb2f9a570c350057dd919b","rankIndex":0.000008418906406647,"hot":false,"autoPass":false,"originalUrl":"http://www.vimiix.com/2017/04/09/Python-About-closure.html","buildTime":1571919912.5218,"createdAt":"2017-04-10T07:09:14.255Z","user":{"community":null,"collectedEntriesCount":42,"company":"","followersCount":1344,"followeesCount":1,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":90,"totalCommentsCount":40,"ngxCachedTime":1572571318,"ngxCached":true,"viewedEntriesCount":56,"jobTitle":"","subscribedTagsCount":1,"totalCollectionsCount":2702,"username":"vinegar","avatarLarge":"https://leancloud-gold-cdn.xitu.io/95641f335d0941491739.jpg","objectId":"58de06cb61ff4b006b0c0464"},"author":"","screenshot":"","original":false,"hotIndex":27.9496,"content":"看看作者怎么讲难理解的闭包 = 函数 + 引用环境的定义转化成好理解的定义。","title":"关于 Python 中闭包的一些理解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571337},"viewsCount":289,"summaryInfo":"看不懂的定义：闭包是由函数及其相关的引用环境组合而成的实体(即：闭包=函数+引用环境)。 既然是看不懂的定义，真看不懂上面定义的话就忽略吧。 在python中，函数可以作为另一个函数的参数或返回值，可以赋给一个变量。函数可以嵌套定义，即在一个函数内部可以定义另一个函数，有了嵌套函数这种结构，便会产...","isCollected":false},{"collectionCount":13,"userRankIndex":26.25,"buildTime":1572453272.4121,"commentsCount":2,"gfw":false,"objectId":"5cc087b4e51d456e431ada78","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571798,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-30T16:34:32.394Z","rankIndex":0.000251669197677,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cb1308df265da039b085e69","verifyCreatedAt":"2019-04-25T02:40:46.677Z","createdAt":"2019-04-25T02:40:46.677Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjJwaevDnZ163wNSa4APdzrJYlrkCAiaxfxP3iaxR7gwKu7C6d2ucD7O48LmwYrSgnEKGrdCKNeibhQ/132"}},"collectedEntriesCount":343,"company":"深演智能","followersCount":68,"followeesCount":115,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":32,"ngxCachedTime":1572571798,"viewedEntriesCount":2282,"jobTitle":"web前端","subscribedTagsCount":24,"totalCollectionsCount":169,"username":"石小阳","avatarLarge":"https://user-gold-cdn.xitu.io/2019/9/24/16d62b5a3eeecaa4?w=580&h=582&f=jpeg&s=31489","objectId":"5b7a8eb751882542da337f5d"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/4/13/16a15e64f3166d98?w=3634&h=1630&f=png&s=791559","original":true,"hotIndex":50.4033,"content":"上一篇我们讲了本书第一章中的作用域，作用域链，简单介绍了引擎，编译器，作用域是怎么合作进行编译的。本篇我们将会介绍本书第一部分的 2 ~ 6 章。 说说你对闭包的理解。（面试） 闭包是一个绑定了执行环境的函数，闭包和普通函数的区别是携带了执行的环境。 闭包由环境和表达式两部分组…","title":"【共读】《你不知道的JavaScript上》作用域与闭包","lastCommentTime":"2019-04-25T18:57:00.930Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":699,"summaryInfo":"上一篇我们讲了本书第一章中的作用域，作用域链，简单介绍了引擎，编译器，作用域是怎么合作进行编译的。本篇我们将会介绍本书第一部分的 2 ~ 6 章。 闭包是一个绑定了执行环境的函数，闭包和普通函数的区别是携带了执行的环境。 闭包由环境和表达式两部分组成。 它被广泛应用，比如在回调函数中定时器，事件监...","isCollected":false},{"collectionCount":13,"userRankIndex":5.6788735872676,"buildTime":1571908227.6978,"commentsCount":10,"gfw":false,"objectId":"5ce3dac9e51d4510803ce322","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571647,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-24T09:10:27.682Z","rankIndex":0.00028373076891866,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ce376c751882533207bad67","verifyCreatedAt":"2019-05-21T11:06:20.941Z","createdAt":"2019-05-21T11:06:20.941Z","user":{"community":{"github":{"username":"zhangfaliang","avatarLarge":"https://avatars1.githubusercontent.com/u/17559536?v=4","uid":"17559536"}},"collectedEntriesCount":49,"company":"邦赢科技","followersCount":39,"followeesCount":4,"role":"guest","postedPostsCount":38,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":31,"ngxCachedTime":1572571647,"viewedEntriesCount":779,"jobTitle":"前端工程师","subscribedTagsCount":84,"totalCollectionsCount":367,"username":"zhangfaliang","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e087a11959fb50a9","objectId":"5994ee32f265da246b3c126b"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/5/23/16ae416851d3474f?w=636&h=714&f=jpeg&s=139953","original":true,"hotIndex":59.2964,"content":"全局执行环境是js最外层的执行环境，在不同的执行环境最外层的执行环境也不同，在web中window是全局执行环境。该执行环境一直存在，window的变量对象也一直存在的。 执行时创建变量对象并初始化它，把该函数中的arguments、定义的变量、定义的函数都会赋值到该变量对象上…","title":"史上最详细的作用域链和闭包解释","lastCommentTime":"2019-05-27T10:28:14.041Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":712,"summaryInfo":"有关作用域链和原型链对于学习js的小伙伴都应该不陌生，今天咱们就看看最详细的作用域链解释，目录中可能有些一些不常见的，但是这些对于理解作用域链和闭包很有左右，而且基本都可以理解js运行机制了😁  定义：在每一个函数被创建的时候都会为该函数添加一个[[Scopes]]属性，该属性包含了父级（可以理解...","isCollected":false},{"collectionCount":13,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572070072.0814,"checkStatus":true,"objectId":"5ab8a869518825556141424d","entryView":"","subscribersCount":0,"ngxCachedTime":1572571804,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571747,"ngxCached":true,"title":"Node.js","id":"555e9a77e4b00c57d9955d64"},{"ngxCachedTime":1572571769,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.000021009871957265,"hot":false,"updatedAt":"2019-10-26T06:07:52.064Z","originalUrl":"http://www.cnblogs.com/wangpengli/p/jsbibao.html","verifyCreatedAt":"2018-03-27T02:44:22.715Z","createdAt":"2018-03-27T02:44:22.715Z","user":{"community":{"github":{"username":"citystrawman","avatarLarge":"https://avatars1.githubusercontent.com/u/9004748?v=4","uid":"9004748"}},"collectedEntriesCount":5,"company":"","followersCount":249,"followeesCount":30,"role":"guest","postedPostsCount":8,"level":1,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":1,"ngxCachedTime":1572571804,"viewedEntriesCount":41,"jobTitle":"","subscribedTagsCount":1,"totalCollectionsCount":26,"username":"citystrawman","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08e7d00ab906ffb","objectId":"5aab280d51882555712c1a4f"},"author":"","screenshot":null,"original":false,"hotIndex":34.343,"content":"之前看过很多关于javascript闭包的解释，只有短短几个demo，一大段晦涩难懂的介绍，巴拉巴拉一大段闭包的概念，但是到最后也没看懂闭包到底是什么意思，起什么作用，直到昨晚凌晨，我在学习node.js模块开发的时候，才突然恍然大悟，所以赶紧记下来，免得以后忘记。代码来源：廖…","title":"从node.js模块化开发来了解javascript闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":425,"summaryInfo":"　　之前看过很多关于javascript闭包的解释，只有短短几个demo，一大段晦涩难懂的介绍，巴拉巴拉一大段闭包的概念，但是到最后也没看懂闭包到底是什么意思，起什么作用，直到昨晚凌晨，我在学习node.js模块开发的时候，才突然恍然大悟，所以赶紧记下来，免得以后忘记。代码来源：廖雪峰的网站nod...","isCollected":false},{"collectionCount":13,"userRankIndex":0,"buildTime":1572442882.5631,"commentsCount":2,"gfw":false,"objectId":"5d845c4751882529702405d8","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571651,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T13:41:22.546Z","rankIndex":0.0012130608923517,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d845c166fb9a06af92bdcdc","verifyCreatedAt":"2019-09-20T06:01:42.525Z","createdAt":"2019-09-20T06:01:42.525Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/4mdZmz5GAgk5q8lRFCNWIa7Aticg6JDy3L0IqfibYdicesfKSXE62vNBPibKJdSysUR0xTlrIsthdHnawpkPMHXkjQ/132"}},"collectedEntriesCount":12,"company":"","followersCount":17,"followeesCount":19,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":4,"ngxCachedTime":1572571651,"viewedEntriesCount":227,"jobTitle":"","subscribedTagsCount":1,"totalCollectionsCount":94,"username":"潘迪海","avatarLarge":"https://mirror-gold-cdn.xitu.io/16d4d05f798c7dd094a","objectId":"5d845ba151882514eb45760d"},"author":"","screenshot":"","original":true,"hotIndex":36.5713,"content":"其实大多数的时候作为javascript开发者不需要太关心内存的使用和释放,因为所有的javascript环境都实现了各自的垃圾回收机制(garbage collector(GC)),但是随着现在的SPA越来越多也越来越大,越来越追求极致的性能渐渐也要求开发者能够适当的了解一些…","title":"从一个闭包谈垃圾回收","lastCommentTime":"2019-09-23T19:45:53.999Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":420,"summaryInfo":"其实大多数的时候作为javascript开发者不需要太关心内存的使用和释放,因为所有的javascript环境都实现了各自的垃圾回收机制(garbage collector(GC)),但是随着现在的SPA越来越多也越来越大,越来越追求极致的性能渐渐也要求开发者能够适当的了解一些垃圾回收机制内部的实...","isCollected":false},{"collectionCount":13,"commentsCount":3,"gfw":false,"objectId":"5a309c1bf265da431523e4de","checkStatus":true,"buildTime":1568629999.8767,"entryView":"","subscribersCount":0,"ngxCachedTime":1568851513,"verifyStatus":true,"tags":[{"ngxCachedTime":1568851407,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"autoPass":true,"rankIndex":0.000021785896603975,"hot":false,"updatedAt":"2019-09-16T10:33:19.859Z","originalUrl":"https://juejin.im/post/5a309c1b6fb9a04517052f19","verifyCreatedAt":"2017-12-13T16:35:50.331Z","createdAt":"2017-12-13T16:35:50.331Z","user":{"community":{"weibo":{"avatar_url":"http://tva4.sinaimg.cn/crop.0.0.200.200.180/006cj7HYjw8f0mgfjzy28j305k05k3yk.jpg","uid":"5678670890","nickname":"bestswifter"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/qf0EHicTESHyjHmaxh4amY4ac3ueYY1nqFhOygBxDxSHEq6mJjDyOfFbeMy4U21TZqtfNMSRCoGpIn310345XJQ/132"},"github":{"username":"bestswifter","avatarLarge":"https://avatars3.githubusercontent.com/u/8394612?v=4","uid":"8394612"}},"collectedEntriesCount":30,"company":"bytedance","followersCount":3308,"followeesCount":11,"role":"editor","postedPostsCount":109,"level":4,"isAuthor":true,"postedEntriesCount":4,"totalCommentsCount":176,"ngxCachedTime":1568851461,"ngxCached":true,"viewedEntriesCount":676,"jobTitle":"iOS-基础技术","subscribedTagsCount":9,"totalCollectionsCount":4303,"username":"bestswifter","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082ba65cbe6d4c3","objectId":"57638ad8207703006b06e3ef"},"author":"","screenshot":"","original":true,"hotIndex":41.6468,"content":"最近在看Swift闭包截获变量时遇到了各种问题，总结之后发现主要是还用停留在OC时代的思维来思考Swift问题导致的。借此机会首先复习一下OC中关于block的细节，同时整理Swift中闭包的相关的问题。不管是目前使用OC还是Swift，又或者是从OC转向Swift，都可以阅读…","title":"OC与Swift闭包对比总结","lastCommentTime":"2017-12-15T15:32:48.490Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851427},"viewsCount":496,"summaryInfo":"OC的block已经有很多相关的文章介绍了，主要难点在于修饰符的作用和原理，以及循环引用问题。我们首先由浅入深举几个例子看一看修饰符，最后分析循环引用问题。这里的讨论都是基于ARC的。 OC的block会截获外部变量，对于等基本数据类型，block的内部会拷贝一份，简单来说，它的实现大概是这样的：...","isCollected":false},{"collectionCount":13,"commentsCount":0,"gfw":false,"entryView":"57972e24128fe10056d176bc","subscribersCount":0,"ngxCachedTime":1572484312,"updatedAt":"2019-10-29T11:33:06.042Z","tags":[{"ngxCachedTime":1572484309,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"},{"ngxCachedTime":1572484261,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"objectId":"5796308479bc440066443c8e","rankIndex":0.0000092061864528163,"hot":false,"autoPass":false,"originalUrl":"http://alisoftware.github.io/swift/closures/2016/07/25/closure-capture-1/","buildTime":1572348786.0604,"createdAt":"2016-07-25T15:30:12.564Z","user":{"community":{"weibo":{"selfDescription":"稀土(xitu.io)联合创始人，北京GDG(谷歌开发者社区)组织者","uid":"1734298257","blogAddress":"http://weibo.com/jiangbian66","username":"江江也叫Glowin","avatarLarge":"https://tva1.sinaimg.cn/crop.0.0.750.750.180/675f4a91jw8f0tbc5daqkj20ku0ku3zl.jpg?KID=imgbed,tva&Expires=1570625679&ssig=nLmW1Dcuag"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq3EB3NZzGYeeU49js4CFyoRADm2R3ylN150Wom3tRMt3S2ic6g0RkesrUW8yviaDhw5bLSRGiaaYsibw/132"},"github":{"username":"Glowin","avatarLarge":"https://avatars1.githubusercontent.com/u/1147941?v=4","uid":"1147941"}},"collectedEntriesCount":964,"company":"掘金","followersCount":9081,"followeesCount":318,"role":"admin","postedPostsCount":4,"level":2,"isAuthor":true,"postedEntriesCount":439,"totalCommentsCount":1074,"ngxCachedTime":1572484229,"ngxCached":true,"viewedEntriesCount":23550,"jobTitle":"鼓励师","subscribedTagsCount":82,"totalCollectionsCount":19441,"username":"江昪","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/fccdf235575bdd47ba917a9b74927919","objectId":"551ca9d6e4b0cd5b6237420e"},"author":"","screenshot":"","original":false,"hotIndex":44.4833,"content":"Swift 中的闭包和 Objective-C 中的 block 类似，闭包是功能性自包含模块，可以在代码中被传递和使用。本文帮助大家捋清楚闭包中变量在各种情况的不同变化。","title":"[英] 深入理解 Swift 中闭包的捕捉语义（一）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":true,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484205},"viewsCount":629,"summaryInfo":"Even with ARC nowadays, it’s still important to understand memory management and objects life-cycles. A special case is when using closures, which ar...","isCollected":false},{"collectionCount":13,"commentsCount":0,"gfw":false,"objectId":"5a119461518825329314231c","checkStatus":true,"buildTime":1572517790.5976,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571005,"verifyStatus":true,"tags":[{"ngxCachedTime":1572570996,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572570895,"ngxCached":true,"title":"MVVM","id":"5597a314e4b08a686ce5be90"},{"ngxCachedTime":1572570993,"ngxCached":true,"title":"WebSocket","id":"58bd1c6c570c350059aea886"},{"ngxCachedTime":1572570913,"ngxCached":true,"title":"HTTP","id":"55e7d00800b0c86e8e693ef4"}],"autoPass":true,"rankIndex":0.000011431438027299,"hot":false,"updatedAt":"2019-10-31T10:29:50.580Z","originalUrl":"https://github.com/dianbaer/juggle","verifyCreatedAt":"2017-11-20T03:56:41.039Z","createdAt":"2017-11-20T03:56:41.039Z","user":{"community":{"github":{"username":"dianbaer","avatarLarge":"https://avatars3.githubusercontent.com/u/28687763?v=4","uid":"28687763"}},"collectedEntriesCount":9,"company":"","followersCount":143,"followeesCount":1,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":6,"totalCommentsCount":0,"ngxCachedTime":1572571005,"viewedEntriesCount":44,"jobTitle":"","subscribedTagsCount":2,"totalCollectionsCount":151,"username":"dianbaer","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08bdaf9cbe965df","objectId":"5a10419f5188253293142124"},"author":"","screenshot":null,"original":false,"hotIndex":25.4445,"content":"juggle是一个极简的、组件式的js框架。无依赖，完美闭包，灵活且适合渐进学习，可与任何框架整合。包含（支持冒泡的事件、Tween、MV框架、http、websocket、资源、模块）等组件，按需选择组件，不绑架开发者。","title":"juggle是一个极简的、组件式的js框架。无依赖，完美闭包，灵活且适合渐进学习，可与任何框架整合。包含（支持冒泡的事件、Tween、MV框架、http、websocket、资源、模块）等组件，按需选择组件，不绑架开发者。","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572570919},"viewsCount":236,"summaryInfo":"JUGGLE是一个极简的、组件式的JS框架。无依赖，完美闭包，灵活且适合渐进学习，可与任何框架整合。包含（支持冒泡的事件、TWEEN、MV框架、HTTP、WEBSOCKET、资源、模块）等组件，按需选择组件，不绑架开发者。 介绍：支持冒泡的事件，可用于解除包含结构，树形结构的耦合性。支持监听事件、...","isCollected":false},{"collectionCount":13,"commentsCount":0,"gfw":false,"entryView":"566646d600b09f85717d0fed","subscribersCount":0,"ngxCachedTime":1571878503,"updatedAt":"2019-10-09T12:36:59.592Z","tags":[{"ngxCachedTime":1571878483,"ngxCached":true,"title":"C","id":"559a7211e4b08a686d25715d"}],"objectId":"566645f760b2647733a1aeef","rankIndex":0.0000088783953953459,"hot":true,"autoPass":false,"originalUrl":"http://segmentfault.com/a/1190000004096362","buildTime":1570624619.6097,"createdAt":"2015-12-08T02:52:39.284Z","user":{"community":{"weibo":{"selfDescription":"SegmentFault 思否 - 帮助开发者成功！","uid":"2036070420","blogAddress":"http://weibo.com/segmentfault","username":"SegmentFault","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.180.180.180/795bf814jw1e8qgp5bmzyj2050050aa8.jpg?Expires=1565854150&ssig=6MKQc+WCj5&KID=imgbed,tva"}},"collectedEntriesCount":625,"company":"SegmentFault","followersCount":6017,"followeesCount":9,"role":"guest","postedPostsCount":4,"level":2,"isAuthor":false,"postedEntriesCount":686,"totalCommentsCount":405,"ngxCachedTime":1571878412,"ngxCached":true,"viewedEntriesCount":363,"jobTitle":"吉祥物","subscribedTagsCount":11,"totalCollectionsCount":44445,"username":"SegmentFault","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/9aa5f3a653941dde1c51669144232a09","objectId":"561c771260b22ed7aa580496"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/dcdf2041deb2655bac5e.jpg","original":false,"hotIndex":54.7667,"content":"在 『M4 说要有 Lambda，就有了 Lambda』一文的末尾，指出了使用 M4 所模拟的匿名函数无法作为闭包使用，并断言无法在 C 标准之内实现闭包。事实上，这个结论是武断的，因为当时我没有考虑 C 语言的全局变量的效用。","title":"M4 说 C 要有闭包，C 就有了单重闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1571878406},"viewsCount":822,"summaryInfo":"在 『M4 说要有 Lambda，就有了 Lambda』一文的末尾，指出了使用 M4 所模拟的匿名函数无法作为闭包使用，并断言无法在 C 标准之内实现闭包。事实上，这个结论是武断的，因为当时我没有考虑 C 语言的全局变量的效用。 C 标准库中提供了一个 函数，它可以对任意类型的值构成的数组进行排序...","isCollected":false},{"collectionCount":12,"userRankIndex":5.6788735872676,"buildTime":1572549922.8133,"commentsCount":1,"gfw":false,"objectId":"5d51985ff265da039401fcf5","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571651,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T19:25:22.794Z","rankIndex":0.00051839599728795,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d4fd2ed6fb9a06b1777a6c3","verifyCreatedAt":"2019-08-12T17:24:54.981Z","createdAt":"2019-08-12T17:24:54.981Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJWB5fMx2bvmNia0019AGFErADbz4hh6KhUOZWaXeVYElgiaRzYkcg6QKj4JWR7nE8M0yh5jqVLcK1A/132"}},"collectedEntriesCount":16,"company":"香格里拉","followersCount":10,"followeesCount":15,"role":"guest","postedPostsCount":6,"level":1,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":2,"ngxCachedTime":1572571651,"viewedEntriesCount":872,"jobTitle":"前端","subscribedTagsCount":1,"totalCollectionsCount":48,"username":"长安_","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/11/16c7fc03db1eb0e9?w=1772&h=1804&f=png&s=835821","objectId":"598ed55b6fb9a03c3810aaf5"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/8/13/16c86ba5f6a21569?w=500&h=211&f=jpeg&s=3774","original":true,"hotIndex":38.0364,"content":"在JS中我们所说的执行上下文栈就是图中的stack，执行的时候首先是全局上下文入栈，然后各种函数上下文入栈，当函数全部执行完之后，最后全局执行上下文出栈，图中的heap就是用于存储对象这种复杂的数据类型。Queue就是异步执行队列，用来存储我们在代码中书写的异步操作的callb…","title":"JavaScript执行上下文、作用域和闭包","lastCommentTime":"2019-08-14T14:07:28.298Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":484,"summaryInfo":"在JS中我们所说的执行上下文栈就是图中的stack，执行的时候首先是全局上下文入栈，然后各种函数上下文入栈，当函数全部执行完之后，最后全局执行上下文出栈，图中的heap就是用于存储对象这种复杂的数据类型。Queue就是异步执行队列，用来存储我们在代码中书写的异步操作的callback，用于even...","isCollected":false},{"collectionCount":12,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572350527.6735,"checkStatus":true,"objectId":"5b4bfb84f265da0f6e516b8f","entryView":"","subscribersCount":0,"ngxCachedTime":1572571810,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571769,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000018605548174028,"hot":false,"updatedAt":"2019-10-29T12:02:07.655Z","originalUrl":"https://juejin.im/post/5b4bfb065188257bcd588f7d","verifyCreatedAt":"2018-07-17T03:28:43.070Z","createdAt":"2018-07-17T03:28:43.070Z","user":{"community":{"weibo":{"selfDescription":"","uid":"6516767126","blogAddress":"http://weibo.com/u/6516767126","username":"不言弃的周大侠","avatarLarge":"http://tvax3.sinaimg.cn/default/images/default_avatar_male_180.gif"},"github":{"username":"zhoudaxiaa","avatarLarge":"https://avatars1.githubusercontent.com/u/22782052?v=4","uid":"22782052"}},"collectedEntriesCount":7,"company":"清达云计算","followersCount":66,"followeesCount":8,"role":"guest","postedPostsCount":26,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":8,"ngxCachedTime":1572571810,"viewedEntriesCount":735,"jobTitle":"前端","subscribedTagsCount":33,"totalCollectionsCount":213,"username":"周大侠啊","avatarLarge":"https://user-gold-cdn.xitu.io/2018/3/30/16275588a2a28f88?w=220&h=220&f=png&s=69551","objectId":"58b6acb88ac2470065a7f7aa"},"author":"","screenshot":"","original":true,"hotIndex":22.247,"content":"前面的闭包中，提到与闭包相似的立即执行函数，感觉两者还是比较容易弄混吧，严格来说（因为犀牛书和高程对闭包的定义不同），立即执行函数并不属于闭包，它不满足闭包的三个条件。 将函数放在圆括号中，会返回函数本身。如果圆括号紧跟在函数的后面，就表示调用函数，即对函数求值 使用 func…","title":"进击的 JavaScript（五） 之 立即执行函数与闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":192,"summaryInfo":"前面的闭包中，提到与闭包相似的立即执行函数，感觉两者还是比较容易弄混吧，严格来说（因为犀牛书和高程对闭包的定义不同），立即执行函数并不属于闭包，它不满足闭包的三个条件。   圆括号运算符也叫分组运算符，它有两种用法：如果表达式放在圆括号中，作用是求值；如果跟在函数后面，作用是调用函数   把表达式...","isCollected":false},{"collectionCount":12,"commentsCount":1,"gfw":false,"entryView":"58fd62f50ce463006132ccea","subscribersCount":1,"ngxCachedTime":1572571548,"updatedAt":"2019-10-31T15:58:06.160Z","tags":[{"ngxCachedTime":1572571507,"ngxCached":true,"title":"Kotlin","id":"56c40b1d2e958a0059a1b719"},{"ngxCachedTime":1572571464,"ngxCached":true,"title":"Android","id":"5597838ee4b08a686ce2319d"}],"objectId":"58fcaab95c497d005800743c","rankIndex":0.000049983079035457,"hot":false,"autoPass":false,"originalUrl":"https://kymjs.com/code/2017/04/09/01/","buildTime":1572537486.1809,"createdAt":"2017-04-23T13:23:05.937Z","user":{"community":{"weibo":{"selfDescription":"http://www.kymjs.com","uid":"3025443500","blogAddress":"http://weibo.com/kymjs123","username":"kymjs张涛","avatarLarge":"http://tva1.sinaimg.cn/crop.0.0.1080.1080.180/b4549aacjw8eyvwt7tut8j20u00u0gnj.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/4J0MicDecPxG1FEx7HGlrlBykDkuibq0UInT8egMZP2w6RTjaNwKYjCUarkant6KCmAsF3icLcicFiaRu48g6XhD7kw/132"},"github":{"username":"kymjs","avatarLarge":"https://avatars3.githubusercontent.com/u/5780230?v=4","uid":"5780230"}},"collectedEntriesCount":34,"company":"开源实验室","followersCount":1408,"followeesCount":2,"role":"editor","postedPostsCount":3,"level":2,"isAuthor":false,"postedEntriesCount":38,"totalCommentsCount":56,"ngxCachedTime":1572571433,"ngxCached":true,"viewedEntriesCount":465,"jobTitle":"大前端开发","subscribedTagsCount":4,"totalCollectionsCount":3485,"username":"kymjs张涛","avatarLarge":"https://user-gold-cdn.xitu.io/2018/4/24/162f70d9a7209354?w=1080&h=1080&f=jpeg&s=46525","objectId":"5602161360b249ad610b5171"},"author":"","screenshot":"","original":false,"hotIndex":164.299,"content":"函数与闭包的特性可以算是 Kotlin 语言最大的特性了。","title":"Kotlin Primer·第五章·函数与闭包","lastCommentTime":"2017-04-23T15:51:46.489Z","type":"article","english":false,"category":{"ngxCached":true,"title":"android","id":"5562b410e4b00c57d9b94a92","name":"Android","ngxCachedTime":1572571545},"viewsCount":3023,"summaryInfo":"本文开源实验室原创，com/code/2017/04/09/01 久违了，Kotlin 的闭包。函数与闭包的特性可以算是 Kotlin 语言最大的特性了，所以写了很久。函数与闭包的特性可以算是 Kotlin 语言最大的特性了。 即使 Kotlin 是一门面向对象的编程语言，它也是有函数的概念的——...","isCollected":false},{"collectionCount":12,"userRankIndex":0,"buildTime":1572183194.2813,"commentsCount":2,"gfw":false,"objectId":"5ced1397518825526b294895","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571651,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-27T13:33:14.263Z","rankIndex":0.00015424101238109,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ced136c51882546155844bd","verifyCreatedAt":"2019-05-28T10:56:52.426Z","createdAt":"2019-05-28T10:56:52.426Z","user":{"community":{"github":{"username":"cy-biggray","uid":"34181974","avatarLarge":"https://avatars1.githubusercontent.com/u/34181974?v=4"}},"collectedEntriesCount":3,"company":"","followersCount":9,"followeesCount":14,"role":"guest","postedPostsCount":11,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571651,"viewedEntriesCount":145,"jobTitle":"","subscribedTagsCount":7,"totalCollectionsCount":34,"username":"长宇小灰","avatarLarge":"https://mirror-gold-cdn.xitu.io/16aabdd4a24458ad5f2","objectId":"5cd8077d51882568cc47ff40"},"author":"","screenshot":"","original":true,"hotIndex":34.035,"content":"谈起闭包，它可是JavaScript两个核心技术之一(异步和闭包),在面试以及实际应用当中，我们都离不开它们，甚至可以说它们是衡量js工程师实力的一个重要指标。下面我们就罗列闭包的几个常见问题，从回答问题的角度来理解和定义你们心中的闭包。 3.闭包是基于词法作用域书写代码时所产…","title":"js闭包概念的深入了解","lastCommentTime":"2019-05-28T19:41:39.614Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":395,"summaryInfo":"谈起闭包，它可是JavaScript两个核心技术之一(异步和闭包),在面试以及实际应用当中，我们都离不开它们，甚至可以说它们是衡量js工程师实力的一个重要指标。下面我们就罗列闭包的几个常见问题，从回答问题的角度来理解和定义。 1.闭包是指有权访问另一个函数作用域中的变量的函数 2.函数对象可以通过...","isCollected":false},{"collectionCount":12,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572346494.2555,"checkStatus":true,"objectId":"5c3bd02051882525602dea14","entryView":"","subscribersCount":0,"ngxCachedTime":1572571650,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-29T10:54:54.238Z","rankIndex":0.000072340045457455,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c3b3c126fb9a049d2364923","verifyCreatedAt":"2019-01-14T02:37:51.815Z","createdAt":"2019-01-14T02:37:51.815Z","user":{"community":null,"collectedEntriesCount":168,"company":"","followersCount":118,"followeesCount":0,"role":"guest","postedPostsCount":32,"level":2,"isAuthor":false,"postedEntriesCount":12,"totalCommentsCount":29,"ngxCachedTime":1572571645,"ngxCached":true,"viewedEntriesCount":10995,"jobTitle":"","subscribedTagsCount":325,"totalCollectionsCount":450,"username":"曉宸","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/4/169e6f4c68040f0a?w=640&h=512&f=jpeg&s=18559","objectId":"57f1dbf5bf22ec00645dfc31"},"author":"","screenshot":"","original":true,"hotIndex":41.6542,"content":"作用域机制是不能直接查看的, 我们首先模拟一个场景来尽可能的说明作用域这套规则, 然后通过代码片段和开发者工具进行验证. 想必大家都有玩过游戏的经验. 刚开始的时候, 也就是第一关, 难度比较简单. 到了第二关的时候, 就在第一关的基础上加些难缠的角色, 难度相应地加大了. 关…","title":"与作用域相关的闭包、内存泄漏、this","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":586,"summaryInfo":"作用域机制是不能直接查看的, 我们首先模拟一个场景来尽可能的说明作用域这套规则, 然后通过代码片段和开发者工具进行验证. 想必大家都有玩过游戏的经验. 刚开始的时候, 也就是第一关, 难度比较简单. 到了第二关的时候, 就在第一关的基础上加些难缠的角色, 难度相应地加大了. 关卡越是往后, 难缠的...","isCollected":false},{"collectionCount":12,"userRankIndex":63.873015873016,"buildTime":1571101645.1502,"commentsCount":0,"gfw":false,"objectId":"5cd001e5e51d453a69177ea1","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571651,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:07:24.930Z","rankIndex":0.00041928815621044,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ccfdd5ae51d456e660d4561","verifyCreatedAt":"2019-05-06T09:45:07.147Z","createdAt":"2019-05-06T09:45:07.147Z","user":{"community":null,"collectedEntriesCount":11,"company":"","followersCount":5752,"followeesCount":8,"role":"guest","postedPostsCount":159,"level":4,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":452,"ngxCachedTime":1572571641,"ngxCached":true,"viewedEntriesCount":1259,"jobTitle":"前端码农","subscribedTagsCount":4,"totalCollectionsCount":4334,"username":"前端先锋","avatarLarge":"https://user-gold-cdn.xitu.io/2019/2/21/1690fd0c3f7514f2?w=626&h=626&f=jpeg&s=58154","objectId":"5bcee48e518825102423e40d"},"author":"","screenshot":"","original":true,"hotIndex":37.4767,"content":"闭包是函数创建时作用域内所有变量的集合。要使用闭包，需要在另一个函数中创建一个函数，这种函数被称为嵌套函数。内部函数可以访问外部函数作用域中的变量（依靠闭包可以访问外部函数作用域），即使在返回外部函数之后也是如此。每次创建嵌套函数时都会创建闭包。 在继续了解闭包之前，首先了解一…","title":"JavaScript 闭包基本指南","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":491,"summaryInfo":"闭包是函数创建时作用域内所有变量的集合。要使用闭包，需要在另一个函数中创建一个函数，这种函数被称为嵌套函数。内部函数可以访问外部函数作用域中的变量（依靠闭包可以访问外部函数作用域），即使在返回外部函数之后也是如此。每次创建嵌套函数时都会创建闭包。 在继续了解闭包之前，首先了解一下JavaScrip...","isCollected":false},{"collectionCount":11,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572424539.2816,"checkStatus":true,"objectId":"5bbdac63e51d450e8b13fbea","entryView":"","subscribersCount":0,"ngxCachedTime":1572571398,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571371,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"},{"ngxCachedTime":1572571349,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"}],"isEvent":false,"rankIndex":0.00002336938499852,"hot":false,"updatedAt":"2019-10-30T08:35:39.263Z","originalUrl":"https://www.jianshu.com/p/17a9d8584530","verifyCreatedAt":"2018-10-12T06:17:56.965Z","createdAt":"2018-10-12T06:17:56.965Z","user":{"community":null,"collectedEntriesCount":19,"company":"","followersCount":1464,"followeesCount":0,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":83,"totalCommentsCount":0,"ngxCachedTime":1572571398,"viewedEntriesCount":149,"jobTitle":"全栈工程师","subscribedTagsCount":3,"totalCollectionsCount":98,"username":"andy_","avatarLarge":"https://user-gold-cdn.xitu.io/2019/6/21/16b79c656da5a1f2?w=700&h=398&f=jpeg&s=59761","objectId":"591db343a22b9d005852571b"},"author":"","screenshot":null,"original":false,"hotIndex":20.6061,"content":"","title":"Python 变量作用域及闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571339},"viewsCount":187,"summaryInfo":"最近在刷leetcode题的时候，遇到一个求最长回文子串的题目，于是，我写了如下的代码： 哎呀，写了两个函数好麻烦啊，想到之前经常有人使用嵌套函数的方式来使代码变得简洁，所以我把上述代码改成了如下的形式： 是不是变得简单了好多，不过报错了！： 咦，看来这个函数嵌套不能随便用啊，那么这里正确使用函数...","isCollected":false},{"collectionCount":11,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572533454.6614,"checkStatus":true,"objectId":"5ca079df51882567d64ec825","entryView":"","subscribersCount":0,"ngxCachedTime":1572571804,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-31T14:50:54.643Z","rankIndex":0.000089755630081213,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c9ec1cd6fb9a05e5343a1bf","verifyCreatedAt":"2019-03-31T15:18:32.888Z","createdAt":"2019-03-31T15:18:32.888Z","user":{"community":{"github":{"username":"coderliwenjie","avatarLarge":"https://avatars1.githubusercontent.com/u/16144720?v=4","uid":"16144720"}},"collectedEntriesCount":42,"company":"公众号","followersCount":151,"followeesCount":14,"role":"guest","postedPostsCount":21,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":31,"ngxCachedTime":1572571750,"ngxCached":true,"viewedEntriesCount":2470,"jobTitle":"前端持续学","subscribedTagsCount":7,"totalCollectionsCount":639,"username":"william_li","avatarLarge":"https://user-gold-cdn.xitu.io/2017/9/10/b6f2ba4ff67d3b6af7842daa075b02dc","objectId":"5927f0e10ce46300575ec67b"},"author":"","screenshot":"","original":true,"hotIndex":33.0421,"content":"闭包是怎么定义的呢？当函数可以记住并访问所在的词法作用域时，就产生了闭包，即使函数在当前词法作用域之外执行。来看一个具体例子： 上面是一个简单的函数调用，以及在执行时的上下文环境，重点看执行时上下文环境，在创建foo函数时，会创建一个预先包含全局变量对象的作用域链，这个作用域链…","title":"JS进击之路：闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":427,"summaryInfo":"闭包这个词对很多前端开发人员来说既熟悉又陌生，熟悉是因为很多人都用过闭包，但是用的时候不知道闭包，陌生是因为并不理解闭包，接下来这篇文章将会从多方面介绍闭包 闭包是怎么定义的呢？当函数可以记住并访问所在的词法作用域时，就产生了闭包，即使函数在当前词法作用域之外执行。来看一个具体例子： 函数bar的...","isCollected":false},{"collectionCount":11,"userRankIndex":3.4190225827029,"buildTime":1571386641.4943,"commentsCount":4,"gfw":false,"objectId":"5d021c825188251346599311","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571651,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-18T08:17:21.478Z","rankIndex":0.000252426966895,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d01ee23e51d4556be5b3a3f","verifyCreatedAt":"2019-06-13T15:53:40.624Z","createdAt":"2019-06-13T15:53:40.624Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/YCBY4h4wPsj6rH3y2ADnf0MEUmDJHYaEDRhBpcTk8qA4y98frvA0Uic1H7oJk8ZPzPKk71Z4v0eSvI404RwSXsg/132"}},"collectedEntriesCount":10,"company":"","followersCount":2,"followeesCount":15,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571651,"viewedEntriesCount":434,"jobTitle":"","subscribedTagsCount":27,"totalCollectionsCount":14,"username":"Aventuro","avatarLarge":"https://mirror-gold-cdn.xitu.io/16ad54937837a63459a","objectId":"5ce2a218f265da1bae38cd5c"},"author":"","screenshot":"","original":true,"hotIndex":38.9204,"content":"前一段时间学习了一下阮一峰大佬写的python教程，感觉自己就是井底之蛙，函数式编程☹、返回函数☹、装饰器☹、偏函数☹，这些都是些什么东西？不过，在看过这些之后，有一种感觉就是，部分知识和javascript中的闭包非常相似（也可以说思想一模一样），通过python与JS，认认…","title":"闭包——我知道你的名字，但我却不了解你","lastCommentTime":"2019-06-16T21:02:54.949Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":469,"summaryInfo":"前一段时间学习了一下阮一峰大佬写的python教程，感觉自己就是井底之蛙，函数式编程☹、返回函数☹、装饰器☹、偏函数☹，这些都是些什么东西？不过，在看过这些之后，有一种感觉就是，部分知识和javascript中的闭包非常相似（也可以说思想一模一样），通过python与JS，认认真真的去理解一下Ja...","isCollected":false},{"collectionCount":11,"userRankIndex":5.8138417968494,"buildTime":1568815278.4463,"commentsCount":2,"gfw":false,"objectId":"5d6cbe586fb9a06af13d837f","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1568851513,"verifyStatus":true,"tags":[{"ngxCachedTime":1568851407,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"updatedAt":"2019-09-18T14:01:18.429Z","rankIndex":0.0061803193982486,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d5c0010e51d456201486e4c","verifyCreatedAt":"2019-09-02T15:48:08.789Z","createdAt":"2019-09-02T15:48:08.789Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIxBNARhGNMgaI5yHFtGTUrfM4RibM242Jw45NpRuibUWQSzgthhdiajPahPE6oVjQ8fjs1djrEygzA/132"},"github":{"username":"ifgyong","avatarLarge":"https://avatars1.githubusercontent.com/u/16182908?v=4","uid":"16182908"}},"collectedEntriesCount":22,"company":"公众号『fgyong的开发日记』","followersCount":487,"followeesCount":15,"role":"guest","postedPostsCount":18,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":17,"ngxCachedTime":1568851447,"ngxCached":true,"viewedEntriesCount":613,"jobTitle":"程序猿","subscribedTagsCount":12,"totalCollectionsCount":111,"username":"fgyong","avatarLarge":"https://lc-gold-cdn.xitu.io/4J9CB0S1Ho6SpCzXgHg0RAA","objectId":"5693a77b60b2c2974cdd7f7f"},"author":"","screenshot":"","original":true,"hotIndex":40.5503,"content":"这种方式在oc中可以正常使用，但是在Swift中不行。 内存大小不变，变的是最后一位由0x0变成了0x1。 其实枚举就是的思路和联合体比较相似，枚举占用的空间是其中最大元素的空间+1，就是这个枚举占用的空间。 利用最后一位来分辩是哪个类型，不存在switch .case是调用函…","title":"Swift汇编看枚举、类、闭包","lastCommentTime":"2019-09-04T15:58:07.226Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851427},"viewsCount":542,"summaryInfo":"那么再c中，占用空间是位[就是8字节]，那么我们在Swift中是怎么样的呢？ 简单枚举，当默认为数字，占用空间为字节，关联枚举则占用的比较多，我们主要从内存上分析一下为什么占用这么多 按照我们正常猜想，个int类型的，应该是要占字节，为什么系统是占用了个字节，另外一个字节存储了什么呢？ 这种方式在...","isCollected":false},{"collectionCount":10,"userRankIndex":1.7095112913515,"buildTime":1572484902.8724,"commentsCount":0,"gfw":false,"objectId":"5d999b3fe51d45780504970c","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571084,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571048,"ngxCached":true,"title":"函数式编程","id":"584628f161ff4b006c3c147f"}],"updatedAt":"2019-10-31T01:21:42.856Z","rankIndex":0.0022300707050953,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d9439a86fb9a04e065d62f6","verifyCreatedAt":"2019-10-06T16:18:48.383Z","createdAt":"2019-10-06T16:18:48.383Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLXdNGXceBOdsY3TedP216XJY7xgygh9wclxxfsQujXh5Ats9unY889CA8bFIymj4ic9fjeZRz2HFw/132"}},"collectedEntriesCount":21,"company":"","followersCount":6,"followeesCount":30,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571084,"viewedEntriesCount":286,"jobTitle":"","subscribedTagsCount":63,"totalCollectionsCount":13,"username":"钱多多kv_img","avatarLarge":"https://mirror-gold-cdn.xitu.io/16b9c0ef09a7bdff962","objectId":"5d1584d76fb9a07ef44419ad"},"author":"","screenshot":"","original":true,"hotIndex":29.9292,"content":"引言：以下言论只是我个人的看法一些梳理与记录，如果有任何理解和认知上您认为有问题，非常欢迎在评论区与我一起讨论，指出不足之处。 当满足以上两点我们就称这个函数为【纯函数（Pure Function）】。 换言之，如果使用一个函数时候，不使用他的返回值但是确有意义或作用的话，说明…","title":"函数式编程之路 - （纯函数，闭包，高阶函数，柯里化，编程规范）","lastCommentTime":"2019-10-06T16:01:01.153Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571007},"viewsCount":381,"summaryInfo":"引言：以下言论只是我个人的看法一些梳理与记录，如果有任何理解和认知上您认为有问题，非常欢迎在评论区与我一起讨论，指出不足之处。 当满足以上两点我们就称这个函数为【纯函数（Pure Function）】。换言之，如果使用一个函数时候，不使用他的返回值但是确有意义或作用的话，说明这个函数是【非纯函数】...","isCollected":false},{"collectionCount":10,"commentsCount":0,"gfw":false,"entryView":"5815bd4c8ac247004fb8342d","subscribersCount":0,"ngxCachedTime":1568851514,"updatedAt":"2019-09-03T07:03:25.146Z","tags":[{"ngxCachedTime":1568851407,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"objectId":"581587250ce46300584953d7","rankIndex":0.0000080206084480157,"hot":false,"autoPass":false,"originalUrl":"https://kemchenj.github.io/2016/10/28/2016-10-27-1/","buildTime":1567494205.1643,"createdAt":"2016-10-30T05:37:41.416Z","user":{"community":{"weibo":{"avatar_url":"http://tva2.sinaimg.cn/crop.0.0.180.180.180/7339d609jw1e8qgp5bmzyj2050050aa8.jpg","uid":"1933170185","nickname":"kemchenj"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/qsxkMxh6rhQOBB9E9wCePXsCUNxDWvDVTokX7tKhFtz43YmbpeRB2deM32G4EzweERNQuXjk5XCIvXxnebr0Cg/132"},"github":{"username":"kemchenj","avatarLarge":"https://avatars0.githubusercontent.com/u/11192474?v=4","uid":"11192474"}},"collectedEntriesCount":104,"company":"格隆汇","followersCount":2613,"followeesCount":60,"role":"editor","postedPostsCount":19,"level":2,"isAuthor":true,"postedEntriesCount":18,"totalCommentsCount":61,"ngxCachedTime":1568851509,"ngxCached":true,"viewedEntriesCount":2689,"jobTitle":"iOS 初级工程师","subscribedTagsCount":22,"totalCollectionsCount":860,"username":"四娘","avatarLarge":"https://lc-gold-cdn.xitu.io/ec05f9e1d250ae7e7651.png?imageView/2/w/100/h/100/q/80/format/png","objectId":"5753b1355bbb500064405251"},"author":"","screenshot":"","original":false,"hotIndex":31.5416,"content":"闭包慢慢地成为了每一门现代语言的标配, 在 Swift 里的使用虽然很简单易懂, 但也有很多细节需要注意, 例如 escaping 和 non-escaping\n\n我在实际项目中因为有一些 block 需要写 `self` 有一些则不需要, 而且不知道什么时候该使用 `[unowned self]` 等等去避免循环引用, 看了这篇文章之后理解了很多, 顺手就给翻译了出来, 文章里实现 Optional 和 Non-escaping 的闭包的思路很赞","title":"Optional 与 Non-Escaping 的闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851427},"viewsCount":427,"summaryInfo":"Swift 里如何区分 escaping (逃逸)和 non-escaping (非逃逸)的闭包呢? escaping closure(逃逸闭包)作为函数参数在函数 return 之后(可能会)被调用. 也就是说这个 escaping 闭包被传递到了外部, 逃出当前的函数的作用域. 逃逸闭包经常会...","isCollected":false},{"collectionCount":9,"commentsCount":0,"gfw":false,"objectId":"59e0164bf265da431b6c3726","checkStatus":true,"buildTime":1572350039.3201,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571570,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571497,"ngxCached":true,"title":"Groovy","id":"58c24f9a0ce46300546183cd"},{"ngxCachedTime":1572571455,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"},{"ngxCachedTime":1572571535,"ngxCached":true,"title":"Android","id":"5597838ee4b08a686ce2319d"},{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"autoPass":false,"rankIndex":0.0000097919506394362,"hot":false,"updatedAt":"2019-10-29T11:53:59.304Z","originalUrl":"http://www.sunnyang.com/522.html","verifyCreatedAt":"2017-10-13T01:26:35.411Z","createdAt":"2017-10-13T01:26:35.411Z","user":{"community":{"weibo":{"selfDescription":"不知道写点啥，干脆就不写了吧","uid":"2531171211","blogAddress":"http://weibo.com/u/2531171211","username":"骑摩托马斯","avatarLarge":"https://tva2.sinaimg.cn/crop.0.0.512.512.180/96de9b8bjw8f9qtpxo0ysj20e80e80t8.jpg?KID=imgbed,tva&Expires=1572227517&ssig=1JHHVyFyvq"},"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJbvksMyvYuaD4wKnHmg8zRPVQNqWtciaZz4Z4lmHJUEXiaNiaNpyT9Hrrnun2XdvvPTAia5XWWSibZr9A/0"},"github":{"uid":"1124507","nickname":"Thomas Zhang","username":"zhgqthomas","avatar_url":"https://avatars1.githubusercontent.com/u/1124507?v=3","bio":null,"html_url":"https://github.com/zhgqthomas"}},"collectedEntriesCount":25,"company":"","followersCount":2331,"followeesCount":14,"role":"editor","postedPostsCount":24,"level":3,"isAuthor":true,"postedEntriesCount":16,"totalCommentsCount":140,"ngxCachedTime":1572571561,"ngxCached":true,"viewedEntriesCount":824,"jobTitle":"","subscribedTagsCount":8,"totalCollectionsCount":2606,"username":"骑摩托马斯","avatarLarge":"https://leancloud-gold-cdn.xitu.io/4aca6eae6cb95ca86c1d.jpeg","objectId":"587f03001b69e6005852fe89"},"author":"","screenshot":null,"original":false,"hotIndex":23.4807,"content":"上一篇文章Groovy入门之语法和变量定义重点记录的是Groovy的语法以及变量，这一篇文章继续学习Groovy的一些相关知识点。本文的重点是函数和闭包、类和对象，知识点涉及到与Java一样的地方在文章中就不做介绍了，重点将一些与Java不同的地方。另外如果有人接触过JavaS…","title":"Groovy进阶之函数、闭包和类","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"android","id":"5562b410e4b00c57d9b94a92","name":"Android","ngxCachedTime":1572571555},"viewsCount":283,"summaryInfo":"上一篇文章Groovy入门之语法和变量定义重点记录的是Groovy的语法以及变量，这一篇文章继续学习Groovy的一些相关知识点。本文的重点是函数和闭包、类和对象，知识点涉及到与Java一样的地方在文章中就不做介绍了，重点将一些与Java不同的地方。另外如果有人接触过JavaScript，相信多数...","isCollected":false},{"collectionCount":9,"isEvent":false,"commentsCount":5,"gfw":false,"buildTime":1572268497.1887,"checkStatus":true,"objectId":"5ca1e0a1e51d4563773f427d","entryView":"","subscribersCount":0,"ngxCachedTime":1572571803,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-28T13:14:57.171Z","rankIndex":0.00010388971274917,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ca1d5176fb9a05e3f51ec93","verifyCreatedAt":"2019-04-01T09:58:31.046Z","createdAt":"2019-04-01T09:58:31.046Z","user":{"community":{"github":{"username":"EscapeMaster","avatarLarge":"https://avatars2.githubusercontent.com/u/20112304?v=4","uid":"20112304"}},"collectedEntriesCount":0,"company":"MT","followersCount":4,"followeesCount":16,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571803,"viewedEntriesCount":208,"jobTitle":"FE","subscribedTagsCount":14,"totalCollectionsCount":9,"username":"Escape_Master","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e09543e34b3d7854","objectId":"5bc5dd28f265da0a857aa550"},"author":"","screenshot":"","original":true,"hotIndex":37.2195,"content":"匿名函数在栈追踪中不会显示出有意义的函数名,使得调试很困难。 如果没有函数名,当函数需要引用自身时只能使用已经过期的 arguments.callee 引用,比如在递归中。另一个函数需要引用自身的例子,是在事件触发后事件监听器需要解绑自身。 匿名函数省略了对于代码可读性/可理解…","title":"作用域、作用域链及闭包(一)","lastCommentTime":"2019-04-02T17:25:13.463Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":460,"summaryInfo":"这个代码片段经过提升后，实际上会被理解为以下形式:","isCollected":false},{"collectionCount":8,"commentsCount":0,"gfw":false,"objectId":"5a1e54ae518825293b50122d","checkStatus":true,"buildTime":1570849173.153,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571398,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571371,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"autoPass":false,"rankIndex":0.0000082829057477233,"hot":false,"updatedAt":"2019-10-12T02:59:32.839Z","originalUrl":"http://www.cnblogs.com/linxiyue/p/7911916.html","verifyCreatedAt":"2017-11-29T06:33:18.690Z","createdAt":"2017-11-29T06:33:18.690Z","user":{"community":null,"collectedEntriesCount":1610,"company":"","followersCount":5207,"followeesCount":43,"role":"guest","postedPostsCount":8,"level":0,"isAuthor":false,"postedEntriesCount":467,"totalCommentsCount":210,"ngxCachedTime":1572571318,"ngxCached":true,"viewedEntriesCount":2474,"jobTitle":"","subscribedTagsCount":5,"totalCollectionsCount":12501,"username":"红烧不是清蒸","avatarLarge":"https://user-gold-cdn.xitu.io/2017/8/10/4fe5ee3a310941e5020ade1a62efa5c1","objectId":"59845265f265da3e13575bb2"},"author":"","screenshot":null,"original":false,"hotIndex":17.341,"content":"命名空间是从名称到对象的映射，Python中主要是通过字典实现的，主要有以下几个命名空间： 内置命名空间，包含一些内置函数和内置异常的名称，在Python解释器启动时创建，一直保存到解释器退出。","title":"Python函数的作用域规则和闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571339},"viewsCount":169,"summaryInfo":"命名空间是从名称到对象的映射，Python中主要是通过字典实现的，主要有以下几个命名空间： python解析变量名的时候， 首先搜索局部命名空间。如果没有找到匹配的名称，它就会搜索全局命名空间。如果解释器在全局命名空间中也找不到匹配值，最终会检查内置命名空间。如果仍然找不到，就会引发NameErr...","isCollected":false},{"collectionCount":8,"autoPass":false,"commentsCount":7,"gfw":false,"buildTime":1572453505.3934,"checkStatus":true,"objectId":"5ad96cfaf265da0b8f6218a7","entryView":"","subscribersCount":0,"ngxCachedTime":1572484308,"verifyStatus":true,"tags":[{"ngxCachedTime":1572484189,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"},{"ngxCachedTime":1572484261,"ngxCached":true,"title":"Objective-C","id":"5597a0b7e4b08a686ce57e18"},{"ngxCachedTime":1572484261,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"isEvent":false,"rankIndex":0.000048227461045507,"hot":false,"updatedAt":"2019-10-30T16:38:25.375Z","originalUrl":"https://juejin.im/post/5ad96c88f265da0b851c67ae","verifyCreatedAt":"2018-04-23T02:14:24.488Z","createdAt":"2018-04-23T02:14:24.488Z","user":{"community":null,"collectedEntriesCount":0,"company":"字节跳动","followersCount":930,"followeesCount":0,"role":"guest","postedPostsCount":26,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":38,"ngxCachedTime":1572484300,"ngxCached":true,"viewedEntriesCount":202,"jobTitle":"iOS 开发工程师","subscribedTagsCount":1,"totalCollectionsCount":124,"username":"小橘爷","avatarLarge":"https://user-gold-cdn.xitu.io/2017/11/1/e3ca7555220e76688ce8f7a62d7d53ad","objectId":"59f95dff6fb9a0451968e52f"},"author":"","screenshot":"","original":false,"hotIndex":74.2683,"content":"Objective-C 作为一门资历很老的语言，添加了 Block 这个特性后深受广大 iOS 开发者的喜爱。在 Swift 中，对应的概念叫做 Closure，即闭包。虽然更换了名字，但是概念和用法还是相似的，就算是副作用也一样，有可能导致循环引用。 下面我们用一个例子看一下…","title":"如何在 Swift 中优雅的处理闭包导致的循环引用","lastCommentTime":"2018-05-07T10:09:04.905Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484205},"viewsCount":1178,"summaryInfo":"Objective-C 作为一门资历很老的语言，添加了 Block 这个特性后深受广大 iOS 开发者的喜爱。在 Swift 中，对应的概念叫做 Closure，即闭包。虽然更换了名字，但是概念和用法还是相似的，就算是副作用也一样，有可能导致循环引用。 下面我们用一个例子看一下，首先我们需要第一个...","isCollected":false},{"collectionCount":8,"userRankIndex":2.5988961847283,"buildTime":1572556225.4615,"commentsCount":0,"gfw":false,"objectId":"5d879deae51d4561a60d9ea2","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571194,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571099,"ngxCached":true,"title":"Go","id":"555e9a80e4b00c57d9955de2"}],"updatedAt":"2019-10-31T21:10:25.444Z","rankIndex":0.0015038989520365,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d879da5e51d4561cc25f10d","verifyCreatedAt":"2019-09-23T02:35:53.275Z","createdAt":"2019-09-23T02:35:53.275Z","user":{"community":{"github":{"username":"snowdreams1006","avatarLarge":"https://avatars3.githubusercontent.com/u/23238267?v=4","uid":"23238267"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRvDVTzDL6VGYSXbtMbhxCuL7fZalDWiagnlv32PNYmUoTtb5wUIjPQwplzN0vmxxoCYmk2RuFUwQ/132"}},"collectedEntriesCount":106,"company":"雪之梦技术驿站","followersCount":53,"followeesCount":51,"role":"guest","postedPostsCount":84,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":13,"ngxCachedTime":1572571102,"ngxCached":true,"viewedEntriesCount":496,"jobTitle":"微信公众号","subscribedTagsCount":71,"totalCollectionsCount":181,"username":"雪之梦技术驿站","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/21/1699edf2b84a6cd7?w=750&h=726&f=png&s=218793","objectId":"582d5cb667f356006331e586"},"author":"","screenshot":"","original":true,"hotIndex":40.1619,"content":"开门见山,直接给出斐波那契数列生成器,接下来的文章慢慢深挖背后隐藏的奥秘,一个例子讲清楚什么是闭包. 小小的斐波那契数列生成器背后蕴藏着丰富的 Go 语言特性,该示例也是官方示例之一. 这也是 Go 语言特有的交换变量方式,a, b = b, a 语义简单明确并不用引入额外的临…","title":"go 学习笔记之仅仅需要一个示例就能讲清楚什么闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571099},"viewsCount":634,"summaryInfo":"本篇文章是 语言学习笔记之函数式编程系列文章的第二篇,上一篇介绍了函数基础,这一篇文章重点介绍函数的重要应用之一: 闭包 空谈误国,实干兴邦,以具体代码示例为基础讲解什么是闭包以及为什么需要闭包等问题,下面我们沿用上篇文章的示例代码开始本文的学习吧! 开门见山,直接给出斐波那契数列生成器,接下来的...","isCollected":false},{"collectionCount":7,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1568851514,"updatedAt":"2019-09-17T09:29:08.535Z","tags":[{"ngxCachedTime":1568851407,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"objectId":"59910dc76fb9a03c60240d3b","rankIndex":0.000011241306534687,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/599109ee5188257d4c777a73","buildTime":1568712548.5511,"createdAt":"2017-08-14T02:41:11.938Z","user":{"community":{"github":{"username":"1000copy","avatarLarge":"https://avatars2.githubusercontent.com/u/4485958?v=4","uid":"4485958"}},"collectedEntriesCount":139,"company":"自由工作者","followersCount":4421,"followeesCount":61,"role":"editor","postedPostsCount":99,"level":3,"isAuthor":true,"postedEntriesCount":23,"totalCommentsCount":101,"ngxCachedTime":1568851409,"ngxCached":true,"viewedEntriesCount":1339,"jobTitle":"程序员","subscribedTagsCount":6,"totalCollectionsCount":2472,"username":"RecoReco","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e083e16da9afe05c","objectId":"58774201570c35006207d274"},"author":"","screenshot":"","original":true,"hotIndex":27.9287,"content":"如下为官方文档的定义，但是建议你忽略它，搞懂了自动闭包再来看才容易懂：） 自动闭包是一种自动创建的闭包，用于包装传递给函数作为参数的表达式。这种闭包不接受任何参数，当它被调 用的时候，会返回被包装在其中的表达式的值。这种便利语法让你能够省略闭包的花括号，用一个普通的表达式 来代替…","title":"Swift iOS : 自动闭包autoclosure","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851427},"viewsCount":409,"summaryInfo":"如下为官方文档的定义，但是建议你忽略它，搞懂了自动闭包再来看才容易懂：） 结果会打印42出来。可以使用创建一个闭包，并把它传递到foo函数，foo函数会打印此闭包的返回结果。当然，因为返回值明确，可以省略return。让代码更加简洁。 你也常常会使用尾随闭包，把最后一行写成： 然而，使用自动闭包，...","isCollected":false},{"collectionCount":7,"userRankIndex":6.0354547724791,"buildTime":1572436401.426,"commentsCount":3,"gfw":false,"objectId":"5d1b7432f265da1b855c710b","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571652,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T11:53:21.409Z","rankIndex":0.00023028397501397,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d1b741ef265da1baf7d0625","verifyCreatedAt":"2019-07-02T15:33:07.797Z","createdAt":"2019-07-02T15:33:07.797Z","user":{"community":{"weibo":{"selfDescription":"一个连幼稚园都没上过的人👻尴尬","uid":"2708035565","blogAddress":"http://weibo.com/u/2708035565","username":"米淇淋2","avatarLarge":"http://tvax4.sinaimg.cn/crop.0.0.960.960.180/a16957edly8fo29jw1hfkj20qo0qoq54.jpg"},"github":{"username":"miqilin21","avatarLarge":"https://avatars2.githubusercontent.com/u/44596995?v=4","uid":"44596995"}},"collectedEntriesCount":15,"company":"杭州","followersCount":51,"followeesCount":8,"role":"guest","postedPostsCount":29,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":13,"ngxCachedTime":1572571652,"viewedEntriesCount":451,"jobTitle":"半吊子前端","subscribedTagsCount":9,"totalCollectionsCount":258,"username":"米淇淋","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/23/16a47ebf1f8b90e7?w=640&h=640&f=jpeg&s=52125","objectId":"5cbe712ae51d456e88333976"},"author":"","screenshot":"","original":true,"hotIndex":29.5072,"content":"相信很多初学者在学习JavaScript 的时候，一直对闭包(closure) 有所疑惑。因为从字面上来看，完全看不出它所代表的东西。那么今天，我想通过这篇文章，尽量用简单易懂的话来与各位介绍「闭包」到底是什么。 在具体介绍闭包之前，为了更好的理解本文要介绍的内容，建议先去阅读…","title":"JavaScript系列之闭包(Closure)","lastCommentTime":"2019-07-03T21:53:13.066Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":381,"summaryInfo":"相信很多初学者在学习JavaScript 的时候，一直对闭包(closure) 有所疑惑。因为从字面上来看，完全看不出它所代表的东西。那么今天，我想通过这篇文章，尽量用简单易懂的话来与各位介绍「闭包」到底是什么。 在具体介绍闭包之前，为了更好的理解本文要介绍的内容，建议先去阅读前面的文章《Java...","isCollected":false},{"collectionCount":7,"userRankIndex":0.90670421737462,"buildTime":1572570146.308,"commentsCount":2,"gfw":false,"objectId":"5d8c859ef265da5ba6749edc","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-11-01T01:02:26.292Z","rankIndex":0.00093779124599597,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d8aceba518825094933fb84","verifyCreatedAt":"2019-09-26T15:48:42.680Z","createdAt":"2019-09-26T15:48:42.680Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGiar1Da2JqnD6a66ibIyQuoJEZbWRUpYiagYPuS0M0JjtXTtLUMuaHRojT3EUfwmVFsE7nZQicjrKLA/132"}},"collectedEntriesCount":12,"company":"","followersCount":12,"followeesCount":13,"role":"guest","postedPostsCount":6,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":9,"ngxCachedTime":1572571653,"viewedEntriesCount":628,"jobTitle":"","subscribedTagsCount":22,"totalCollectionsCount":60,"username":"程序媛兔子","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/7/166ed41e95fa8868?w=300&h=300&f=jpeg&s=40259","objectId":"5b7f70506fb9a01a1c571af0"},"author":"","screenshot":"","original":true,"hotIndex":22.3426,"content":"本质上是一套规则，用于确定在何处以及如何查找变量（标识符）。 作用域是可以嵌套的，引擎从当前作用域开始查找，如果找不到，就会向上一级继续查找，当抵达到最外层的全局作用域查找后，无论找到还是没找到，都会停止。 严格模式下：抛出 Reference 异常。 非严格模式下，自动隐式地…","title":"Javascript进阶1--作用域和闭包","lastCommentTime":"2019-09-28T14:49:45.767Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":261,"summaryInfo":"从今天开始，我打算将我学到的js知识进行分享，欢迎大家的讨论和补充，有任何不足之处，尽情地提出来吧～😁 本质上是一套规则，用于确定在何处以及如何查找变量（标识符）。 作用域是可以嵌套的，引擎从当前作用域开始查找，如果找不到，就会向上一级继续查找，当抵达到最外层的全局作用域查找后，无论找到还是没找到...","isCollected":false},{"collectionCount":7,"isEvent":false,"commentsCount":4,"gfw":false,"buildTime":1568599571.9832,"checkStatus":true,"objectId":"5c8071bc6fb9a049df24d7ad","entryView":"","subscribersCount":0,"ngxCachedTime":1572571648,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-09-16T02:06:11.967Z","rankIndex":0.00017929781089342,"hot":false,"autoPass":false,"originalUrl":"https://medium.com/javascript-in-plain-english/understanding-closures-in-javascript-in-3-minutes-557ebb8a215b","verifyCreatedAt":"2019-03-07T03:48:36.119Z","createdAt":"2019-03-07T03:48:36.119Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcwBWJSicegvrnYfpNOpcM919gUTBx8hmibcROfn43JTgajDQnOwXI9wf3YmwObekxHvTfHCLVrvFw/132"}},"collectedEntriesCount":11,"company":"","followersCount":265,"followeesCount":24,"role":"guest","postedPostsCount":10,"level":3,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":59,"ngxCachedTime":1572571631,"ngxCached":true,"viewedEntriesCount":603,"jobTitle":"前端","subscribedTagsCount":18,"totalCollectionsCount":522,"username":"Ioodu","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/27/169bcd58f3d57275?w=1122&h=1125&f=png&s=1038034","objectId":"5b3ecbe96fb9a04fb309ddba"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/3/7/16955bc4558b0f11?w=1052&h=1052&f=png&s=23459","original":false,"hotIndex":56.5104,"content":"JavaScript closure is one of those topics that can be hard to wrap your head around, simply because of how it’s often explained. Most tutori","title":"3分钟了解JavaScript闭包","lastCommentTime":"2019-03-08T13:42:52.789Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":891,"summaryInfo":"","isCollected":false},{"collectionCount":7,"userRankIndex":0,"buildTime":1572492989.4457,"commentsCount":0,"gfw":false,"objectId":"5d50d378f265da03c926eb79","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T03:36:29.429Z","rankIndex":0.00025518426367626,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d50c6ef6fb9a06b1d21358d","verifyCreatedAt":"2019-08-13T10:23:08.230Z","createdAt":"2019-08-13T10:23:08.230Z","user":{"community":{"github":{"username":"ladny","avatarLarge":"https://avatars1.githubusercontent.com/u/10241942?v=4","uid":"10241942"}},"collectedEntriesCount":11,"company":"","followersCount":8,"followeesCount":5,"role":"guest","postedPostsCount":12,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571653,"viewedEntriesCount":109,"jobTitle":"前端开发工程师","subscribedTagsCount":20,"totalCollectionsCount":17,"username":"前端娃娃","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e084b73f19e1622e","objectId":"59157fe144d904006c4b0d6f"},"author":"","screenshot":"","original":true,"hotIndex":20.9712,"content":"1. 闭包应用场景之setTimeout 2. 闭包应用场景之回调 我们定义行为，然后把它关联到某个用户事件上（点击或者按键）。我们的代码通常会作为一个回调（事件触发时调用的函数）绑定到事件上 3. 闭包应用场景之封装变量 共享的环境创建在一个匿名函数体内，立即执行。 环境中有…","title":"javascript之闭包七（闭包的应用场景）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":271,"summaryInfo":"","isCollected":false},{"collectionCount":7,"userRankIndex":6.50871622944,"buildTime":1572327604.2533,"commentsCount":2,"gfw":false,"objectId":"5d7659f76fb9a06ada54d907","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571654,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-29T05:40:04.237Z","rankIndex":0.00062356500251386,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d7658f36fb9a06b0472262e","verifyCreatedAt":"2019-09-09T15:26:22.322Z","createdAt":"2019-09-09T15:26:22.322Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGZicQDuRPCCU0q5FqIhcRf6KWlHqnE7PNccwJGD3WC43CXKjrxPIpibIMsOEjcjBOibliauGCjKW3rQ/132"}},"collectedEntriesCount":197,"company":"中国银行","followersCount":14,"followeesCount":52,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":13,"ngxCachedTime":1572571654,"viewedEntriesCount":1229,"jobTitle":"大专","subscribedTagsCount":20,"totalCollectionsCount":18,"username":"new个对象","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/8/16c6eed640db17b6?w=819&h=819&f=jpeg&s=145041","objectId":"5cadbec75188251b2b20abdd"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/9/9/16d164f5ade34da8?w=197&h=255&f=jpeg&s=8109","original":true,"hotIndex":19.1287,"content":"外层函数嵌套内层函数，作用域是包含关系. 如有不适，请勿喷，胆小。","title":"从入门到放弃第二天：作用域与闭包","lastCommentTime":"2019-09-23T17:25:00.983Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":198,"summaryInfo":"嘿嘿嘿 不知道也没关系的，我后面在解答这个问题； JAVASCRIPT中函数运行在它们被定义的作用域里，而不是它们被执行的作用域里; 我们让闭包的值，外部定义个变量，我们把变量定义为 如发现：内容有问题，或者作者写错内容，分析错了； 请大佬留言本24小时改善，打造一个良好的学习环境 谢谢看完的各位...","isCollected":false},{"collectionCount":6,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1571316952.1654,"checkStatus":true,"objectId":"5b7573fcf265da27e268cd6e","entryView":"","subscribersCount":0,"ngxCachedTime":1572571717,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571709,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"},{"ngxCachedTime":1572571701,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"}],"isEvent":false,"rankIndex":0.000010586307152704,"hot":false,"updatedAt":"2019-10-17T12:55:52.149Z","originalUrl":"https://juejin.im/post/5b72ee6ae51d4566676375a5","verifyCreatedAt":"2018-08-17T02:28:10.280Z","createdAt":"2018-08-17T02:28:10.280Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKicYd8qSMx5hVExXoNB62qaIFUQJib2YoI9uOoNqicOmicDGoHtY0hiaMMOJ1Cwiaich22OibBu1yba28dew/132"}},"collectedEntriesCount":13,"company":"清华大学计算机科学与技术系","followersCount":85,"followeesCount":2,"role":"guest","postedPostsCount":24,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":15,"ngxCachedTime":1572571717,"viewedEntriesCount":59,"jobTitle":"数据挖掘与数据分析","subscribedTagsCount":2,"totalCollectionsCount":178,"username":"酱油哥在掘金","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e090ef3613f6621b","objectId":"5b1fc0456fb9a01e76291a2d"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/8/16/16542ccd6fdc9665?w=711&h=561&f=jpeg&s=120623","original":true,"hotIndex":10.9624,"content":"前情回顾，上一节我们介绍了变量的LEGB索引机制：对一个变量，首先在本地（函数内）查找；之后查找嵌套函数的本地作用域，然后再是查找当前的全局作用域。 到目前为止，我们还有一个作用域没有介绍，就是嵌套作用域，即E，他是嵌套函数的本地作用域。 python有一个很有意思的地方，就是…","title":"给妹子讲python-S01E19解析Python内嵌作用域与函数闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571701},"viewsCount":96,"summaryInfo":"前情回顾，上一节我们介绍了变量的LEGB索引机制：对一个变量，首先在本地（函数内）查找；之后查找嵌套函数的本地作用域，然后再是查找当前的全局作用域。 到目前为止，我们还有一个作用域没有介绍，就是嵌套作用域，即E，他是嵌套函数的本地作用域。 python有一个很有意思的地方，就是def函数可以嵌套在...","isCollected":false},{"collectionCount":6,"isEvent":false,"commentsCount":2,"gfw":false,"buildTime":1571100651.5043,"checkStatus":true,"objectId":"5cadec16f265da03867e3936","entryView":"","subscribersCount":0,"ngxCachedTime":1572571654,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T00:50:51.487Z","rankIndex":0.000060676224098121,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cab5e305188251b12247dd2","verifyCreatedAt":"2019-04-11T03:20:04.950Z","createdAt":"2019-04-11T03:20:04.950Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/6vKuicKOEII3YDTU6w80C9OPCNfdEtmoTQfib4M89DIibVqAxGuibsfJDEKFXtu9xEtNO7z3fCPmRECJsRezsOAj5A/132"}},"collectedEntriesCount":18,"company":"","followersCount":104,"followeesCount":42,"role":"guest","postedPostsCount":34,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":21,"ngxCachedTime":1572571644,"ngxCached":true,"viewedEntriesCount":1852,"jobTitle":"web前端开发","subscribedTagsCount":42,"totalCollectionsCount":270,"username":"慕斯不想说话","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0957c373548eda1","objectId":"5bd074165188251ce71d8e2c"},"author":"","screenshot":"","original":true,"hotIndex":18.234,"content":"在工作中在很多情况下都会用到闭包，但是当别人问起闭包到底是什么时，总是觉得说不出个所以然来，所以这次准备把闭包这个知识点好好的梳理一遍，以加深对闭包的理解。而且很多时候我们也容易将匿名函数跟闭包弄混，所以在此区分一下。写得不对的地方欢迎各位大神指出。 结果分析：上述代码是一个闭…","title":"对javascript闭包的理解","lastCommentTime":"2019-07-23T19:48:49.199Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":195,"summaryInfo":"  在工作中在很多情况下都会用到闭包，但是当别人问起闭包到底是什么时，总是觉得说不出个所以然来，所以这次准备把闭包这个知识点好好的梳理一遍，以加深对闭包的理解。而且很多时候我们也容易将匿名函数跟闭包弄混，所以在此区分一下。写得不对的地方欢迎各位大神指出。   结果分析：上述代码是一个闭包。我们在t...","isCollected":false},{"collectionCount":6,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1571414544.0322,"checkStatus":true,"objectId":"5be6ce93f265da613d7b95d1","entryView":"","subscribersCount":0,"ngxCachedTime":1572571464,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571405,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571414,"ngxCached":true,"title":"PHP","id":"555e9a84e4b00c57d9955e1b"},{"ngxCachedTime":1572571403,"ngxCached":true,"title":"数据库","id":"563b142860b20bd506b3af5c"}],"isEvent":false,"rankIndex":0.000020563609453198,"hot":false,"updatedAt":"2019-10-18T16:02:24.014Z","originalUrl":"https://juejin.im/post/5be68a7f6fb9a049e412361b","verifyCreatedAt":"2018-11-14T08:15:30.029Z","createdAt":"2018-11-14T08:15:30.029Z","user":{"community":{"github":{"username":"klusfq","avatarLarge":"https://avatars0.githubusercontent.com/u/28698687?v=4","uid":"28698687"}},"collectedEntriesCount":39,"company":"包子科技","followersCount":6,"followeesCount":64,"role":"guest","postedPostsCount":4,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":13,"ngxCachedTime":1572571464,"viewedEntriesCount":1242,"jobTitle":"后端开发","subscribedTagsCount":33,"totalCollectionsCount":18,"username":"符权","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08d450e55ee4a02","objectId":"5a56c8ef6fb9a01cab28290a"},"author":"","screenshot":"","original":true,"hotIndex":15.0486,"content":"一个框架中的中间件是必不可少的一部分。 以前对这方面是有点懵逼的，只知其然但不知其所以然，在网上看了一些大佬写的文章后，有点想法，希望对初学者有所帮助。 中间件就是给应用外面加一个 “结界” ，在进入应用之前，要经过结界；离开应用之后，也要经过它。 怎么感觉我越说越迷啊。。。。…","title":"稀里糊涂系列之闭包中间件","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571459},"viewsCount":179,"summaryInfo":"一个框架中的中间件是必不可少的一部分。 以前对这方面是有点懵逼的，只知其然但不知其所以然，在网上看了一些大佬写的文章后，有点想法，希望对初学者有所帮助。 中间件就是给应用外面加一个 “结界” ，在进入应用之前，要经过结界；离开应用之后，也要经过它。 怎么感觉我越说越迷啊。。。。。。 然后，我们试着...","isCollected":false},{"collectionCount":6,"userRankIndex":0,"buildTime":1572393633.8043,"commentsCount":0,"gfw":false,"objectId":"5cf25472f265da1bd3054182","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T00:00:33.785Z","rankIndex":0.000067067076267826,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cf25409f265da1b7638892e","verifyCreatedAt":"2019-06-01T12:27:37.653Z","createdAt":"2019-06-01T12:27:37.653Z","user":{"community":{"github":{"nickname":"null","uid":"12828275","expires_at":"1495158707737"}},"collectedEntriesCount":68,"company":"无","followersCount":84,"followeesCount":11,"role":"guest","postedPostsCount":25,"level":2,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":17,"ngxCachedTime":1572571653,"ngxCached":true,"viewedEntriesCount":1101,"jobTitle":"node后端工程师","subscribedTagsCount":16,"totalCollectionsCount":182,"username":"studyCoding","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/31/16b0e727f88a2e17?w=180&h=180&f=png&s=72018","objectId":"5837cab2a22b9d006a74d7da"},"author":"","screenshot":"","original":true,"hotIndex":14.5623,"content":"在计算机科学中，闭包(也称词法闭包或函数闭包)是指一个函数或函数的引用，与一个引用环境绑定在一起，这个引用环境是一个存储该函数每个非局部变量(也叫自由变量)的表。 闭包是指在 JavaScript 中，内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返…","title":"javascript中的闭包这一篇就够了","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":153,"summaryInfo":"两段代码，在第二段代码中，函数A内的匿名函数可以访问到函数A中的局部变量这就是闭包的基本使用。 前端原始点击事件操作也用到了闭包来访问外部的局部变量。 在ajax请求的方法中也用到了闭包，访问外部的局部变量。 上面的这段代码，刚看了代码一定会以为陆续打印出1，2，3，实际输出的是3，3，3，出现这...","isCollected":false},{"collectionCount":5,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1570669765,"updatedAt":"2019-10-08T12:02:03.074Z","tags":[{"ngxCachedTime":1570669646,"ngxCached":true,"title":"Kotlin","id":"56c40b1d2e958a0059a1b719"}],"objectId":"59817a5351882537ab130779","rankIndex":0.0000044606436416644,"hot":false,"autoPass":false,"originalUrl":"https://mp.weixin.qq.com/s?__biz=MzI1MTE2NTE1Ng==&mid=2649516654&idx=2&sn=2d0ffc143e6390a341a254bb60b235a3&chksm=f1efeae5c69863f30b953eada2758b5232c448fbe0f886fe63f208859e9a68c4885258ca099b#rd","buildTime":1570536123.0911,"createdAt":"2017-08-02T07:08:03.302Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/AYDYxH1WHptBI1q7zjUWB7DdmJr0MjfbpsxeibkJgxLHIEhpcePg3FY3Qkd4neUJ4FbHIJZBibtht6QoLeRGDK2Q/132"}},"collectedEntriesCount":4,"company":"沪江","followersCount":3717,"followeesCount":1,"role":"guest","postedPostsCount":6,"level":2,"isAuthor":true,"postedEntriesCount":91,"totalCommentsCount":49,"ngxCachedTime":1570669676,"ngxCached":true,"viewedEntriesCount":81,"jobTitle":"开发","subscribedTagsCount":13,"totalCollectionsCount":1582,"username":"沪江技术学院","avatarLarge":"https://leancloud-gold-cdn.xitu.io/c242367df36df4c96d6e.png?imageView/2/w/100/h/100/q/80/format/png","objectId":"586e034a8d6d810058b5acb4"},"author":"","screenshot":null,"original":false,"hotIndex":11.806,"content":"函数与闭包的特性可以算是 Kotlin 语言最大的特性了。","title":"连载 | Kotlin Primer·第五章·函数与闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"android","id":"5562b410e4b00c57d9b94a92","name":"Android","ngxCachedTime":1570669741},"viewsCount":133,"summaryInfo":"函数与闭包的特性可以算是 Kotlin 语言最大的特性了。  即使 Kotlin 是一门面向对象的编程语言，它也是有函数的概念的——而不像 Java 那样，仅仅有「方法」。 函数使用关键字 fun 声明，如下代码创建了一个名为 say() 的函数，它接受一个 String 类型的参数，并返回一个 ...","isCollected":false},{"collectionCount":5,"commentsCount":0,"gfw":false,"objectId":"5a699bba518825732e2f80ad","checkStatus":true,"buildTime":1557144044.6795,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571483,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571428,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571387,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"}],"autoPass":true,"rankIndex":5.181605644235e-7,"hot":false,"updatedAt":"2019-05-06T12:00:44.664Z","originalUrl":"https://www.ibm.com/developerworks/cn/java/j-jtp04247.html?ca=drs-","verifyCreatedAt":"2018-01-25T10:51:51.258Z","createdAt":"2018-01-25T10:51:51.258Z","user":{"community":{"github":{"username":"since1986","avatarLarge":"https://avatars0.githubusercontent.com/u/6111900?v=4","uid":"6111900"},"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmopen/vi_32/99U6LEL8nPNLocoichNtvv2Xy6HU9XPBLDqbwAaWOWQvunKckrJaqGgEL60QywRiaibavJ6oEibflvpXzolyibsdBpg/0"}},"collectedEntriesCount":340,"company":"58学车","followersCount":1384,"followeesCount":71,"role":"guest","postedPostsCount":19,"level":2,"isAuthor":true,"postedEntriesCount":205,"totalCommentsCount":78,"ngxCachedTime":1572571449,"ngxCached":true,"viewedEntriesCount":4545,"jobTitle":"Java后端","subscribedTagsCount":32,"totalCollectionsCount":2007,"username":"since1986","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/10/166fbf06bed98692?w=256&h=256&f=png&s=139884","objectId":"58bfca6f128fe1006018723b"},"author":"","screenshot":null,"original":false,"hotIndex":9.594,"content":"Java 语言是否应增加闭包以及如何添加？\n          Brian Goetz 2007 年 5 月 28 日发布                                                 http://www.ibm.com/developerw…","title":"Java 语言是否应增加闭包以及如何添加？","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571479},"viewsCount":78,"summaryInfo":"在 系列最近的一篇文章中，我的朋友兼同事 Bruce Tate 以 Ruby 为例描述了闭包的强大功能。最近在安特卫普召开的 JavaPolis 会议上，听众人数最多的演讲是 Neal Gafter 的 “向 Java 语言增加闭包特性”。在 JavaPolis 的公告栏上，与会者可以写下和 Ja...","isCollected":false},{"collectionCount":5,"userRankIndex":10.892793328306,"buildTime":1572236257.534,"commentsCount":5,"gfw":false,"objectId":"5d80a615e51d4561c94b1075","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571652,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-28T04:17:37.516Z","rankIndex":0.0012741906185195,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d80854d5188253264365f11","verifyCreatedAt":"2019-09-17T10:08:47.492Z","createdAt":"2019-09-17T10:08:47.492Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/4vNosr1iajSjcoGpjXSqveoScCw23N1ZG968DFrWMYBPibg9Me5H8ic8pfc1xiaOAfW6sdSvbUd5icicF60GFBlXo2xQ/132"}},"collectedEntriesCount":11,"company":"深圳","followersCount":82,"followeesCount":25,"role":"guest","postedPostsCount":14,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":180,"ngxCachedTime":1572571652,"viewedEntriesCount":2438,"jobTitle":"前端","subscribedTagsCount":27,"totalCollectionsCount":719,"username":"LinDaiDai_霖呆呆","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08b1f5f40bc2b29","objectId":"59ffc33751882554b836ee63"},"author":"","screenshot":"","original":true,"hotIndex":28.1469,"content":"这是一篇记录工作上所遇到的关于内存泄漏问题及如何解决的文章。 技术栈: 框架:vue 组件库: ant design of vue 图表：g2. 项目需求: 在下图的看板中, 需要每20秒切换一次下面的两个小蓝点, 以达到切换并刷新图表的功能.前提是不用web socket等轮…","title":"记录一次定时器及闭包问题造成的内存泄漏","lastCommentTime":"2019-09-18T10:32:42.136Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":351,"summaryInfo":"这是一篇记录工作上所遇到的关于内存泄漏问题及如何解决的文章。 技术栈: 框架: 组件库: 图表：. 项目需求: 在下图的看板中, 需要每20秒切换一次下面的两个小蓝点, 以达到切换并刷新图表的功能.前提是不用等轮询工具. 下图的组件结构: 组件由 组件和 两个组件组合而成, 我通过给 组件(也就是...","isCollected":false},{"collectionCount":5,"userRankIndex":0,"buildTime":1571803589.901,"commentsCount":4,"gfw":false,"objectId":"5ce12c685188253c567343a9","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571652,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-23T04:06:29.881Z","rankIndex":0.00012692382733589,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ce12c285188254081056efa","verifyCreatedAt":"2019-05-19T14:26:43.272Z","createdAt":"2019-05-19T14:26:43.272Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/tgCYQrx1n8n2AEkRZD1VFriaI4Hl8fBgXWUK38FmFKY5sZ8WiaRdkXegib5XmopicjPGJTKSzvDfFjG24Yjqia8SjnQ/132"}},"collectedEntriesCount":36,"company":"同花顺","followersCount":4,"followeesCount":16,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571584,"ngxCached":true,"viewedEntriesCount":481,"jobTitle":"前端攻城狮","subscribedTagsCount":10,"totalCollectionsCount":7,"username":"青年Wat","avatarLarge":"https://user-gold-cdn.xitu.io/2019/10/13/16dc313321d53c20?w=845&h=845&f=jpeg&s=37374","objectId":"5903f8488d6d810058c8ec38"},"author":"","screenshot":"","original":true,"hotIndex":29.2478,"content":"js闭包很长一段时间里都是让我头疼的一个东西。工作中遇到类似这样的代码就很怕： 当然，实际的应用中我们一般不会有这么单纯的需求，也不会写这么刻意的代码，这里我们为了学习，强行挖个坑，自己再填坑。 不懂闭包前，我就觉得，这很优雅啊，按钮在集合btns中的索引+1正好就是满足需求的…","title":"JavaScript:从此不再怕闭包","lastCommentTime":"2019-05-20T19:38:29.324Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":385,"summaryInfo":"js闭包很长一段时间里都是让我头疼的一个东西。工作中遇到类似这样的代码就很怕： 页面内三个按钮，点击按钮控制台输出按钮在所有按钮中的序号，序号从1开始 当然，实际的应用中我们一般不会有这么单纯的需求，也不会写这么刻意的代码，这里我们为了学习，强行挖个坑，自己再填坑。 不懂闭包前，我就觉得，这很优雅...","isCollected":false},{"collectionCount":5,"userRankIndex":4.9693622959161,"buildTime":1572183192.6385,"commentsCount":6,"gfw":false,"objectId":"5d11ad57e51d4577407b1d6a","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-27T13:33:12.617Z","rankIndex":0.00018442136892566,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d11ad1fe51d45776147616f","verifyCreatedAt":"2019-06-25T05:25:32.267Z","createdAt":"2019-06-25T05:25:32.267Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJFmvxNwcxia7Z5gCzflYs7ib1yQicGXvcoCTa4icvJBmozVZQjY4b94U2libDIyLKTGfxHLempTR7yYPg/132"}},"collectedEntriesCount":10,"company":"在校","followersCount":32,"followeesCount":9,"role":"guest","postedPostsCount":20,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":8,"ngxCachedTime":1572571653,"viewedEntriesCount":1390,"jobTitle":"","subscribedTagsCount":36,"totalCollectionsCount":129,"username":"menull","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/2/1693e9811637ea3d?w=1200&h=1200&f=jpeg&s=70765","objectId":"5b558c8de51d4535a65acb00"},"author":"","screenshot":"","original":true,"hotIndex":25.1091,"content":"1. 引入闭包的定义 这段代码中的函数 fn 其实就是一个闭包。这可能看起来很诡异, 不过 fn 确实是一个最简单的闭包,为什么它能被称为一个闭包呢？ 下面给出闭包的定义之后就能解释这个问题了。 这样看来上面 eg.1 中的例子就明朗了: fn 是个函数, 而且 fn 内输出(…","title":"浅谈JavaScript中的闭包(closure)","lastCommentTime":"2019-06-27T11:03:20.269Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":270,"summaryInfo":"正如引言中所说, 我们随手就能创建一个闭包: 这段代码中的函数 fn 其实就是一个闭包。这可能看起来很诡异, 不过 fn 确实是一个最简单的闭包,为什么它能被称为一个闭包呢？ 下面给出闭包的定义之后就能解释这个问题了。 这样看来上面 eg.1 中的例子就明朗了: fn 是个函数, 而且 fn 内输...","isCollected":false},{"collectionCount":5,"userRankIndex":0.91485122775258,"buildTime":1571101650.2983,"commentsCount":0,"gfw":false,"objectId":"5cce805c6fb9a0322f7c9d44","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:07:30.280Z","rankIndex":0.000093975259318009,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cce8018f265da0354031e06","verifyCreatedAt":"2019-05-05T08:08:21.934Z","createdAt":"2019-05-05T08:08:21.934Z","user":{"community":null,"collectedEntriesCount":15,"company":"","followersCount":2,"followeesCount":13,"role":"guest","postedPostsCount":7,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":2,"ngxCachedTime":1572571653,"viewedEntriesCount":183,"jobTitle":"研发工程师","subscribedTagsCount":9,"totalCollectionsCount":48,"username":"rexkentzheng","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/9/166f640a93c00964?w=1920&h=1080&f=jpeg&s=505432","objectId":"5b3c45a2f265da0f894b45a0"},"author":"","screenshot":"","original":true,"hotIndex":22.026,"content":"在任何语言中，都需要存储一些变量，之后可以对变量进行修改和查找。 首先要明确的概念就是JavaScript是一种编译型语言，但它不像是其他编译型语言会在执行前被编译完成，而是边执行边编译，具体来说，编译仅仅是在执行前几秒中完成的。 分词/词法分析：就是将你的代码拆分开发，比方说…","title":"JS从入门到放弃：作用域和闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":335,"summaryInfo":"在任何语言中，都需要存储一些变量，之后可以对变量进行修改和查找。而作用域就是一组规则，告诉你在变量是应该在什么位置查找，什么位置存储，这就是作用域 如此便是编辑器的基本概念了，当然了，实际中编辑器的操作会复杂很多，此处为了方便理解最大程度上简化了编译器的内容，理解即可，重点不在此处。 要想了解作用...","isCollected":false},{"collectionCount":4,"userRankIndex":0,"buildTime":1572517585.4681,"commentsCount":0,"gfw":false,"objectId":"5d908012e51d4577ff0d9eb3","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571602,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571567,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"}],"updatedAt":"2019-10-31T10:26:25.450Z","rankIndex":0.00042558778366909,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d8f880cf265da5b76372b42","verifyCreatedAt":"2019-09-29T15:07:02.787Z","createdAt":"2019-09-29T15:07:02.787Z","user":{"community":{"github":{"username":"SnowGojira","avatarLarge":"https://avatars1.githubusercontent.com/u/12061679?v=4","uid":"12061679"}},"collectedEntriesCount":3,"company":"Freelancer","followersCount":1,"followeesCount":0,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571602,"viewedEntriesCount":63,"jobTitle":"前端","subscribedTagsCount":14,"totalCollectionsCount":6,"username":"哥斯拉撕家","avatarLarge":"https://user-gold-cdn.xitu.io/2019/10/13/16dc5077c5c7a04d?w=400&h=226&f=jpeg&s=133912","objectId":"5d849bfb6fb9a06b0320389c"},"author":"","screenshot":"","original":true,"hotIndex":8.993,"content":"","title":"前端面试题总结（一）：ES5之闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":91,"summaryInfo":"2、LET和VAR的区别，LET的产生背景？","isCollected":false},{"collectionCount":4,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572519997.2197,"checkStatus":true,"objectId":"5cb44776f265da03981fba0c","entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T11:06:37.201Z","rankIndex":0.000079419084023867,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cb427f26fb9a068b65e200d","verifyCreatedAt":"2019-04-15T10:44:07.364Z","createdAt":"2019-04-15T10:44:07.364Z","user":{"community":null,"collectedEntriesCount":39,"company":"","followersCount":22,"followeesCount":43,"role":"guest","postedPostsCount":6,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":27,"ngxCachedTime":1572571653,"viewedEntriesCount":552,"jobTitle":"前端开发","subscribedTagsCount":12,"totalCollectionsCount":153,"username":"嘴里起了个泡","avatarLarge":"https://user-gold-cdn.xitu.io/2018/5/23/1638ac8e7af35bad?w=368&h=640&f=jpeg&s=16687","objectId":"5ad9a52651882567336a47ea"},"author":"","screenshot":"","original":true,"hotIndex":26.2246,"content":"这篇文章详细介绍了JS在执行for循环里面的 setTimeout() 语句的时候发什么了什么。这是面试中经常会被问到的一个问题，因为这个问题的答案涉及到了几个JS的核心知识点：闭包（closures），提升（hoisting）和事件循环（the event loop）。 Fo…","title":"[译]JS闭包:For循环中的setTimeout","lastCommentTime":"2019-04-28T15:12:05.013Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":438,"summaryInfo":"这篇文章详细介绍了JS在执行for循环里面的 语句的时候发什么了什么。这是面试中经常会被问到的一个问题，因为这个问题的答案涉及到了几个JS的核心知识点：闭包（closures），提升（hoisting）和事件循环（the event loop）。 循环是JS开发中经常使用的。它会一直运行直到其中的...","isCollected":false},{"collectionCount":4,"userRankIndex":0,"buildTime":1571992625.1244,"commentsCount":1,"gfw":false,"objectId":"5d68fe12e51d45620821cefc","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-25T08:37:05.107Z","rankIndex":0.00018826698073972,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d56ba1f51882545e41e5ce6","verifyCreatedAt":"2019-08-31T07:33:46.558Z","createdAt":"2019-08-31T07:33:46.558Z","user":{"community":{"weibo":{"selfDescription":"","uid":"2687184180","blogAddress":"http://weibo.com/u/2687184180","username":"Miss-YangCCJ","avatarLarge":"http://tvax3.sinaimg.cn/crop.0.0.664.664.180/a02b2d34ly8g3ls2ev2e3j20ig0igjsm.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpZ192bhv1b5ibPhDkC875PPMdVrwicib6dRE0OXRZczKVof7iclicWgWcS7iaSpZCA9HF63UBhoJQkmfg/132"}},"collectedEntriesCount":50,"company":"","followersCount":5,"followeesCount":7,"role":"guest","postedPostsCount":11,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571656,"viewedEntriesCount":865,"jobTitle":"前端","subscribedTagsCount":46,"totalCollectionsCount":9,"username":"Britta","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/24/16a4d19267eb32f2?w=998&h=998&f=jpeg&s=496609","objectId":"5c938bdaf265da6102098a49"},"author":"","screenshot":"","original":true,"hotIndex":9.05,"content":"在网上的很多关于闭包的文章，但是我看了这么多的文章之后对闭包的概念还是迷迷糊糊的，虽然别人问起来可以向别人解释什么是闭包（当然只是浅显的解释），但是脑子里对闭包产生的根本原因还是有疑惑，后来看了垃圾回收的文章和作用域的文章之后才完全理解透。 关于闭包的定义，我的理解是一个函数访…","title":"浅谈闭包、作用域和垃圾回收","lastCommentTime":"2019-09-03T10:41:23.744Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571563},"viewsCount":79,"summaryInfo":"在网上的很多关于闭包的文章，但是我看了这么多的文章之后对闭包的概念还是迷迷糊糊的，虽然别人问起来可以向别人解释什么是闭包（当然只是浅显的解释），但是脑子里对闭包产生的根本原因还是有疑惑，后来看了垃圾回收的文章和作用域的文章之后才完全理解透。 关于闭包的定义，我的理解是一个函数访问了它自己的作用域以...","isCollected":false},{"collectionCount":4,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1568851515,"updatedAt":"2019-08-30T06:01:27.135Z","tags":[{"ngxCachedTime":1568851485,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"objectId":"599108ea6fb9a03c4b37661f","rankIndex":0.0000064321130338265,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5990ffe66fb9a03c467c1302","buildTime":1567144887.1512,"createdAt":"2017-08-14T02:20:26.441Z","user":{"community":{"github":{"username":"1000copy","avatarLarge":"https://avatars2.githubusercontent.com/u/4485958?v=4","uid":"4485958"}},"collectedEntriesCount":139,"company":"自由工作者","followersCount":4421,"followeesCount":61,"role":"editor","postedPostsCount":99,"level":3,"isAuthor":true,"postedEntriesCount":23,"totalCommentsCount":101,"ngxCachedTime":1568851512,"ngxCached":true,"viewedEntriesCount":1339,"jobTitle":"程序员","subscribedTagsCount":6,"totalCollectionsCount":2472,"username":"RecoReco","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e083e16da9afe05c","objectId":"58774201570c35006207d274"},"author":"","screenshot":"","original":true,"hotIndex":15.4152,"content":"我阅读一个开源代码的过程中，常常发现有这样的结构： var textLabel:UILabel = { let label = UILabel() label.backgroundColor = .red return label }()功能能够编译，能够运行，因此语法当然是对的…","title":"Swift iOS : 闭包的一个应用","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851405},"viewsCount":225,"summaryInfo":"我阅读一个开源代码的过程中，常常发现有这样的结构： 功能能够编译，能够运行，因此语法当然是对的，直接望文生义也知道代码要干啥，只是，这是什么语法？ 既然我们关心的是语法结构，那么简化下就是这样样子，对我们要研究的问题并无影响，但是更加简单： 这样，我们可以打印来验证它是啥？ 这说明就是定义了一个闭...","isCollected":false},{"collectionCount":3,"userRankIndex":0,"buildTime":1572567756.4285,"commentsCount":2,"gfw":false,"objectId":"5da944cdf265da5b5a7229c3","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571095,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571090,"ngxCached":true,"title":"Kotlin","id":"56c40b1d2e958a0059a1b719"}],"updatedAt":"2019-11-01T00:22:36.411Z","rankIndex":0.0030368739460052,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5da853a5f265da5b926bd900","verifyCreatedAt":"2019-10-18T12:51:11.469Z","createdAt":"2019-10-18T12:51:11.469Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/c3VrdibDx1TjxcY4wQT33qel9Iy8V1dWwO0xxpJ3UqXc4oPlz5eXu0HicXIndcrV7ve6iasjR5e05qGd9jUdpOE7g/132"}},"collectedEntriesCount":54,"company":"福米科技","followersCount":1,"followeesCount":0,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571095,"viewedEntriesCount":324,"jobTitle":"Android开发者","subscribedTagsCount":10,"totalCollectionsCount":3,"username":"木杉鱼","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/6c2c749a6f313d9ab469b96ae7118411","objectId":"57d891c6c4c9710061041d87"},"author":"","screenshot":"","original":true,"hotIndex":17.754,"content":"Kotlin的lambda闭包跟Java的lambda闭包完全是两个不同的概念。我们都知道，Java的lambda表达式就是单方法接口（也就是只有一个方法的接口）匿名实现的语法糖。而Kotlin的lambda闭包真正把它抽象成了一种() -> Unit类型，这种类型我们可以把它…","title":"Kotlin的lambda闭包","lastCommentTime":"2019-10-21T09:57:45.300Z","type":"post","english":false,"category":{"ngxCached":true,"title":"android","id":"5562b410e4b00c57d9b94a92","name":"Android","ngxCachedTime":1572571002},"viewsCount":247,"summaryInfo":"的闭包跟的闭包完全是两个不同的概念。我们都知道，的表达式就是单方法接口（也就是只有一个方法的接口）匿名实现的语法糖。而的闭包真正把它抽象成了一种类型，这种类型我们可以把它理解成一个类。作用就是写回调方法时替代单方法接口，减少一些代码量。 上面也说了，的表达式就是单方法接口匿名实现的语法糖，（）语法...","isCollected":false},{"collectionCount":3,"isEvent":false,"commentsCount":7,"gfw":false,"buildTime":1572494260.3063,"checkStatus":true,"objectId":"5cb9fcc36fb9a068846b928f","entryView":"","subscribersCount":0,"ngxCachedTime":1572571654,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T03:57:40.288Z","rankIndex":0.000051642051955118,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cb9fca0e51d456e8833395f","verifyCreatedAt":"2019-04-19T17:49:04.981Z","createdAt":"2019-04-19T17:49:04.981Z","user":{"community":null,"collectedEntriesCount":26,"company":"北京时讯遨游网络科技有限公司","followersCount":15,"followeesCount":60,"role":"guest","postedPostsCount":31,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":18,"ngxCachedTime":1572571654,"viewedEntriesCount":909,"jobTitle":"前端工程师","subscribedTagsCount":21,"totalCollectionsCount":81,"username":"王小端coder","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/29/169c77b839a53863?w=350&h=350&f=jpeg&s=11583","objectId":"5c9211aa5188252dae091ae4"},"author":"","screenshot":"","original":true,"hotIndex":16.4657,"content":"怀着一颗忐忑的心来写这篇文章，因为今天写的是闭包，关于闭包的理解可能大家都非常理解了，也怕写的不好，误导了部分的初学者，希望下面内容有任何写的不好的地方，欢迎大家积极的指出来，真正的进步就是大家共同进步。也能够让自己成长起来，这也是我写坚持写博客的原因之一。 为了让大家清晰的看…","title":"闭包该怎么理解呢？","lastCommentTime":"2019-05-21T00:01:00.382Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":123,"summaryInfo":"怀着一颗忐忑的心来写这篇文章，因为今天写的是闭包，关于闭包的理解可能大家都非常理解了，也怕写的不好，误导了部分的初学者，希望下面内容有任何写的不好的地方，欢迎大家积极的指出来，真正的进步就是大家共同进步。也能够让自己成长起来，这也是我写坚持写博客的原因之一。 好了，废话闲说，我们进入我们的正题：闭...","isCollected":false},{"collectionCount":3,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1571100826.6484,"checkStatus":true,"objectId":"5cb9c714518825324664dff1","entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T00:53:46.631Z","rankIndex":0.000038892747204168,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cb995186fb9a06886421a7e","verifyCreatedAt":"2019-04-20T10:46:33.436Z","createdAt":"2019-04-20T10:46:33.436Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ermQY2VFxkvibcePHmrgQlXV3sMOpbb2Rl59d4n6zP6fVKzh0iaomrI6hOxZpmTjiawAJ2U1n5ThleiaA/132"}},"collectedEntriesCount":3,"company":"街电","followersCount":14,"followeesCount":0,"role":"guest","postedPostsCount":12,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571655,"viewedEntriesCount":312,"jobTitle":"前端","subscribedTagsCount":40,"totalCollectionsCount":43,"username":"会会会","avatarLarge":"https://user-gold-cdn.xitu.io/2019/9/26/16d6ca4f7b83de47?w=1242&h=1209&f=png&s=1708462","objectId":"580477f10e3dd9005715b1d6"},"author":"","screenshot":"","original":true,"hotIndex":10.8258,"content":"这里的(function foo(){ .. })是一个函数表达式；而不是一 个标准的函数声明； 所以，foo 被绑定在函数表达式自身的函数中而不是所在作用域中。 换句话说，(function foo(){ .. })作为函数表达式意味着foo只能在..所代表的位置中被访问，外…","title":"JavaScript 作用域和闭包理解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":142,"summaryInfo":"分为函数作用域，和块级作用域； 此时，foo里面就是一个函数作用域，可以bar里面又是一个作用域；最外面当然就是全局作用域； 这样就可以访问外面的a了，因为访问变量a的时候就近原则，就得到了3； 用 with 从对象中创建出的作用域仅在 with 声明中而非外 部作用域中有效。 JavaScrip...","isCollected":false},{"collectionCount":3,"userRankIndex":3.0896936467371,"buildTime":1572479135.3362,"commentsCount":0,"gfw":false,"objectId":"5db43933e51d456bbe38bbfa","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T23:45:35.319Z","rankIndex":0.012848374642355,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5db4345d5188256edc46e521","verifyCreatedAt":"2019-10-26T15:52:50.019Z","createdAt":"2019-10-26T15:52:50.019Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/glMH9jUOFS8gZd9YEpRgd5EmSictNvcAA28C96YAZNTw2gbs8sxMg0fMice7Ez98khoZn4Crr6KOpUF7t8h1GgOg/132"}},"collectedEntriesCount":7,"company":"","followersCount":5,"followeesCount":4,"role":"guest","postedPostsCount":9,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571655,"viewedEntriesCount":377,"jobTitle":"前端开发工程师","subscribedTagsCount":22,"totalCollectionsCount":12,"username":"吴灿同学","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e090733fbf18eee6","objectId":"5b0cbe9f51882536c25d503f"},"author":"","screenshot":"","original":true,"hotIndex":10.7104,"content":"变量提升是指在 JS 代码的执行过程中，JavaScript 引擎把变量和函数的声明部分提升到代码开头的行为。 ES6 之前的 JS 没有块级作用域，所以把作用域内部的变量统一提升是最快速、最简单的设计。 (2) 本应销毁的变量没有被销毁。 (2) 如果变量和函数同名，那么在编…","title":"从变量提升、执行上下文到闭包、this","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":148,"summaryInfo":"","isCollected":false},{"collectionCount":3,"userRankIndex":3.4190225827029,"buildTime":1571296949.8553,"commentsCount":0,"gfw":false,"objectId":"5d6247d9e51d456201486e62","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-17T07:22:29.838Z","rankIndex":0.00036864021797008,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d6247afe51d4561de20b5ff","verifyCreatedAt":"2019-08-26T01:50:17.144Z","createdAt":"2019-08-26T01:50:17.144Z","user":{"community":{"github":{"username":"LIJING0906","avatarLarge":"https://avatars3.githubusercontent.com/u/13495382?v=4","uid":"13495382"}},"collectedEntriesCount":7,"company":"","followersCount":6,"followeesCount":0,"role":"guest","postedPostsCount":21,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571616,"ngxCached":true,"viewedEntriesCount":153,"jobTitle":"","subscribedTagsCount":44,"totalCollectionsCount":32,"username":"LIJING0906","avatarLarge":"https://user-gold-cdn.xitu.io/2019/1/18/168619ffb4f32f91?w=1239&h=1071&f=png&s=1589928","objectId":"59c5259e5188254f962ccacc"},"author":"","screenshot":"","original":true,"hotIndex":12.9615,"content":"今天来啃闭包和作用域这块难啃的骨头。 作用域是一个变量和函数的作用范围，JS中函数内声明的所有变量在函数体内始终是可见的，在ES6前有全局作用域和局部作用域，但是没有块级作用域（catch只在其内部生效），局部变量的优先级高于全局变量。 Javascript中有一个执行上下文(…","title":"JS闭包和作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":182,"summaryInfo":"此文首发于 https://lijing0906.github.io 今天来啃闭包和作用域这块难啃的骨头。 作用域是一个变量和函数的作用范围，JS中函数内声明的所有变量在函数体内始终是可见的，在ES6前有全局作用域和局部作用域，但是没有块级作用域（catch只在其内部生效），局部变量的优先级高于全...","isCollected":false},{"collectionCount":3,"userRankIndex":0,"buildTime":1571102336.0997,"commentsCount":0,"gfw":false,"objectId":"5ce6a9895188253051637049","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:18:56.082Z","rankIndex":0.00006675114527257,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ce6a9576fb9a07eae2a3763","verifyCreatedAt":"2019-05-23T15:05:19.536Z","createdAt":"2019-05-23T15:05:19.536Z","user":{"community":{"github":{"username":"ChanWunsam","avatarLarge":"https://avatars2.githubusercontent.com/u/31074113?v=4","uid":"31074113"}},"collectedEntriesCount":4,"company":"","followersCount":2,"followeesCount":6,"role":"guest","postedPostsCount":4,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571654,"ngxCached":true,"viewedEntriesCount":50,"jobTitle":"","subscribedTagsCount":4,"totalCollectionsCount":6,"username":"藕粉海","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/23/16ae511ec9e71270?w=225&h=225&f=jpeg&s=9558","objectId":"5c8fb2885188252dac6d26ff"},"author":"","screenshot":"","original":true,"hotIndex":13.628,"content":"作者虽然不是第一次写学习笔记了，但是系统性的专栏确实是第一回写，所以对这篇文章难度的预估量不够，酝酿了蛮久时间的。写之前一直在纠结一个问题，这类问题网上已经有各类大神做出各种很详细的分解了，还有必要写吗？ 能让我有动力写的原因，一个是强烈的表达欲望，另一个是希望后来者能通过我这…","title":"深入学习 JavaScript —— 闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":211,"summaryInfo":"作者虽然不是第一次写学习笔记了，但是系统性的专栏确实是第一回写，所以对这篇文章难度的预估量不够，酝酿了蛮久时间的。写之前一直在纠结一个问题，这类问题网上已经有各类大神做出各种很详细的分解了，还有必要写吗？能让我有动力写的原因，一个是强烈的表达欲望，另一个是希望后来者能通过我这篇文章学到一点东西。基...","isCollected":false},{"collectionCount":3,"userRankIndex":0.65758719535201,"buildTime":1572525442.8865,"commentsCount":2,"gfw":false,"objectId":"5d335a7a51882545be4afe85","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T12:37:22.867Z","rankIndex":0.00021522853880358,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d324826f265da1b904c1c3f","verifyCreatedAt":"2019-07-21T04:21:51.393Z","createdAt":"2019-07-21T04:21:51.393Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/ElMYjXNGfoEE4axqtCFyDZZlzt4HAV6uPiabe4S2aGzRtvXFepbEticGXQAJvCiaFmWNdn3z6yx9icMXsA0iaK69AhQ/132"},"github":{"username":"peteryuhang","avatarLarge":"https://avatars0.githubusercontent.com/u/32042176?v=4","uid":"32042176"}},"collectedEntriesCount":2,"company":"","followersCount":26,"followeesCount":15,"role":"guest","postedPostsCount":62,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":8,"ngxCachedTime":1572571596,"ngxCached":true,"viewedEntriesCount":626,"jobTitle":"Software Engineer","subscribedTagsCount":9,"totalCollectionsCount":48,"username":"P.yh","avatarLarge":"https://mirror-gold-cdn.xitu.io/16983d4e19f6980116b","objectId":"5c8c3eaef265da2dc2323141"},"author":"","screenshot":"","original":true,"hotIndex":25.559,"content":"这周看了 《JavaScript 高级程序设计》 的第七章，讲到了 JavaScript 中的一等公民 - 函数的一些特性，在这里进行一下总结。 你可能并不太理解这样做的目的是什么？其实闭包函数隐藏了很多的内部实现，这样调用者不需要关注额外的东西，在有些场合下频繁被使用。而且之…","title":"JavaScript 中的闭包函数","lastCommentTime":"2019-07-22T04:25:21.173Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":394,"summaryInfo":"这周看了 《JAVASCRIPT 高级程序设计》 的第七章，讲到了 JavaScript 中的一等公民 - 函数的一些特性，在这里进行一下总结。 在一个函数中返回另外一个函数，当我们调用这个函数，我们称调用的这个函数是外部函数，其返回的函数是内部函数，但是问题来了，正常的情况下，一个函数调用结束时...","isCollected":false},{"collectionCount":3,"userRankIndex":1.5104018364968,"buildTime":1572464124.9515,"commentsCount":0,"gfw":false,"objectId":"5d19f7026fb9a07ede0b5b52","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572755293,"verifyStatus":true,"tags":[{"ngxCachedTime":1572755292,"ngxCached":true,"title":"Groovy","id":"58c24f9a0ce46300546183cd"}],"updatedAt":"2019-10-30T19:35:24.934Z","rankIndex":0.000089337245062928,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ccd2ee7e51d453a4a357e3f","verifyCreatedAt":"2019-07-02T03:18:12.461Z","createdAt":"2019-07-02T03:18:12.461Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/TV7NryplVhDxNCzVeIDCtA4JFH1ZvQib1gd0NcqdGibsYZDYyl3PmbAcKDORZX2xt8ISsVfdDWgzCbSRhDZzbo4A/132"}},"collectedEntriesCount":17,"company":"MI","followersCount":38,"followeesCount":34,"role":"guest","postedPostsCount":16,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":14,"ngxCachedTime":1572755293,"viewedEntriesCount":707,"jobTitle":"Android小厮","subscribedTagsCount":19,"totalCollectionsCount":150,"username":"Chopper_zjxstar","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08d684c0365209b","objectId":"5a5d9b98f265da3e303c7d28"},"author":"","screenshot":"","original":true,"hotIndex":12.4218,"content":"在 Java 中，通常以创建匿名内部类的方式来定义用于注册事件处理器的方法参数，但这会使得代码变得非常冗长。而 Groovy 中的闭包可以去掉这种冗长感。闭包是轻量级的、短小的、简洁的，是 Groovy 中最重要、最强大的特性之一。 Groovy 的闭包 ( Closure )…","title":"Groovy 的闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"android","id":"5562b410e4b00c57d9b94a92","name":"Android","ngxCachedTime":1572755264},"viewsCount":170,"summaryInfo":"在 Java 中，通常以创建匿名内部类的方式来定义用于注册事件处理器的方法参数，但这会使得代码变得非常冗长。而 Groovy 中的闭包可以去掉这种冗长感。闭包是轻量级的、短小的、简洁的，是 Groovy 中最重要、最强大的特性之一。 Groovy 的闭包 ( Closure ) 是一个开放的匿名代...","isCollected":false},{"collectionCount":3,"userRankIndex":0,"buildTime":1571101519.3589,"commentsCount":1,"gfw":false,"objectId":"5cc41635e51d456e811d271f","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:05:19.341Z","rankIndex":0.000085156704718837,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cc237a3f265da037516a6e8","verifyCreatedAt":"2019-04-27T13:00:10.837Z","createdAt":"2019-04-27T13:00:10.837Z","user":{"community":null,"collectedEntriesCount":0,"company":"","followersCount":0,"followeesCount":16,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571653,"viewedEntriesCount":18,"jobTitle":"","subscribedTagsCount":25,"totalCollectionsCount":3,"username":"天下有雪","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/26/16a56a6d013762bd?w=600&h=600&f=jpeg&s=366673","objectId":"58552cee8e450a006c987816"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/4/26/16a56ba2bef31949?w=560&h=468&f=png&s=233689","original":true,"hotIndex":22.2995,"content":"有一句甚广的话，相信很多人都听过：艺术源于生活又高于生活，意思是说艺术并不是凭空产生的，而是广大人民群众从日常生活中提炼出来的抽象表现。比如舞蹈，就是人们从具体劳动、生活、战争中抽象出来的肢体表达形式。而技术呢，也不是凭空产生的，也是源于生活，但是却是生活的低层次的抽象（或者叫…","title":"没学过JavaScript也能看懂的闭包解释","lastCommentTime":"2019-04-27T22:32:22.612Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":359,"summaryInfo":"有一句甚广的话，相信很多人都听过：艺术源于生活又高于生活，意思是说艺术并不是凭空产生的，而是广大人民群众从日常生活中提炼出来的抽象表现。比如舞蹈，就是人们从具体劳动、生活、战争中抽象出来的肢体表达形式。而技术呢，也不是凭空产生的，也是源于生活，但是确是生活的低层次的抽象（或者叫模仿更加贴切）。所以...","isCollected":false},{"collectionCount":3,"userRankIndex":6.0342687645397,"buildTime":1572519847.5218,"commentsCount":4,"gfw":false,"objectId":"5cdbe92e5188256958443a17","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571399,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571348,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"updatedAt":"2019-10-31T11:04:07.503Z","rankIndex":0.000077742512548013,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cdbe8f15188251a4205b4d3","verifyCreatedAt":"2019-05-15T15:30:41.164Z","createdAt":"2019-05-15T15:30:41.164Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOt2j7LxXLchkM0VL6hIneccYzdnGBvyic3ibRHUpjC0zTxeWrdP0jxCBsc8btFOUSyZjYyFMibRI7A/132"}},"collectedEntriesCount":85,"company":"不懂产品的研发不是好测试","followersCount":1006,"followeesCount":20,"role":"guest","postedPostsCount":65,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":77,"ngxCachedTime":1572571357,"ngxCached":true,"viewedEntriesCount":2032,"jobTitle":"Tester","subscribedTagsCount":29,"totalCollectionsCount":520,"username":"jb","avatarLarge":"https://user-gold-cdn.xitu.io/2018/3/31/1627959609da4fa8?w=320&h=320&f=jpeg&s=23827","objectId":"58672e2261ff4b006baf39c1"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/5/15/16abb06bf1c895a8?w=480&h=300&f=jpeg&s=17378","original":true,"hotIndex":14.0221,"content":"定义在模块最外层的变量是全局变量，它是全局范围内可见的，当然在函数里面也可以读取到全局变量的。例如： 好，小A是个毕业生，他是这样实现的。 这是最简单的装饰器，但是有一个问题，如果被装饰的函数需要传入参数，那么这个装饰器就坏了。因为返回的函数并不能接受参数，可以指定装饰器函数w…","title":"JB的Python之旅-生成器、闭包、装饰器","lastCommentTime":"2019-05-16T09:39:16.201Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571322},"viewsCount":128,"summaryInfo":"jb关注的重点是、、、，显然，作为一位测试同学，会点py，可以让饭更香，但是，如果简历上写着精通py，那是否真的懂这些呢？ 反正，jb是不懂的，如有错误，欢迎交流，大神请轻喷； 要说生成器，得先知道生成器是解决什么问题的； 相信大家都用过列表，假如list里面有100W个元素，而只需要前面几个元素...","isCollected":false},{"collectionCount":3,"userRankIndex":0.29550822622199,"buildTime":1571107201.3549,"commentsCount":0,"gfw":false,"objectId":"5d5c0210f265da03c1289b39","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T02:40:01.337Z","rankIndex":0.00015832576823051,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d5c01016fb9a06aec2640fd","verifyCreatedAt":"2019-08-20T14:33:56.305Z","createdAt":"2019-08-20T14:33:56.305Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eribqGX98EmLzRu74pacl5JeFnSDfG15mogxibjibQYA8icAoCTia3EJ7wtPg8ibUaXFZDGUE9f9B5LwUSQ/132"},"github":{"username":"William-Cao","avatarLarge":"https://avatars3.githubusercontent.com/u/22885397?v=4","uid":"22885397"}},"collectedEntriesCount":12,"company":"null","followersCount":46,"followeesCount":5,"role":"guest","postedPostsCount":6,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":8,"ngxCachedTime":1572571656,"viewedEntriesCount":1100,"jobTitle":"FED","subscribedTagsCount":3,"totalCollectionsCount":246,"username":"WilliamCao","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/1/169397b645c9e0a3?w=1239&h=1209&f=png&s=1059303","objectId":"5c6664e66fb9a049b41cfdda"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/8/20/16caf67fa04db15f?w=1024&h=682&f=jpeg&s=93592","original":true,"hotIndex":7.4108,"content":"上下文(context)是一段程序运行所需要的最小数据集合。我们可以从上下文交换(context switch)来理解上下文，在多进程或多线程环境中，任务切换时首先要中断当前的任务，将计算资源交给下一个任务。因为稍后还要恢复之前的任务，所以中断的时候要保存现场，即当前任务的上下…","title":"从执行上下文，到作用域闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":82,"summaryInfo":"(context)是一段程序运行所需要的最小数据集合。我们可以从(context switch)来理解上下文，在多进程或多线程环境中，任务切换时首先要中断当前的任务，将计算资源交给下一个任务。因为稍后还要恢复之前的任务，所以中断的时候要保存现场，即当前任务的上下文，也可以叫做环境。 (scope)...","isCollected":false},{"collectionCount":3,"userRankIndex":2.3086902928294,"buildTime":1568709275.3041,"commentsCount":2,"gfw":false,"objectId":"5d2297a2f265da1ba56b40a1","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1568851514,"verifyStatus":true,"tags":[{"ngxCachedTime":1568851407,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"updatedAt":"2019-09-17T08:34:35.276Z","rankIndex":0.00026861544985243,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d229797f265da1bc94f100f","verifyCreatedAt":"2019-07-08T01:37:33.765Z","createdAt":"2019-07-08T01:37:33.765Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKNKDcLB0SYsib4bSY0tHI8k8aPT9BljuiaZUQ2X6YWRfhSZ4jcicBZI3uNHfVOWMHhGxKQXg3C5ARFA/132"}},"collectedEntriesCount":41,"company":"","followersCount":1295,"followeesCount":50,"role":"guest","postedPostsCount":39,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":34,"ngxCachedTime":1568851513,"ngxCached":true,"viewedEntriesCount":789,"jobTitle":"ioser","subscribedTagsCount":24,"totalCollectionsCount":200,"username":"ityongzhen","avatarLarge":"https://mirror-gold-cdn.xitu.io/169f31ce0ff77d391fc","objectId":"5ca8bb9c6fb9a05e620b8abf"},"author":"","screenshot":"","original":true,"hotIndex":16.7182,"content":"根本没有alloc malloc等代码，也就是说，没有开辟堆空间。那么接下来我们看下面的代码 更多资料，欢迎关注个人公众号，不定时分享各种技术文章。","title":"Swift之通过汇编探究闭包本质","lastCommentTime":"2019-07-08T11:55:04.535Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851427},"viewsCount":229,"summaryInfo":"先回顾一下，上一篇 Swift之闭包(Closure)中对闭包的解释 先看下面一段代码，猜猜会输出什么 那么，问题来了，为什么输出的是10呢？因为按照常识，var num = 0 是局部变量，执行完就销毁了，怎么能再后面继续使用呢？ 先不适用num ,直接 return i 并在这里打断点，结果如...","isCollected":false},{"collectionCount":3,"userRankIndex":3.0182015841808,"buildTime":1571974078.793,"commentsCount":0,"gfw":false,"objectId":"5d295d55f265da1bc64bf0b2","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571815,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-25T03:27:58.773Z","rankIndex":0.00012138213412785,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d295cd1f265da1b88120a76","verifyCreatedAt":"2019-07-13T04:38:57.103Z","createdAt":"2019-07-13T04:38:57.103Z","user":{"community":null,"collectedEntriesCount":34,"company":"","followersCount":542,"followeesCount":0,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":11,"totalCommentsCount":19,"ngxCachedTime":1572571815,"viewedEntriesCount":2065,"jobTitle":"前端开发人员","subscribedTagsCount":2,"totalCollectionsCount":680,"username":"gtshen","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/11/4df451dc6b173583b1802f1a317f2ab3","objectId":"596464995188250d9f1b0470"},"author":"","screenshot":"","original":true,"hotIndex":12.1165,"content":"“闭包(closure)”实际上就是被返回的函数有权访问其包含函数中定义的变量和标识符。 “闭包”可以访问其包含函数中的变量标识符，原理在于闭包函数的作用域链中引用了包含函数的作用域。 在这个“防抖”的示例中，debounce 就是“包含函数”，而 debounce 函数内部通…","title":"从闭包到作用域再到具体的应用","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":167,"summaryInfo":"那么，本篇文章你能学到什么？ “闭包(closure)”实际上就是被返回的函数有权访问其包含函数中定义的变量和标识符。“闭包”可以访问其包含函数中的变量标识符，原理在于闭包函数的作用域链中引用了包含函数的作用域。 在这个“防抖”的示例中， 就是“包含函数”，而 函数内部通过  语句返回的匿名函数就...","isCollected":false},{"collectionCount":3,"userRankIndex":1.9445751178026,"buildTime":1568817017.6406,"commentsCount":0,"gfw":false,"objectId":"5d63767051882545e41e6d1b","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1568851514,"verifyStatus":true,"tags":[{"ngxCachedTime":1568851407,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"updatedAt":"2019-09-18T14:30:17.621Z","rankIndex":0.0014744002320354,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d6376546fb9a06ad4515190","verifyCreatedAt":"2019-08-26T06:10:12.923Z","createdAt":"2019-08-26T06:10:12.923Z","user":{"community":null,"collectedEntriesCount":10,"company":"","followersCount":26,"followeesCount":2,"role":"guest","postedPostsCount":10,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":7,"ngxCachedTime":1568851514,"viewedEntriesCount":99,"jobTitle":"iOS开发","subscribedTagsCount":1,"totalCollectionsCount":48,"username":"凡几多","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/21/16cb22452f490545?w=320&h=320&f=jpeg&s=12932","objectId":"5d5cb4d6e51d456206115a10"},"author":"","screenshot":"","original":true,"hotIndex":17.6641,"content":"闭包（Closures）是自包含的功能代码块，可以在代码中使用或者用来作为参数传值。 Swift 中的闭包与 C 和 OC 中的代码块（blocks）以及其他一些编程语言中的 匿名函数 比较相似。全局函数和嵌套函数其实就是特殊的闭包。 由于之前对 Swift 中的闭包不太熟悉，…","title":"Swift 中的闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851427},"viewsCount":281,"summaryInfo":"闭包（CLOSURES）是自包含的功能代码块，可以在代码中使用或者用来作为参数传值。SWIFT 中的闭包与 C 和 OC 中的代码块（BLOCKS）以及其他一些编程语言中的 匿名函数 比较相似。全局函数和嵌套函数其实就是特殊的闭包。由于之前对 SWIFT 中的闭包不太熟悉，所以在此归纳总结一下闭包...","isCollected":false},{"collectionCount":3,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1571100821.906,"checkStatus":true,"objectId":"5cbdc752e51d456e2809fbb7","entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T00:53:41.883Z","rankIndex":0.000029375792999643,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cbdc7126fb9a032453bad99","verifyCreatedAt":"2019-04-22T14:46:36.973Z","createdAt":"2019-04-22T14:46:36.973Z","user":{"community":{"github":{"username":"wewrt","avatarLarge":"https://avatars3.githubusercontent.com/u/26152895?v=4","uid":"26152895"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4AmMYFOBCm3XEZRlyIIRk2UxOGKJGJGyXz5D8GCmFaGPChx0fj8kPxx5ejfricffGhfXSGDukldw/132"}},"collectedEntriesCount":37,"company":"","followersCount":2,"followeesCount":101,"role":"guest","postedPostsCount":18,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":22,"ngxCachedTime":1572571656,"viewedEntriesCount":4726,"jobTitle":"前端","subscribedTagsCount":40,"totalCollectionsCount":13,"username":"宝锦","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/9/169ffa1e2d1c700d?w=496&h=330&f=jpeg&s=32260","objectId":"58d0c9040ce4630057e02a8f"},"author":"","screenshot":"","original":true,"hotIndex":8.0276,"content":"JavaScript只有一种结构：对象。 call和apply都是为了解决改变this的指向。","title":"javascript 原型、this、闭包、深拷贝","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571582},"viewsCount":81,"summaryInfo":"Function.prototype.apply(),Function.prototype.call(),Function.prototype.bind()","isCollected":false},{"collectionCount":3,"userRankIndex":0.70951129135145,"buildTime":1572500528.3077,"commentsCount":0,"gfw":false,"objectId":"5d5663d0f265da03dc076a39","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572570929,"verifyStatus":true,"tags":[{"ngxCachedTime":1572570906,"ngxCached":true,"title":"Rust","id":"55cd735460b2b75099242e7c"}],"updatedAt":"2019-10-31T05:42:08.291Z","rankIndex":0.0001434689965822,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d561d33f265da03a31d3314","verifyCreatedAt":"2019-08-16T08:10:24.826Z","createdAt":"2019-08-16T08:10:24.826Z","user":{"community":{"github":{"username":"loxp","avatarLarge":"https://avatars1.githubusercontent.com/u/41675003?v=4","uid":"41675003"}},"collectedEntriesCount":7,"company":"花果山","followersCount":4,"followeesCount":8,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572570929,"viewedEntriesCount":138,"jobTitle":"搬砖工程师","subscribedTagsCount":11,"totalCollectionsCount":7,"username":"loxp","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/29/16cde1555e01cd67?w=1367&h=1367&f=jpeg&s=165565","objectId":"5c2da6195188256a272ac652"},"author":"","screenshot":"","original":true,"hotIndex":10.4532,"content":"我们常常需要回调函数的功能, 需要函数并不是在创建时执行, 而是以回调的方式, 在需要的时候延迟执行. 并且, 常常需要在函数中获取环境中的一些信息, 又不需要将其作为函数参数传入. 这种应用场景就需要闭包这一工具了. 闭包是持有外部环境变量的函数. 所谓外部环境, 就是指创建…","title":"Rust点滴: 闭包那点事儿","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572570860},"viewsCount":141,"summaryInfo":"我们常常需要回调函数的功能, 需要函数并不是在创建时执行, 而是以回调的方式, 在需要的时候延迟执行. 并且, 常常需要在函数中获取环境中的一些信息, 又不需要将其作为函数参数传入. 这种应用场景就需要闭包这一工具了. 闭包是持有外部环境变量的函数. 所谓外部环境, 就是指创建闭包时所在的词法作用...","isCollected":false},{"collectionCount":3,"userRankIndex":0,"buildTime":1570974538.473,"commentsCount":0,"gfw":false,"objectId":"5d10d316e51d45775f516a8a","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571817,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-13T13:48:58.454Z","rankIndex":0.00006287911115624,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cf751b5e51d45777540fd6e","verifyCreatedAt":"2019-06-24T14:59:27.257Z","createdAt":"2019-06-24T14:59:27.257Z","user":{"community":{"github":{"username":"15575885645","avatarLarge":"https://avatars3.githubusercontent.com/u/26977301?v=4","uid":"26977301"}},"collectedEntriesCount":11,"company":"","followersCount":2,"followeesCount":17,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571817,"viewedEntriesCount":3118,"jobTitle":"","subscribedTagsCount":12,"totalCollectionsCount":3,"username":"15575885645","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e095144fce41b3f9","objectId":"5bbd61ff6fb9a05d2d023fdf"},"author":"","screenshot":"","original":true,"hotIndex":8.645,"content":"这里就很简单的讲一下 预编译的时候词法分析会生成一个词法树，到语法分析的时候会把词法树转化一个抽象语法树 也就是我们常说的AST 里面就包括了我们用的语法行为，比如赋值这类操作. 抛开具体细节，简单来说就是有某种方法可以将 var a = 2; 的 AST 转化为一组机器指令，…","title":"随讲变量对象和闭包一些东西","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":104,"summaryInfo":"JS引擎在编译的时候不是一行一行编译执行的，它是一段一段的，解释器在解析分为两个过程 很多人对JS有一个误解，觉得JS跟C++ java c#一样是动态的，其实不是....JS的是静态作用域也就是词法作用域，函数在运行前执行环境就已经被确定了.因为有个JIT的缘故 两者的区别简单点说就是 词法是函...","isCollected":false},{"collectionCount":2,"userRankIndex":10.15210282371,"buildTime":1571398039.7115,"commentsCount":1,"gfw":false,"objectId":"5d5b47856fb9a06adb7fe33c","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571654,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-18T11:27:19.693Z","rankIndex":0.00055945262685071,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d5b475c6fb9a06b084cf6ef","verifyCreatedAt":"2019-08-20T01:13:04.993Z","createdAt":"2019-08-20T01:13:04.993Z","user":{"community":{"github":{"username":"DengSongsong","avatarLarge":"https://avatars3.githubusercontent.com/u/33084263?v=4","uid":"33084263"}},"collectedEntriesCount":127,"company":"作业帮","followersCount":72,"followeesCount":12,"role":"guest","postedPostsCount":11,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":18,"ngxCachedTime":1572571587,"ngxCached":true,"viewedEntriesCount":1738,"jobTitle":"前端","subscribedTagsCount":57,"totalCollectionsCount":358,"username":"_清风","avatarLarge":"https://user-gold-cdn.xitu.io/2018/4/14/162c34a91e80989b?w=500&h=500&f=jpeg&s=14896","objectId":"59fc41d96fb9a044fb071d9d"},"author":"","screenshot":"","original":true,"hotIndex":20.0132,"content":"本文和大家聊聊闭包，闭包与变量对象和作用域链有着比较多的联系，在阅读本文前，大家需要理解执行上下文、变量对象以及作用域链等内容，这些内容对理解闭包的本质有很大的帮助，前面的两篇文章已经梳理过了，不清楚的同学可以先阅读之前的文章。 上篇文章没有提到自由变量这个概念，现在需要理解这…","title":"JavaScript：闭包","lastCommentTime":"2019-08-20T11:16:23.548Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571580},"viewsCount":324,"summaryInfo":"  本文和大家聊聊闭包，闭包与变量对象和作用域链有着比较多的联系，在阅读本文前，大家需要理解执行上下文、变量对象以及作用域链等内容，这些内容对理解闭包的本质有很大的帮助，前面的两篇文章已经梳理过了，不清楚的同学可以先阅读之前的文章。   上篇文章没有提到自由变量这个概念，现在需要理解这个概念。  ...","isCollected":false},{"collectionCount":2,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1571320182.5853,"checkStatus":true,"objectId":"5c3403b8e51d4551eb3a093b","entryView":"","subscribersCount":0,"ngxCachedTime":1572571398,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571371,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"updatedAt":"2019-10-17T13:49:42.567Z","rankIndex":0.000031898229819358,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c340197e51d45520e538af9","verifyCreatedAt":"2019-01-08T02:50:14.077Z","createdAt":"2019-01-08T02:50:14.077Z","user":{"community":null,"collectedEntriesCount":0,"company":"","followersCount":150,"followeesCount":3,"role":"guest","postedPostsCount":22,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":10,"ngxCachedTime":1572571290,"ngxCached":true,"viewedEntriesCount":231,"jobTitle":"研究生","subscribedTagsCount":18,"totalCollectionsCount":78,"username":"Python空间","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/29/1675ef9743294819?w=639&h=639&f=jpeg&s=35905","objectId":"5bc540a45188255c8b6f1946"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/1/8/1682b2ed7671695f?w=1440&h=900&f=jpeg&s=25644","original":true,"hotIndex":17.8078,"content":"在正式讲「闭包」之前我们首先得先知道「嵌套函数」这么一个东西，我在之前的文章中（零基础学习 Python 之函数对象）说过，函数不单单可以作为对象来传递，还可以在一个函数里面嵌套一个函数，这个就是我们今天要讲的嵌套函数。 上面就是一个简单的嵌套函数的例子，在上面的代码中，在函数…","title":"零基础学习 Python 之闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571339},"viewsCount":305,"summaryInfo":"在正式讲「闭包」之前我们首先得先知道「嵌套函数」这么一个东西，我在之前的文章中（零基础学习 Python 之函数对象）说过，函数不单单可以作为对象来传递，还可以在一个函数里面嵌套一个函数，这个就是我们今天要讲的嵌套函数。 上面就是一个简单的嵌套函数的例子，在上面的代码中，在函数 中定义了函数 ，而...","isCollected":false},{"collectionCount":2,"userRankIndex":1.7095112913515,"buildTime":1572242466.3009,"commentsCount":0,"gfw":false,"objectId":"5d77472df265da03bc12a229","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-28T06:01:06.283Z","rankIndex":0.00037879872545308,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d7747185188254dc43a610a","verifyCreatedAt":"2019-09-10T10:53:02.092Z","createdAt":"2019-09-10T10:53:02.092Z","user":{"community":{"github":{"username":"18640905576","avatarLarge":"https://avatars2.githubusercontent.com/u/30619079?v=4","uid":"30619079"}},"collectedEntriesCount":0,"company":"腾讯无线大连研发中心","followersCount":9,"followeesCount":7,"role":"guest","postedPostsCount":12,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571655,"viewedEntriesCount":35,"jobTitle":"不务正业的前端开发菜鸡","subscribedTagsCount":15,"totalCollectionsCount":39,"username":"carry666","avatarLarge":"https://mirror-gold-cdn.xitu.io/16cf50fb387e0c508a3","objectId":"5d6dd6f46fb9a06af50fe674"},"author":"","screenshot":"","original":true,"hotIndex":13.0271,"content":"abstract: Welcome to my blog, enter password to read. message: Welcome to my blog, enter password to read. 前端开发人员对闭包这个知识点，一定都不陌生，我们都知道闭包的概念…","title":"闭包及闭包的应用","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":215,"summaryInfo":"TITLE: 闭包及闭包的应用DATE: 2019-04-25 17:00:00TAGS:-JAVASCRIPT-CLOSURECATEGORIES: JAVASCRIPTPASSWORD: TGFEABSTRACT: WELCOME TO MY BLOG, ENTER PASSWORD TO R...","isCollected":false},{"collectionCount":2,"userRankIndex":2.3086902928294,"buildTime":1568694074.8501,"commentsCount":2,"gfw":false,"objectId":"5d229748f265da1bbb03fd9b","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1568851514,"verifyStatus":true,"tags":[{"ngxCachedTime":1568851407,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"updatedAt":"2019-09-17T04:21:14.831Z","rankIndex":0.00037450351125747,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d229738f265da1b715317b7","verifyCreatedAt":"2019-07-08T01:37:34.347Z","createdAt":"2019-07-08T01:37:34.347Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKNKDcLB0SYsib4bSY0tHI8k8aPT9BljuiaZUQ2X6YWRfhSZ4jcicBZI3uNHfVOWMHhGxKQXg3C5ARFA/132"}},"collectedEntriesCount":41,"company":"","followersCount":1295,"followeesCount":50,"role":"guest","postedPostsCount":39,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":34,"ngxCachedTime":1568851513,"ngxCached":true,"viewedEntriesCount":789,"jobTitle":"ioser","subscribedTagsCount":24,"totalCollectionsCount":200,"username":"ityongzhen","avatarLarge":"https://mirror-gold-cdn.xitu.io/169f31ce0ff77d391fc","objectId":"5ca8bb9c6fb9a05e620b8abf"},"author":"","screenshot":"","original":true,"hotIndex":24.1205,"content":"假设我们定义一个这样的函数，要求 如果第1个数大于0，返回第一个数。否则返回第2个数 更多资料，欢迎关注个人公众号，不定时分享各种技术文章。","title":"Swift之闭包(Closure)","lastCommentTime":"2019-07-08T10:02:01.800Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851427},"viewsCount":386,"summaryInfo":"我们定义如下的函数 exec ，它接收三个参数，分别为两个Int 和一个函数，而且这个函数，接收两个Int 参数，返回一个Int结果，exec 的作用就是，把前两个参数传给第三个参数(也就是函数)去执行，然后结果打印出来 当然了，我们可以省略很多，如下 假设我们有个包含Int元素的数组，想对立面的...","isCollected":false},{"collectionCount":2,"userRankIndex":1.8265274460423,"buildTime":1572476308.3181,"commentsCount":1,"gfw":false,"objectId":"5cd534a1f265da037875b297","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T22:58:28.300Z","rankIndex":0.000032550748603927,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cd5348af265da03502b55e6","verifyCreatedAt":"2019-05-10T10:54:14.283Z","createdAt":"2019-05-10T10:54:14.283Z","user":{"community":{"github":{"username":"csming1995","avatarLarge":"https://avatars3.githubusercontent.com/u/22711291?v=4","uid":"22711291"}},"collectedEntriesCount":212,"company":"Xiamen Meitu Technology","followersCount":5,"followeesCount":55,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":11,"ngxCachedTime":1572571656,"viewedEntriesCount":1167,"jobTitle":"Android开发工程师","subscribedTagsCount":31,"totalCollectionsCount":55,"username":"csming1995","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/24/169b03d987a87664?w=1024&h=1024&f=jpeg&s=252110","objectId":"595ae7f85188250d991823c9"},"author":"","screenshot":"","original":true,"hotIndex":6.9232,"content":"说到JavaScript的闭包，需要先说一说JavaScript的作用域。 JavaScript在ECMA6之前，作用域是只有全局作用域跟函数作用域的。（这里先不涉及let和const） 函数内部可以读取器外部作用域定义的变量，而外部作用域不能直接读取到函数中定义的变量。 上述…","title":"JavaScript的闭包及函数重载","lastCommentTime":"2019-05-12T23:56:15.574Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":72,"summaryInfo":"说到JavaScript的闭包，需要先说一说JavaScript的作用域。 JAVASCRIPT在ECMA6之前，作用域是只有全局作用域跟函数作用域的。（这里先不涉及LET和CONST） 函数内部可以读取器外部作用域定义的变量，而外部作用域不能直接读取到函数中定义的变量。 上述例子中，函数f1在运...","isCollected":false},{"collectionCount":2,"userRankIndex":2.0542066537398,"buildTime":1572498588.4007,"commentsCount":0,"gfw":false,"objectId":"5d11c4c2f265da1bad5713bc","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T05:09:48.376Z","rankIndex":0.000071814347966092,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d11c4ab51882532774ee611","verifyCreatedAt":"2019-06-25T06:54:28.501Z","createdAt":"2019-06-25T06:54:28.501Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXMniasIBZSeZgD4uU0hf9P9BxSdcmQ3CVmv9nlm7q1ukeEm8F5z0peAy1HhQ5Ac7z3lYicOzRkiavg/132"}},"collectedEntriesCount":60,"company":"","followersCount":6,"followeesCount":18,"role":"guest","postedPostsCount":13,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571655,"viewedEntriesCount":986,"jobTitle":"前端程序员","subscribedTagsCount":25,"totalCollectionsCount":19,"username":"焦糖丶瓜子","avatarLarge":"https://user-gold-cdn.xitu.io/2018/4/3/1628c3ae865643c3?w=997&h=998&f=jpeg&s=271694","objectId":"5a17dcf8f265da431955f64b"},"author":"","screenshot":"","original":true,"hotIndex":10.169,"content":"1、每次新创建的一个执行上下文会被添加到作用域链的顶部，有时也称为执行或调用栈。浏览器总是运行位于作用域链顶部的当前执行上下文。一旦完成，当前执行上下文将从栈顶被移除并且将控制权归还给之前的执行上下文。 2、不同执行上下文之间的变量命名冲突通过攀爬作用域链解决，从局部直到全局。…","title":"JavaScript之闭包、this和作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":156,"summaryInfo":"","isCollected":false},{"collectionCount":2,"userRankIndex":4.1285338740544,"buildTime":1571369950.1016,"commentsCount":0,"gfw":false,"objectId":"5d1df018f265da1b6d40432f","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-18T03:39:10.086Z","rankIndex":0.000086167423928633,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d1defb7f265da1ba4320bcf","verifyCreatedAt":"2019-07-04T15:46:11.536Z","createdAt":"2019-07-04T15:46:11.536Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJzclnib5T7k2n9aqe5ekmtnaU2iaibf638DKCVga60FW1yszKCSevFo9pmYX2ib3ygDmhYibkohw7Wxg/132"}},"collectedEntriesCount":146,"company":"某数据公司","followersCount":37,"followeesCount":63,"role":"guest","postedPostsCount":15,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":10,"ngxCachedTime":1572571655,"ngxCached":true,"viewedEntriesCount":2742,"jobTitle":"前端自学工程师","subscribedTagsCount":22,"totalCollectionsCount":56,"username":"Chris_Ping","avatarLarge":"https://user-gold-cdn.xitu.io/2019/6/16/16b5f86b3cefb9c8?w=471&h=511&f=jpeg&s=48232","objectId":"5ba431c76fb9a05cdc498586"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/7/4/16bbcf0898b6c9c2?w=500&h=413&f=jpeg&s=17202","original":true,"hotIndex":6.8556,"content":"foo 函数可以访问变量 a，但是 a 既不是 foo 函数的局部变量，也不是 foo 函数的参数，所以我们说 a 就是自由变量，那么函数 foo 就形成了一个闭包。 所以在《 JavaScript权威指南 》中讲到：从技术的角度讲，所有的 JavaScript 函数都是闭包。…","title":"JavaScript基础专题之闭包（四）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571582},"viewsCount":94,"summaryInfo":"foo 函数可以访问变量 a，但是 a 既不是 foo 函数的局部变量，也不是 foo 函数的参数，所以我们说 a 就是自由变量，那么函数 foo 就形成了一个闭包。 所以在《 JavaScript权威指南 》中讲到：从技术的角度讲，所有的 JavaScript 函数都是闭包。 在ECMAScri...","isCollected":false},{"collectionCount":2,"userRankIndex":0,"buildTime":1571106120.8883,"commentsCount":0,"gfw":false,"objectId":"5d2a0460e51d4555fc1acd34","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571654,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T02:22:00.869Z","rankIndex":0.00014774224538422,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d29d7f5e51d45778f076dc7","verifyCreatedAt":"2019-07-14T04:35:32.272Z","createdAt":"2019-07-14T04:35:32.272Z","user":{"community":null,"collectedEntriesCount":0,"company":"八流小公司","followersCount":2,"followeesCount":4,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":2,"ngxCachedTime":1572571654,"viewedEntriesCount":334,"jobTitle":"前端开发","subscribedTagsCount":1,"totalCollectionsCount":5,"username":"mjw10086","avatarLarge":"https://user-gold-cdn.xitu.io/2019/7/7/16bc862c0da01e16?w=768&h=512&f=jpeg&s=42619","objectId":"5b29313a6fb9a00e925bd289"},"author":"","screenshot":"","original":true,"hotIndex":15.5664,"content":"闭包是js的一个语言特性，谈起它首先要从作用域出发。 好了，可以看到第一个a的作用域是全局，而在echoA_again()里又声明一个a，此时这个a的作用域仅存在于该函数中，而且从console.log(b)中我们可以发现，作用域内部定义的变量，作用域外无法访问。 好了，那么问…","title":"白话js闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":254,"summaryInfo":"闭包是js的一个语言特性，谈起它首先要从作用域出发。 好了，可以看到第一个a的作用域是全局，而在echoA_again()里又声明一个a，此时这个a的作用域仅存在于该函数中，而且从console.log(b)中我们可以发现，作用域内部定义的变量，作用域外无法访问。 好了，那么问题开始，再没有Com...","isCollected":false},{"collectionCount":2,"userRankIndex":0,"buildTime":1572437912.303,"commentsCount":0,"gfw":false,"objectId":"5d86f22de51d4561c94b1094","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572570974,"verifyStatus":true,"tags":[{"ngxCachedTime":1572570927,"ngxCached":true,"title":"Scala","id":"56822a2f60b2690c5d200cc7"}],"updatedAt":"2019-10-30T12:18:32.285Z","rankIndex":0.00014508731967334,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d8593956fb9a06ada54ec74","verifyCreatedAt":"2019-09-22T15:49:52.010Z","createdAt":"2019-09-22T15:49:52.010Z","user":{"community":null,"collectedEntriesCount":3,"company":"","followersCount":52,"followeesCount":0,"role":"guest","postedPostsCount":86,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":4,"ngxCachedTime":1572570940,"ngxCached":true,"viewedEntriesCount":57,"jobTitle":"https://github.com/heibaiying","subscribedTagsCount":3,"totalCollectionsCount":24,"username":"heibaiying","avatarLarge":"https://user-gold-cdn.xitu.io/2019/9/21/16d51d9b014c34fc?w=380&h=380&f=jpeg&s=35021","objectId":"5c43e3886fb9a049d13270f0"},"author":"","screenshot":"","original":true,"hotIndex":3.9794,"content":"Scala 中函数与方法的区别非常小，如果函数作为某个对象的成员，这样的函数被称为方法，否则就是一个正常的函数。 multi2 和 multi3 本质上没有区别，这是因为函数是一等公民，val multi2 = (x: Int) => {x * x} 这个语句相当于是使用 de…","title":"Scala 系列（十）—— 函数 & 闭包 & 柯里化","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572570858},"viewsCount":34,"summaryInfo":"Scala 中函数与方法的区别非常小，如果函数作为某个对象的成员，这样的函数被称为方法，否则就是一个正常的函数。 和 本质上没有区别，这是因为函数是一等公民， 这个语句相当于是使用 预先定义了函数，之后赋值给变量 。 上面我们说过 和 本质上是一样的，那么作为函数它们是什么类型的？两者的类型实际上...","isCollected":false},{"collectionCount":2,"userRankIndex":0,"buildTime":1571101516.4432,"commentsCount":2,"gfw":false,"objectId":"5cc42cab518825250f48aac7","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:05:16.426Z","rankIndex":0.000031586922411405,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cc418be6fb9a0322b5c0165","verifyCreatedAt":"2019-04-27T12:47:59.373Z","createdAt":"2019-04-27T12:47:59.373Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIh7nr2xpvwRpw8WBflJw6bmartZ6pabfK6wNcyicPeWZWGdNic0ZSoq4xElehkB565bfjiaYGuWiceSw/132"}},"collectedEntriesCount":8,"company":"小公司","followersCount":22,"followeesCount":10,"role":"guest","postedPostsCount":23,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":8,"ngxCachedTime":1572571656,"viewedEntriesCount":493,"jobTitle":"小公司的螺丝钉","subscribedTagsCount":22,"totalCollectionsCount":76,"username":"海明月","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/27/16a5da9e13d05e73?w=1923&h=2560&f=jpeg&s=2946556","objectId":"59f962826fb9a0450670f048"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/4/27/16a5e4df179bf14b?w=670&h=380&f=jpeg&s=25892","original":true,"hotIndex":8.2721,"content":"张无忌： “全都记得。” 张三丰： “啊，已经忘了一大半。” 张无忌： “已经全都忘了，忘得干干净净。” 1. 从现在开始，忘了什么是闭包，因为闭包本来就是一个抽象的概念，我们只去了解它的使用场景和作用 javascript中有个作用域的概念。 关于作用域，你必须要知道的是: …","title":"5分钟了解闭包的概念","lastCommentTime":"2019-09-13T22:09:30.460Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571582},"viewsCount":77,"summaryInfo":"张三丰： “啊，已经忘了一大半。” 张三丰： “不坏不坏，忘得真快，那么现在呢？” 张无忌： “已经全都忘了，忘得干干净净。” 1. 从现在开始，忘了什么是闭包，因为闭包本来就是一个抽象的概念，我们只去了解它的使用场景和作用 javascript中有个执行上下文的概念。 关于作用域，你必须要知道的...","isCollected":false},{"collectionCount":2,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1570543661.6542,"checkStatus":true,"objectId":"5b6837fb51882519a62f8987","entryView":"","subscribersCount":0,"ngxCachedTime":1570753408,"verifyStatus":true,"tags":[{"ngxCachedTime":1570753405,"ngxCached":true,"title":"Scala","id":"56822a2f60b2690c5d200cc7"},{"ngxCachedTime":1570753381,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1570753374,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"}],"isEvent":false,"rankIndex":0.000015129122935751,"hot":false,"updatedAt":"2019-10-08T14:07:41.635Z","originalUrl":"https://juejin.im/post/5b6837c6f265da0f9c67c547","verifyCreatedAt":"2018-08-07T02:12:17.079Z","createdAt":"2018-08-07T02:12:17.079Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/86pkScSSYvJBltQteNlofu1OIyp9ch7qWVSsIaLVl68epZLMaB6B2VqchoYnZSGNyeTrtG3P5FyKVeoicHfZSNw/132"}},"collectedEntriesCount":3,"company":"shopee","followersCount":726,"followeesCount":0,"role":"guest","postedPostsCount":11,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":5,"ngxCachedTime":1570753374,"ngxCached":true,"viewedEntriesCount":120,"jobTitle":"python开发","subscribedTagsCount":12,"totalCollectionsCount":170,"username":"大蟒传奇","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08dac710de0140d","objectId":"5a6846faf265da3e5033ede6"},"author":"","screenshot":"","original":true,"hotIndex":15.7251,"content":"(x: Int) => x > 0中，唯一在函数体x > 0中用到的变量是x，即这个函数的唯一参数。 (x: Int) => x + more，这个函数将more也作为入参，不过这个参数是哪里来的？从这个函数的角度来看，more是一个自由变量，因为函数字面量本身并没有给more…","title":"Scala中的闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1570753388},"viewsCount":262,"summaryInfo":"在Scala中，函数引入传入的参数是再正常不过的事情了，比如中，唯一在函数体中用到的变量是x，即这个函数的唯一参数。 除此之外，Scala还支持引用其他地方定义的变量：，这个函数将也作为入参，不过这个参数是哪里来的？从这个函数的角度来看，more是一个自由变量，因为函数字面量本身并没有给more赋...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1572409129.5287,"commentsCount":0,"gfw":false,"objectId":"5db1b3ba6fb9a0206e1fe0dc","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T04:18:49.512Z","rankIndex":0.0041867491159472,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5db1a67451882564912fbf85","verifyCreatedAt":"2019-10-26T15:02:37.763Z","createdAt":"2019-10-26T15:02:37.763Z","user":{"community":null,"collectedEntriesCount":11,"company":"","followersCount":0,"followeesCount":13,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571656,"viewedEntriesCount":138,"jobTitle":"","subscribedTagsCount":11,"totalCollectionsCount":1,"username":"meteornight","avatarLarge":"https://user-gold-cdn.xitu.io/2019/10/18/16ddf43ad8a3beaf?w=640&h=641&f=png&s=528589","objectId":"5ce262095188254cb83e3a64"},"author":"","screenshot":"","original":true,"hotIndex":3.3548,"content":"1. 什么是闭包 我们不在某个函数的lexical scope中执行它，也就是说，我们不在定义这个函数的环境中执行它，这个时候就产生了闭包。 所以，闭包出现在js的很多地方，当我们把函数作为值传递的时候，大多数情况下就是在使用闭包。 你看，我们在global环境下执行了bar(…","title":"当我们讨论闭包的时候，其实在讨论变量和内存","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":37,"summaryInfo":"YOU DON'T KNOW JS定义为：我们不在某个函数的lexical scope中执行它，也就是说，我们不在定义这个函数的环境中执行它，这个时候就产生了闭包。 所以，闭包出现在js的很多地方，当我们把函数作为值传递的时候，大多数情况下就是在使用闭包。 你看，我们在global环境下执行了，而...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1571540657.6933,"commentsCount":0,"gfw":false,"objectId":"5d649dce6fb9a06b102738bb","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1571965491,"verifyStatus":true,"tags":[{"ngxCachedTime":1571965395,"ngxCached":true,"title":"SwiftUI","id":"5cf60ac6f265da189f85d83a"}],"updatedAt":"2019-10-20T03:04:17.676Z","rankIndex":0.00016313284726166,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d649dbe6fb9a06b2548f3cf","verifyCreatedAt":"2019-08-27T03:28:22.206Z","createdAt":"2019-08-27T03:28:22.206Z","user":{"community":null,"collectedEntriesCount":3,"company":"","followersCount":1,"followeesCount":0,"role":"guest","postedPostsCount":4,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1571965491,"viewedEntriesCount":40,"jobTitle":"","subscribedTagsCount":6,"totalCollectionsCount":4,"username":"young_cowboy","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/25/16cc8622b229dca6?w=640&h=640&f=jpeg&s=75417","objectId":"5d61fedc5188253761069ce0"},"author":"","screenshot":"","original":true,"hotIndex":7.6164,"content":"在 SwiftUI 里闭包出现的频率特别高，这里我重新梳理了下闭包的定义。","title":"SwiftUI 里的 swift 闭包总结","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1571965458},"viewsCount":119,"summaryInfo":"在 SwiftUI 里闭包出现的频率特别高，这里我重新梳理了下闭包的定义。 闭包表达式写在花括号({})里，关键字in用来分隔闭包的参数、返回值与闭包体内的语句 在声明式的 UI 创建里大量使用闭包，比如 这里创建 View、Button 都使用了闭包，看了下 Button 的实现，如下 在 in...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1571106117.9043,"commentsCount":0,"gfw":false,"objectId":"5d2cb855f265da1bbe5e3574","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T02:21:57.879Z","rankIndex":0.000059982728339757,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d2b4d25e51d454f723025a3","verifyCreatedAt":"2019-07-16T02:40:06.134Z","createdAt":"2019-07-16T02:40:06.134Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/k5r6L01rTcMqDdHrs2qPuohfp8RApLcq0dCPFR5z4UyB3uh2nX8DVQSEeZia5gG7oEL3b6oypdicernb5Jh43hmA/132"}},"collectedEntriesCount":29,"company":"前端打杂","followersCount":3,"followeesCount":27,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571626,"ngxCached":true,"viewedEntriesCount":532,"jobTitle":"打杂","subscribedTagsCount":26,"totalCollectionsCount":1,"username":"我真的不会敲代码","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/19/16acf8c306534cb0?w=819&h=819&f=jpeg&s=180827","objectId":"5be1b685518825171c6afe3b"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/7/16/16bf6af3025e9379?w=750&h=422&f=jpeg&s=45306","original":true,"hotIndex":6.1251,"content":"最近在看《你不知道的JavaScript》的第一卷，写文章总结一下自己的感悟。 作用域本质就是程序源代码中定义变量的区域，它可以解释为一套规则，是关于JS引擎如何寻找变量以及会在何处找到变量的规则。 从大的方面来讲，作用域分为两种，分别是词法作用域和动态作用域，两者的区别是词法…","title":"Javascript中的作用域和闭包详解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":85,"summaryInfo":"作用域可以解释为一套规则，是关于JS引擎如何寻找变量以及会在何处找到变量的规则。 从大的方面来讲，作用域分为两种，分别是词法作用域和动态作用域，两者的区别是词法作用域是在写代码时就确定了作用域（不使用eval和with的前提下），即静态作用域，而动态作用域是在代码运行时动态确定的。包括JS在内的大...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1572309858.4456,"commentsCount":0,"gfw":false,"objectId":"5d50d9d6e51d453bc52315f3","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-29T00:44:18.427Z","rankIndex":0.00010664569338311,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d50d5ddf265da03a715c59c","verifyCreatedAt":"2019-08-14T07:12:05.315Z","createdAt":"2019-08-14T07:12:05.315Z","user":{"community":{"github":{"username":"ladny","avatarLarge":"https://avatars1.githubusercontent.com/u/10241942?v=4","uid":"10241942"}},"collectedEntriesCount":11,"company":"","followersCount":8,"followeesCount":5,"role":"guest","postedPostsCount":12,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571656,"viewedEntriesCount":109,"jobTitle":"前端开发工程师","subscribedTagsCount":20,"totalCollectionsCount":17,"username":"前端娃娃","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e084b73f19e1622e","objectId":"59157fe144d904006c4b0d6f"},"author":"","screenshot":"","original":true,"hotIndex":8.2704,"content":"count作为一个全局变量，其他地方都可以对它进行操作，如果其他地方对count重新赋值或者重新定义count，那么这个计时器就被破坏了。这时候，闭包就起作用了。 可以看到，如果外界想访问list变量，只能通过我定义的函数isFirstLoad来进行访问，我对想访问list的外…","title":"javascript之闭包六（闭包的作用与注意事项）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571582},"viewsCount":137,"summaryInfo":" 可以看到，如果外界想访问list变量，只能通过我定义的函数isFirstLoad来进行访问，我对想访问list的外界只提供了isFirstLoad这一个接口。至于怎么操作_list，我已经定义好了，外界能做的就只是使用我的函数，然后传几个不同的参数罢了。   最后顺便说一下，作用域链是在定义的时...","isCollected":false},{"collectionCount":1,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1569664977.7127,"checkStatus":true,"objectId":"5cafc451f265da0389328263","entryView":"","subscribersCount":0,"ngxCachedTime":1570415415,"verifyStatus":true,"tags":[{"ngxCachedTime":1570415394,"ngxCached":true,"title":"Ruby","id":"555e9a7de4b00c57d9955dbe"}],"updatedAt":"2019-09-28T10:02:57.695Z","rankIndex":0.000022133496555997,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cafc4385188251b006f7634","verifyCreatedAt":"2019-04-12T04:05:23.456Z","createdAt":"2019-04-12T04:05:23.456Z","user":{"community":{"github":{"username":"lanzhiheng","avatarLarge":"https://avatars3.githubusercontent.com/u/8858472?v=4","uid":"8858472"}},"collectedEntriesCount":111,"company":"Beansmile","followersCount":48,"followeesCount":7,"role":"guest","postedPostsCount":28,"level":2,"isAuthor":false,"postedEntriesCount":8,"totalCommentsCount":41,"ngxCachedTime":1570415415,"viewedEntriesCount":603,"jobTitle":"Web开发工程师","subscribedTagsCount":3,"totalCollectionsCount":299,"username":"lanzhiheng","avatarLarge":"https://leancloud-gold-cdn.xitu.io/2pf124PAeNgqKAQiqTzIGkB","objectId":"57cbf918a0bb9f007f4b1f57"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/4/12/16a0e96aa159de56?w=672&h=447&f=jpeg&s=192635","original":true,"hotIndex":5.7321,"content":"在许多编程语言中都会有闭包这个概念。今天主要来谈谈Ruby中的闭包，它在这门语言中地位如何，以什么形式存在，主要用途有哪些? 看起来很复杂是吧？其实我也看不太懂，建议英文不好的人还是学我去看中文版。通俗来讲，闭包就是一个函数，它可以跟外部作用域打交道，访问并修改外部作用域的变量…","title":" Ruby 中的闭包-代码块","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1570415400},"viewsCount":80,"summaryInfo":"在许多编程语言中都会有闭包这个概念。今天主要来谈谈Ruby中的闭包，它在这门语言中地位如何，以什么形式存在，主要用途有哪些? 看起来很复杂是吧？其实我也看不太懂，建议英文不好的人还是学我去看中文版。通俗来讲，闭包就是一个函数，它可以跟外部作用域打交道，访问并修改外部作用域的变量。在我们所熟悉的Ja...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1571101945.2997,"commentsCount":0,"gfw":false,"objectId":"5cdd46976fb9a0323120b5e3","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:12:25.281Z","rankIndex":0.000019976856414707,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cdd4688518825686b121023","verifyCreatedAt":"2019-05-16T15:51:38.727Z","createdAt":"2019-05-16T15:51:38.727Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erJpZhhpSkqZCsoiczzVNPEkzM3xiawF2tprv0C21QXwVcmtRib9HohmCewgrXsibUq1fmnQTRMBYwaLg/132"},"github":{"username":"klivitam-Jiang","avatarLarge":"https://avatars0.githubusercontent.com/u/38111357?v=4","uid":"38111357"}},"collectedEntriesCount":53,"company":"不知名公司","followersCount":69,"followeesCount":4,"role":"guest","postedPostsCount":47,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":29,"ngxCachedTime":1572571542,"ngxCached":true,"viewedEntriesCount":166,"jobTitle":"android/前端工程师","subscribedTagsCount":49,"totalCollectionsCount":225,"username":"klivitamJ","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/16/16ac04f5f078c09f?w=340&h=237&f=jpeg&s=43308","objectId":"599ed5fdf265da2491510a00"},"author":"","screenshot":"","original":true,"hotIndex":4.3769,"content":"谈到作用域这一块，很多人其实都不怎么熟悉这一块，我今天趁着闲暇跟大家来扯一扯。 js(es6以前)没有块级作用域（你可以自己闭包或其他方法实现），只有函数级作用域，函数外面的变量函数里面可以找到，函数里面的变量外面找不到。 从上面的代码我们可以清楚的看出：最外层函数定义的变量拥…","title":"关于作用域、变量提升和闭包的理解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":62,"summaryInfo":"谈到作用域这一块，很多人其实都不怎么熟悉这一块，我今天趁着闲暇跟大家来扯一扯。 js(es6以前)没有块级作用域（你可以自己闭包或其他方法实现），只有函数级作用域，函数外面的变量函数里面可以找到，函数里面的变量外面找不到。 从上面的代码我们可以清楚的看出：最外层函数定义的变量拥有全局作用域，即对任...","isCollected":false},{"collectionCount":1,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572433961.6028,"checkStatus":true,"objectId":"5cb97c9df265da03914d5d49","entryView":"","subscribersCount":0,"ngxCachedTime":1572571657,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T11:12:41.585Z","rankIndex":0.0000083309045520175,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cb97c25f265da0387339bf0","verifyCreatedAt":"2019-04-20T09:51:53.414Z","createdAt":"2019-04-20T09:51:53.414Z","user":{"community":null,"collectedEntriesCount":23,"company":"","followersCount":8,"followeesCount":18,"role":"guest","postedPostsCount":14,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":4,"ngxCachedTime":1572571584,"ngxCached":true,"viewedEntriesCount":1071,"jobTitle":"","subscribedTagsCount":27,"totalCollectionsCount":69,"username":"林晨熙","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/31/169d18b885e51ade?w=180&h=180&f=jpeg&s=36224","objectId":"5ad6157951882555700686e9"},"author":"","screenshot":"","original":true,"hotIndex":2.6283,"content":"闭包，相信第一次接触到这个词的同学，都会觉得一脸懵逼，这是啥玩意儿，好高端的样子。看看书看看报，闭包似乎没有那么难。 在认识闭包之前，更应该认识与闭包息息相关的执行上下文和作用域链。 闭包简单粗暴的说就是能够访问其他函数内部变量的函数，更确切的说，闭包不是指某一个具体的东西，而…","title":"JavaScript中的闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571582},"viewsCount":21,"summaryInfo":"闭包，相信第一次接触到这个词的同学，都会觉得一脸懵逼，这是啥玩意儿，好高端的样子。看看书看看报，闭包似乎没有那么难。 在认识闭包之前，更应该认识与闭包息息相关的执行上下文和作用域链。 闭包简单粗暴的说就是能够访问其他函数内部变量的函数，更确切的说，闭包不是指某一个具体的东西，而是指由这个函数以及创...","isCollected":false},{"collectionCount":1,"userRankIndex":5.8380451654058,"buildTime":1570457752.1759,"commentsCount":0,"gfw":false,"objectId":"5d50d9aa5188250e42582c90","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572484316,"verifyStatus":true,"tags":[{"ngxCachedTime":1572484204,"ngxCached":true,"title":"iOS","id":"5597838ae4b08a686ce23139"}],"updatedAt":"2019-10-07T14:15:52.156Z","rankIndex":0.000276320176792,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d50d959e51d45620064bb19","verifyCreatedAt":"2019-08-13T08:45:08.124Z","createdAt":"2019-08-13T08:45:08.124Z","user":{"community":{"github":{"username":"cocos543","avatarLarge":"https://avatars0.githubusercontent.com/u/7421499?v=4","uid":"7421499"}},"collectedEntriesCount":2,"company":"","followersCount":17,"followeesCount":10,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":4,"ngxCachedTime":1572484316,"viewedEntriesCount":114,"jobTitle":"iOS工程师","subscribedTagsCount":7,"totalCollectionsCount":26,"username":"cocos543","avatarLarge":"https://mirror-gold-cdn.xitu.io/16c21c2e7057fdbd09c","objectId":"5d37bf325188257dfe3c886a"},"author":"","screenshot":"","original":true,"hotIndex":7.5119,"content":"OC为用户提供了一套观察者模式(KVO), 当对象的某些属性发生变化之后, 就会向所有观察者(observer)广播消息, 具体的KVO基本用法这里就不说了. 下面主要说一下为系统的KVO功能添加block的思路, 先看一下最终的API: 其中有一个参数是content, 允许…","title":"为系统的KVO功能添加Block(闭包)特性","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1572484198},"viewsCount":126,"summaryInfo":"原创文章首发本人博客:http://blog.cocosdever.com/2019/07/03/Let-the-system-s-kvo-also-support-block   OC为用户提供了一套观察者模式(KVO), 当对象的某些属性发生变化之后, 就会向所有观察者(observer)广播...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1572417419.2471,"commentsCount":0,"gfw":false,"objectId":"5d9a031ef265da5b783efe3d","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T06:36:59.231Z","rankIndex":0.00060825211708632,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d99ff2751882561ba64ad6c","verifyCreatedAt":"2019-10-06T16:27:15.460Z","createdAt":"2019-10-06T16:27:15.460Z","user":{"community":{"weibo":{"selfDescription":"","uid":"1845418154","blogAddress":"http://weibo.com/u/1845418154","username":"渔获飞","avatarLarge":"https://tvax1.sinaimg.cn/crop.0.0.996.996.180/6dfed8aaly8fmcl8501agj20ro0ro40s.jpg?KID=imgbed,tva&Expires=1572369499&ssig=e2FTHEGSsh"}},"collectedEntriesCount":8,"company":"","followersCount":1,"followeesCount":11,"role":"guest","postedPostsCount":9,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571656,"viewedEntriesCount":101,"jobTitle":"","subscribedTagsCount":27,"totalCollectionsCount":1,"username":"渔获飞","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08d1930438bde2d","objectId":"5a4c29316fb9a0450a67ba31"},"author":"","screenshot":"","original":true,"hotIndex":8.2157,"content":"闭包（closure）是Javascript语言的一个难点，也是它的特色，很多高级应用都要依靠闭包实现。 要理解闭包，首先必须理解Javascript特殊的变量作用域。 变量的作用域无非就是两种：全局变量和局部变量。 Javascript语言的特殊之处，就在于函数内部可以直接读…","title":"Javascript闭包（Closure）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":139,"summaryInfo":"闭包（closure）是Javascript语言的一个难点，也是它的特色，很多高级应用都要依靠闭包实现。 要理解闭包，首先必须理解Javascript特殊的变量作用域。 变量的作用域无非就是两种：全局变量和局部变量。 Javascript语言的特殊之处，就在于函数内部可以直接读取全局变量。 另一方...","isCollected":false},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0}]