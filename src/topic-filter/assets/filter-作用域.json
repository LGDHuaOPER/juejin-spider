[{"collectionCount":630,"commentsCount":36,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571726,"updatedAt":"2019-10-31T12:45:31.366Z","tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"59aa7bb96fb9a0249c007e18","rankIndex":0.00044629264527094,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/59aa71d56fb9a0248d24fae3","buildTime":1572525931.3822,"createdAt":"2017-09-02T09:36:57.121Z","user":{"community":{"weibo":{"selfDescription":"黑化的相学长","uid":"1778623604","blogAddress":"http://weibo.com/xiangxuezhang","username":"相学长","avatarLarge":"https://tvax2.sinaimg.cn/crop.0.0.1342.1342.180/6a03a474ly8fgpaf6uqn5j211a11adi2.jpg?KID=imgbed,tva&Expires=1569435685&ssig=H7TwCRzOf6"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erQsDLG3OGjr36ASEJ4PTefryysnibLlbOfm8AfasogNF3ZrEo0TmJw9rcVCmlquNOicUX19qn3wj9Q/132"},"github":{"username":"wuomzfx","avatarLarge":"https://avatars3.githubusercontent.com/u/8017237?v=4","uid":"8017237"}},"collectedEntriesCount":77,"company":"蚂蚁金服","followersCount":3455,"followeesCount":81,"role":"editor","postedPostsCount":16,"level":3,"isAuthor":true,"postedEntriesCount":6,"totalCommentsCount":318,"ngxCachedTime":1572571726,"viewedEntriesCount":2161,"jobTitle":"前端","subscribedTagsCount":12,"totalCollectionsCount":3002,"username":"相学长","avatarLarge":"https://user-gold-cdn.xitu.io/2017/6/22/851377d22c5c7561ca1635154a564cd1","objectId":"58f876dc5c497d0058e38ae1"},"author":"","screenshot":"","original":true,"hotIndex":1163.3077,"content":"日常开发中，我们经常用到this。例如用Jquery绑定事件时，this指向触发事件的DOM元素；编写Vue、React组件时，this指向组件本身。对于新手来说，常会用一种意会的感觉去判断this的指向。以至于当遇到复杂的函数调用时，就分不清this的真正指向。 本文将通过两道…","title":"从这两套题，重新认识JS的this、作用域、闭包、对象","lastCommentTime":"2019-06-02T23:25:49.217Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":9939,"summaryInfo":"日常开发中，我们经常用到this。例如用Jquery绑定事件时，this指向触发事件的DOM元素；编写Vue、React组件时，this指向组件本身。对于新手来说，常会用一种意会的感觉去判断this的指向。以至于当遇到复杂的函数调用时，就分不清this的真正指向。 本文将通过两道题去慢慢分析thi...","isCollected":false},{"collectionCount":602,"commentsCount":15,"gfw":false,"entryView":"58a0bc9c570c350057781fd6","subscribersCount":10,"ngxCachedTime":1572571727,"updatedAt":"2019-10-31T14:33:10.611Z","tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58a0bc942f301e0069ed6d55","rankIndex":0.0002728268505344,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/21a16d44f150","buildTime":1572532390.6294,"createdAt":"2017-02-12T19:50:44.804Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/zfXNHMZo2ErRIT1HQnFdMGztfE0UP7WKodoOl43IWvCaicqX8eQAUGRQN22XNibicULEAibOMxI4mDUDfveia0zH52A/132"},"github":{"username":"yangbo5207","avatarLarge":"https://avatars3.githubusercontent.com/u/13758605?v=4","uid":"13758605"}},"collectedEntriesCount":110,"company":"公号: 梧桐Luo","followersCount":2168,"followeesCount":3,"role":"editor","postedPostsCount":11,"level":3,"isAuthor":true,"postedEntriesCount":17,"totalCommentsCount":314,"ngxCachedTime":1572571727,"viewedEntriesCount":1981,"jobTitle":"大前端实践者","subscribedTagsCount":14,"totalCollectionsCount":5990,"username":"这波能反杀","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/27/16cd165de9836f74?w=400&h=400&f=jpeg&s=31859","objectId":"577a770ea633bd00573520f7"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/d6258f6d88601c26902b.png","original":false,"hotIndex":1000.4534,"content":"详细图解，彻底搞懂闭包与作用域链","title":"前端基础进阶：详细图解，彻底搞懂闭包与作用域链","lastCommentTime":"2018-04-28T10:32:45.210Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":7657,"summaryInfo":"初学JavaScript的时候，我在学习闭包上，走了很多弯路。而这次重新回过头来对基础知识进行梳理，要讲清楚闭包，也是一个非常大的挑战。 闭包有多重要？如果你是初入前端的朋友，我没有办法直观的告诉你闭包在实际开发中的无处不在，但是我可以告诉你，前端面试，必问闭包。面试官们常常用对闭包的了解程度来判...","isCollected":false},{"collectionCount":437,"commentsCount":19,"gfw":false,"entryView":"58fcdf2bda2f60005dc5ef78","subscribersCount":19,"ngxCachedTime":1571356579,"updatedAt":"2019-10-17T13:33:55.420Z","tags":[{"ngxCachedTime":1571356565,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1571356579,"ngxCached":true,"title":"掘金技术征文","id":"585232a2570c350069e4c796"}],"objectId":"58fcdf2ba22b9d0065a3a93f","rankIndex":0.00030016678149097,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/58fc8594a0bb9f0065bf806e","buildTime":1571319235.4368,"createdAt":"2017-04-23T17:06:51.726Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqZRNKFaufpr5TAuZl5dM3mhl9icepYFb381gwfeaUgyfBjoHDagZibH9vNywru4TmoQ57ibgib11FoOQ/132"}},"collectedEntriesCount":274,"company":"趣头条","followersCount":6286,"followeesCount":35,"role":"editor","postedPostsCount":24,"level":5,"isAuthor":true,"postedEntriesCount":0,"totalCommentsCount":622,"ngxCachedTime":1571356579,"viewedEntriesCount":5712,"jobTitle":"前端开发","subscribedTagsCount":46,"totalCollectionsCount":8832,"username":"混元霹雳手","avatarLarge":"https://user-gold-cdn.xitu.io/2018/10/19/16689c32752108ff?w=891&h=892&f=jpeg&s=217734","objectId":"580327ee0e3dd900570cf3ab"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/9a22df922ec1d9223caa.jpg","original":true,"hotIndex":963.8604,"content":"作者 混元霹雳手-Ziksang 如果你学完这篇文章之后，你回答完面试官之后，拿一张图告诉面试官 在于前端面试，你给面试官讲一些官方名词，我知道react,vue,angular等等，一系列牛B的框架，对于面试来说并没有卵用，听多了！！有些有是报着真诚的找工作的态度，有些人只是…","title":"我认真起来连面试官都怕（块级作用域，事件代理）","lastCommentTime":"2019-03-09T14:42:45.551Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1571356479},"viewsCount":10148,"summaryInfo":"如果你学完这篇文章之后，你回答完面试官之后，拿一张图告诉面试官 在于前端面试，你给面试官讲一些官方名词，我知道react,vue,angular等等，一系列牛B的框架，对于面试来说并没有卵用，听多了！！有些有是报着真诚的找工作的态度，有些人只是想面面现在的水平如何，但是我想大家肯定都想在面试官面前...","isCollected":false},{"collectionCount":363,"commentsCount":7,"gfw":false,"entryView":"58a9a390128fe10064a36a23","subscribersCount":4,"ngxCachedTime":1572571627,"updatedAt":"2019-10-29T13:29:56.406Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571508,"ngxCached":true,"title":"Chrome","id":"555e9ae0e4b00c57d99562ee"}],"objectId":"58a9a3848d6d8100583acbf4","rankIndex":0.00016538566017531,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/73122bb3d262","buildTime":1572355796.4235,"createdAt":"2017-02-19T13:54:12.399Z","user":{"community":{"github":{"username":"yangbo5207","avatarLarge":"https://avatars3.githubusercontent.com/u/13758605?v=4","uid":"13758605"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/zfXNHMZo2ErRIT1HQnFdMGztfE0UP7WKodoOl43IWvCaicqX8eQAUGRQN22XNibicULEAibOMxI4mDUDfveia0zH52A/132"}},"collectedEntriesCount":110,"company":"公号: 梧桐Luo","followersCount":2168,"followeesCount":3,"role":"editor","postedPostsCount":11,"level":3,"isAuthor":true,"postedEntriesCount":17,"totalCommentsCount":314,"ngxCachedTime":1572571626,"ngxCached":true,"viewedEntriesCount":1981,"jobTitle":"大前端实践者","subscribedTagsCount":14,"totalCollectionsCount":5990,"username":"这波能反杀","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/27/16cd165de9836f74?w=400&h=400&f=jpeg&s=31859","objectId":"577a770ea633bd00573520f7"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/0baa5ad7866944db0025.png","original":false,"hotIndex":598.4094,"content":"与大家分享如何利用 chrome 的开发者工具，进行代码的断点调试，观察函数调用栈，作用域链，闭包，this 等关键信息。","title":"前端高手必备技能：如何在 chrome 开发者工具中观察函数调用栈、作用域链与闭包","lastCommentTime":"2018-04-28T10:33:47.737Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":4558,"summaryInfo":"在前端开发中，有一个非常重要的技能，叫做断点调试。 在chrome的开发者工具中，通过断点调试，我们能够非常方便的一步一步的观察JavaScript的执行过程，直观感知函数调用栈，作用域链，变量对象，闭包，this等关键信息的变化。因此，断点调试对于快速定位代码错误，快速了解代码的执行过程有着非常...","isCollected":false},{"collectionCount":254,"autoPass":false,"commentsCount":41,"gfw":false,"buildTime":1572512088.751,"checkStatus":true,"objectId":"5b0566d0f265da0b75287ceb","entryView":"","subscribersCount":0,"ngxCachedTime":1572571736,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.00029785960615857,"hot":false,"updatedAt":"2019-10-31T08:54:48.732Z","originalUrl":"https://juejin.im/post/5b04fe58518825672f1a3aa3","verifyCreatedAt":"2018-05-24T03:59:09.789Z","createdAt":"2018-05-24T03:59:09.789Z","user":{"community":{"github":{"username":"Darcy-Yang","avatarLarge":"https://avatars1.githubusercontent.com/u/25116606?v=4","uid":"25116606"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/BDX9R059nicBy28orVTtIW9mhqGRdpPuMMEGQrdyZ0s1MQDCJT1BzHL6Q0I6o3typXEpLVibbib3VZf60W4qVMepA/132"}},"collectedEntriesCount":110,"company":"Teambition","followersCount":589,"followeesCount":15,"role":"guest","postedPostsCount":8,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":37,"ngxCachedTime":1572571729,"ngxCached":true,"viewedEntriesCount":697,"jobTitle":"前端工程师","subscribedTagsCount":5,"totalCollectionsCount":776,"username":"卡布奇诺有点苦","avatarLarge":"https://user-gold-cdn.xitu.io/2018/2/7/1616c522e48c81fb","objectId":"5a79172051882528b63fda94"},"author":"","screenshot":"","original":true,"hotIndex":421.574,"content":"而引用类型就是传说中的 Object 了。 其中基本类型是按值传递，而引用类型的值是按引用访问的，所以在操作对象时，实际上是在操作对象的引用而不是实际的对象 ( ps：在为对象添加属性时，操作的是实际的对象 )。 1、引用类型是动态的属性，而基本类型不是。 2、复制的方式不同。…","title":"JS 底蕴之 变量、作用域和垃圾回收","lastCommentTime":"2019-03-25T10:08:13.703Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":2517,"summaryInfo":"在 js 中，数据类型分为基本类型和引用类型， 基本类型有六种：NULL，UNDEFINED，STRING，BOOLEAN，NUMBER，SYMBOL； 而引用类型就是传说中的 OBJECT 了。 其中基本类型是按值传递，而引用类型的值是按引用访问的，所以在操作对象时，实际上是在操作对象的引用而不...","isCollected":false},{"collectionCount":211,"commentsCount":2,"gfw":false,"entryView":"57f5e89367f356005857f66a","subscribersCount":1,"ngxCachedTime":1572571629,"updatedAt":"2019-10-29T12:55:14.195Z","tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"57f5d492bf22ec006475238f","rankIndex":0.000098746407695899,"hot":false,"autoPass":false,"originalUrl":"http://blog.xieliqun.com/2016/10/05/scope-chain/","buildTime":1572353714.2133,"createdAt":"2016-10-06T04:35:30.285Z","user":{"community":{"github":{"username":"tsrot","avatarLarge":"https://avatars1.githubusercontent.com/u/13428605?v=4","uid":"13428605"}},"collectedEntriesCount":63,"company":"创业小公司","followersCount":778,"followeesCount":6,"role":"guest","postedPostsCount":2,"level":2,"isAuthor":true,"postedEntriesCount":10,"totalCommentsCount":367,"ngxCachedTime":1572571564,"ngxCached":true,"viewedEntriesCount":1096,"jobTitle":"一个经常背锅的产品","subscribedTagsCount":33,"totalCollectionsCount":2154,"username":"tsrot","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0832315e55ca447","objectId":"57de2bcaa0bb9f00589e05bd"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/2d7648b7296f1e21ea82.jpg","original":true,"hotIndex":434.2375,"content":"作用域是每种计算机语言最重要的基础之一，当然它也是 JavaScript 最重要的概念之一。要想真正的深入了解 JavaScript，了解 JavaScript 的作用域链非常必要。现在让我们深入了解 JavaScript 作用域和作用域链的工作原理。","title":"深入了解 JavaScript，从作用域链开始（1）","lastCommentTime":"2018-03-17T18:37:02.658Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":4421,"summaryInfo":"作用域是每种计算机语言最重要的基础之一，当然它也是JavaScript最重要的概念之一。要想真正的深入了解JavaScript，了解JavaScript的作用域链非常必要。现在让我们深入了解JavaScript作用域和作用域链的工作原理。 作用域，在维基百科上解释是：在电脑程序设计中，作用域（sc...","isCollected":false},{"collectionCount":184,"isEvent":false,"commentsCount":36,"gfw":false,"buildTime":1572524327.0013,"checkStatus":true,"objectId":"5c490802f265da61290a7e27","entryView":"","subscribersCount":0,"ngxCachedTime":1572571731,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-31T12:18:46.984Z","rankIndex":0.0010922861698607,"hot":false,"autoPass":true,"originalUrl":"https://juejin.im/post/5c4907ce6fb9a049ee80ce47","verifyCreatedAt":"2019-01-24T00:34:10.345Z","createdAt":"2019-01-24T00:34:10.345Z","user":{"community":{"github":{"username":"yygmind","avatarLarge":"https://avatars0.githubusercontent.com/u/18049290?v=4","uid":"18049290"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq9pa0CKXV7he92fIgiciaH6tibnq9Licjj1UoeG2hNNjQicI1kt8gCvKywBJpicyR7p3gDplVFmEHW0dCQ/132"}},"collectedEntriesCount":110,"company":"前网易","followersCount":23751,"followeesCount":19,"role":"editor","postedPostsCount":43,"level":6,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":791,"ngxCachedTime":1572571637,"ngxCached":true,"viewedEntriesCount":4116,"jobTitle":"资深前端开发","subscribedTagsCount":20,"totalCollectionsCount":14959,"username":"木易杨说","avatarLarge":"https://user-gold-cdn.xitu.io/2018/10/19/16689e2bb057f60d?w=400&h=400&f=jpeg&s=16335","objectId":"56dea4aa7664bf00559f002d"},"author":"","screenshot":"","original":true,"hotIndex":603.4267,"content":"JavaScript语言是“动态”或“解释执行”语言，但事实上是一门编译语言。但它不是提前编译的，编译结果也不能在分布式系统中移植。 传统编译语言流程中，程序在执行之前会经历三个步骤，统称为“编译”。 将由字符组成的字符串分解成（对编程语言来说）有意义的代码块。 上面这段程序会…","title":"精华提炼「你不知道的 JavaScript」之作用域和闭包","lastCommentTime":"2019-02-03T11:32:57.645Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":7649,"summaryInfo":"JavaScript语言是“动态”或“解释执行”语言，但事实上是一门编译语言。但它不是提前编译的，编译结果也不能在分布式系统中移植。 传统编译语言流程中，程序在执行之前会经历三个步骤，统称为“编译”。 1.2.3 LHS和RHS查询 和分别代表一个赋值操作的左侧和右侧，当变量出现在赋值操作的左侧时...","isCollected":false},{"collectionCount":177,"autoPass":true,"commentsCount":9,"gfw":false,"buildTime":1572559110.7501,"checkStatus":true,"objectId":"5afb0b5b51882542c832e8cc","entryView":"","subscribersCount":0,"ngxCachedTime":1572571734,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571725,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"}],"isEvent":false,"rankIndex":0.00031092223909393,"hot":false,"updatedAt":"2019-10-31T21:58:30.731Z","originalUrl":"https://juejin.im/post/5afb0ae56fb9a07aa2138425","verifyCreatedAt":"2018-05-15T16:31:23.251Z","createdAt":"2018-05-15T16:31:23.251Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKgrcbDrMyBCG6vxECP7hQH7Iw5WA3ibsJjvlOXY7qGY2L8apE71M2ibXv69HPvlBQRu0Vo2X1Hic7g/132"}},"collectedEntriesCount":293,"company":"","followersCount":599,"followeesCount":17,"role":"editor","postedPostsCount":4,"level":3,"isAuthor":true,"postedEntriesCount":11,"totalCommentsCount":52,"ngxCachedTime":1572571634,"ngxCached":true,"viewedEntriesCount":2820,"jobTitle":"一个爱学习的前端程序员。","subscribedTagsCount":74,"totalCollectionsCount":2045,"username":"lce_shou","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/9bbd2572fb8bc98df074a515fa2181ef","objectId":"57ccbfab165abd0068f2e8db"},"author":"","screenshot":"","original":true,"hotIndex":451.4487,"content":"这两天刚好和朋友讨论到闭包，这个JavaScript中的“神兽”，很多同学会觉得闭包这玩意太闹心了，怎么着都理解不了...其实刚接触JavaScript的时候我也是这样的。 但是呢，闭包却非常重要！非常重要！非常重要！ 在《你不知道的JavaScript》中甚至这样写道“对于那…","title":"深入理解闭包之前置知识→作用域与词法作用域","lastCommentTime":"2019-03-26T17:37:26.497Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":5293,"summaryInfo":"这两天刚好和朋友讨论到闭包，这个JavaScript中的“神兽”，很多同学会觉得闭包这玩意太闹心了，怎么着都理解不了...其实刚接触JavaScript的时候我也是这样的。 但是呢，闭包却非常重要！非常重要！非常重要！ 在《你不知道的JavaScript》中甚至这样写道“对于那些有一点 JAVAS...","isCollected":false},{"collectionCount":173,"commentsCount":6,"gfw":false,"entryView":"58500a23ac502e00693c3159","subscribersCount":4,"ngxCachedTime":1572571741,"updatedAt":"2019-10-31T14:26:03.857Z","tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58500a21128fe10069319e4f","rankIndex":0.000084162583559918,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/58500a02128fe10069319d83","buildTime":1572531963.8733,"createdAt":"2016-12-13T14:48:01.738Z","user":{"community":{"weibo":{"selfDescription":"阿里影业开发专家，熟悉 Java、.NET、前端 技术栈，微信公众号「劼哥舍」、知识星球「劼哥每日分享」。","uid":"1760390531","blogAddress":"http://weibo.com/605494869","username":"劼哥stone","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.230.230.180/68ed6d83jw8f9tb21rgdrj206f06fgm4.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/e2wPCUDXuVOian5kP0wFt9Y6n2vzCqM3VLZf2WEDxTBjh5ib2kvrXjibkGicBlx39YDHvEpCkHMVnicYJbCaqDDkb8Q/132"},"github":{"uid":"1546345","bio":"no pain, no gain.","avatar_url":"https://avatars.githubusercontent.com/u/1546345?v=3","username":"stone0090","nickname":"stone","html_url":"https://github.com/stone0090"}},"collectedEntriesCount":54,"company":"阿里影业","followersCount":3125,"followeesCount":0,"role":"editor","postedPostsCount":24,"level":3,"isAuthor":true,"postedEntriesCount":8,"totalCommentsCount":95,"ngxCachedTime":1572571698,"ngxCached":true,"viewedEntriesCount":328,"jobTitle":"开发专家","subscribedTagsCount":9,"totalCollectionsCount":3659,"username":"劼哥stone","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/890e8c0215457a0c341649142c5ab836","objectId":"57b83a6fa633bd0066590d37"},"author":"","screenshot":"","original":true,"hotIndex":337.6571,"content":"作用域和闭包是 JavaScript 最重要的概念之一，想要进一步学习 JavaScript，就必须理解 JavaScript 作用域和闭包的工作原理。 作用域 任何程序设计语言都有作用域的概念，简单的说，作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命…","title":"《JavaScript 闯关记》之作用域和闭包","lastCommentTime":"2016-12-14T14:41:24.614Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":3155,"summaryInfo":"作用域和闭包是 JavaScript 最重要的概念之一，想要进一步学习 JavaScript，就必须理解 JavaScript 作用域和闭包的工作原理。 任何程序设计语言都有作用域的概念，简单的说，作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命周期。在 JavaScrip...","isCollected":false},{"collectionCount":165,"commentsCount":2,"gfw":false,"entryView":"568a978d60b24d71feca15bd","subscribersCount":1,"ngxCachedTime":1572571741,"updatedAt":"2019-10-27T14:01:38.583Z","tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"568a4e2460b24d71fec78e64","rankIndex":0.000054585915529659,"hot":true,"autoPass":false,"originalUrl":"http://blog.rainy.im/2015/07/04/scope-chain-and-prototype-chain-in-js/","buildTime":1572184898.6001,"createdAt":"2016-01-04T10:49:08.082Z","user":{"community":{"weibo":{"selfDescription":"V E N I  V I D I  V I C I","uid":"5936053572","blogAddress":"http://weibo.com/u/5936053572","username":"owl_宗","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.1328.1328.180/006tJ4Hyjw8f4s7lz60snj310w10wacw.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLevUE3gfUicnkM5VPtsRP2TQ7kku7vqEOV1A8APf3WmKw5IXDa6Cs8ra7ibOTGjTjDVOSPhSKm8A9A/132"},"github":{"username":"zongkelong","avatarLarge":"https://avatars3.githubusercontent.com/u/4134954?v=3","uid":"4134954"}},"collectedEntriesCount":582,"company":"","followersCount":1338,"followeesCount":55,"role":"editor","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":18,"totalCommentsCount":58,"ngxCachedTime":1572571741,"viewedEntriesCount":2264,"jobTitle":"前端工头","subscribedTagsCount":240,"totalCollectionsCount":1801,"username":"山东老汉","avatarLarge":"https://user-gold-cdn.xitu.io/2018/9/21/165fa471a4696ab8?w=567&h=568&f=jpeg&s=164880","objectId":"564c385760b2260e5bb09329"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/40564a9e898208c931b3.png","original":false,"hotIndex":333.3791,"content":"比较好的讲解 JS 的 this 问题","title":"图解 JS 上下文与作用域","lastCommentTime":"2017-06-18T08:21:27.080Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":3315,"summaryInfo":"本文尝试阐述Javascript中的上下文与作用域背后的机制，主要涉及到执行上下文（execution context）、作用域链（scope chain）、闭包（closure）、等概念。 执行上下文（简称上下文）决定了Js执行过程中可以获取哪些变量、函数、数据，一段程序可能被分割成许多不同的上...","isCollected":false},{"collectionCount":151,"commentsCount":2,"gfw":false,"entryView":"","subscribersCount":3,"ngxCachedTime":1572571633,"updatedAt":"2019-10-27T09:21:21.919Z","tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"581efc505bbb500059e6ce24","rankIndex":0.000055033486125005,"hot":false,"autoPass":false,"originalUrl":"https://i-solar.github.io/2016/11/05/%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%97%AD%E5%8C%85%EF%BC%8C%E4%BD%A0%E7%9C%9F%E7%9A%84%E6%87%82%E4%BA%86%E5%90%97%EF%BC%9F-JavaScript/","buildTime":1572168081.9358,"createdAt":"2016-11-06T09:48:00.434Z","user":{"community":{"github":{"username":"vabaly","avatarLarge":"https://avatars2.githubusercontent.com/u/11691664?v=4","uid":"11691664"}},"collectedEntriesCount":34,"company":"腾讯","followersCount":12,"followeesCount":5,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":3,"ngxCachedTime":1572571633,"viewedEntriesCount":796,"jobTitle":"前端工程师","subscribedTagsCount":53,"totalCollectionsCount":192,"username":"vabaly","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/25/16cc6e0617a83cc3?w=2079&h=2599&f=jpeg&s=1765225","objectId":"57fc4381da2f60004fa61944"},"author":"","screenshot":"","original":true,"hotIndex":231.261,"content":"曾几何时，闭包好像就是一个十分难以捉摸透的东西，看了很多文章，对闭包都各有说法，以致让我十分晕，什么内部变量、外部变量的，而且大多数都只描述一个过程，没有给闭包的定义，最后，举几个例子，告诉你这就是闭包。于是乎，我从来都是带有疑问使用闭包的：闭包是指作用域，还是指函数，还是指访问外部变量的过程？还有外部变量有多外面？直到最近的学习，我才渐渐清晰……","title":"作用域闭包，你真的懂了吗？","lastCommentTime":"2016-11-09T08:54:20.421Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":1547,"summaryInfo":"","isCollected":false},{"collectionCount":133,"isEvent":false,"commentsCount":15,"gfw":false,"buildTime":1571998233.6672,"checkStatus":true,"objectId":"5c8857a05188257e1916c005","entryView":"","subscribersCount":0,"ngxCachedTime":1572096455,"verifyStatus":true,"tags":[{"ngxCachedTime":1572096367,"ngxCached":true,"title":"前端框架","id":"55978433e4b0c4d3e6fddcb1"},{"ngxCachedTime":1572096413,"ngxCached":true,"title":"掘金翻译计划","id":"56b5a7f3df0eea00544e1993"}],"updatedAt":"2019-10-25T10:10:33.652Z","rankIndex":0.0010427889059865,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c8856e6e51d456b30397f31","verifyCreatedAt":"2019-03-13T03:51:48.971Z","createdAt":"2019-03-13T03:51:48.971Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/4DYyxiajEvcFUicSvJlQHH5ULrFAhE7jONFLcic7lo4Pz1UMHsZMcJXiaZqiaLVLKCeXKTs5BpfJulrp6oV5ibT6d9Tg/132"}},"collectedEntriesCount":0,"company":"","followersCount":1232,"followeesCount":0,"role":"guest","postedPostsCount":5,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":10,"ngxCachedTime":1572096450,"ngxCached":true,"viewedEntriesCount":296,"jobTitle":"数据全栈工程师","subscribedTagsCount":1,"totalCollectionsCount":177,"username":"cyril_lee","avatarLarge":"","objectId":"5934f017570c35005b57a06c"},"author":"","screenshot":"","original":true,"hotIndex":417.4011,"content":"Vue 是一个用于构建 Web 应用程序的前端框架，其设计方式使得开发人员可以非常快速地提高工作效率。该框架的各个方面都有很多资料，它的社区也每天都在不断成长。如果你读到了这篇文章，那么这些事儿你很可能已经知道咯。 虽然我们可以快速直接地启动并运行它，但是框架里面那些更复杂和更…","title":"[译] 我最终是怎么玩转了 Vue 的作用域插槽","lastCommentTime":"2019-03-17T02:06:15.663Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572096455},"viewsCount":5373,"summaryInfo":"Vue 是一个用于构建 Web 应用程序的前端框架，其设计方式使得开发人员可以非常快速地提高工作效率。该框架的各个方面都有很多资料，它的社区也每天都在不断成长。如果你读到了这篇文章，那么这些事儿你很可能已经知道咯。 虽然我们可以快速直接地启动并运行它，但是框架里面那些更复杂和更强大的地方还是需要好...","isCollected":false},{"collectionCount":130,"isEvent":false,"commentsCount":18,"gfw":false,"buildTime":1572531715.2079,"checkStatus":true,"objectId":"5c8f013ef265da68141661c1","entryView":"","subscribersCount":0,"ngxCachedTime":1572571630,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":false,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T14:21:55.190Z","rankIndex":0.00092191960026937,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c8efeb1e51d45614372addd","verifyCreatedAt":"2019-03-18T02:31:54.442Z","createdAt":"2019-03-18T02:31:54.442Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/XLP5eraRg1tOk0iabyF6f19P1xw6eyI3twspwXK8OKY7uNQdhzDMlQp8cKqqe5Pfxsu8HeNhoUMFGT3skZCmMqQ/132"},"github":{"username":"roger-hiro","avatarLarge":"https://avatars1.githubusercontent.com/u/19751684?v=4","uid":"19751684"}},"collectedEntriesCount":120,"company":"","followersCount":11903,"followeesCount":58,"role":"guest","postedPostsCount":25,"level":5,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":568,"ngxCachedTime":1572571545,"ngxCached":true,"viewedEntriesCount":7031,"jobTitle":"首席摸鱼官","subscribedTagsCount":7,"totalCollectionsCount":11794,"username":"前端劝退师","avatarLarge":"https://user-gold-cdn.xitu.io/2018/8/8/1651a3326f837aaf?w=687&h=640&f=jpeg&s=249766","objectId":"57bd1bdfd342d3006bf76a52"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/3/18/1698eaebec854a93?w=1920&h=1080&f=jpeg&s=119155","original":true,"hotIndex":372.033,"content":"掘金上关于作用域和作用域链的讨论非常多，但少有人来讲清楚JS中相关的机制，这里我就捡一些大佬们看剩的知识，来讲讲理解作用域之前的准备。 想直接看解析的请跳到：2. JavaScript是如何执行的? 1. 理解前的普及：编译原理 把词法单元流数组转换成一个由元素逐级嵌套所组成的…","title":"为何你始终理解不了JavaScript作用域链？","lastCommentTime":"2019-08-26T18:05:37.033Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":4477,"summaryInfo":"想直接看解析的请跳到：2. JavaScript是如何执行的? 把词法单元流数组转换成一个由元素逐级嵌套所组成的代表程序语法结构的树，这个树被称为“抽象语法树” (Abstract Syntax Tree, 简称AST)。 将抽象语法树（AST）转换为一组机器指令，也就是可执行代码，简单说，就是用...","isCollected":false},{"collectionCount":127,"autoPass":false,"commentsCount":7,"gfw":false,"buildTime":1571809971.4137,"checkStatus":true,"objectId":"5ac234f76fb9a028b92d4f71","entryView":"","subscribersCount":0,"ngxCachedTime":1572571750,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571702,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571636,"ngxCached":true,"title":"求职","id":"584628d92f301e005c17064c"}],"isEvent":false,"rankIndex":0.00014178622129161,"hot":false,"updatedAt":"2019-10-23T05:52:51.397Z","originalUrl":"https://github.com/prettyEcho/deep-js/issues/3","verifyCreatedAt":"2018-04-03T10:42:21.636Z","createdAt":"2018-04-03T10:42:21.636Z","user":{"community":{"github":{"username":"prettyEcho","avatarLarge":"https://avatars1.githubusercontent.com/u/22290721?v=4","uid":"22290721"}},"collectedEntriesCount":29,"company":"去哪儿","followersCount":250,"followeesCount":1,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":5,"totalCommentsCount":28,"ngxCachedTime":1572571631,"ngxCached":true,"viewedEntriesCount":236,"jobTitle":"前端工程师","subscribedTagsCount":40,"totalCollectionsCount":387,"username":"prettyEcho","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e087bc66990960f4","objectId":"599b891551882524316f3d5a"},"author":"","screenshot":null,"original":false,"hotIndex":225.5748,"content":"关于JS作用域，你需要知道的一切","title":"想成为JS大牛，作用域是你必须知道的","lastCommentTime":"2018-04-08T22:32:03.148Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":1823,"summaryInfo":"我们常说，万物都有其存在的价值，这话的确不错，但是深思一下，是不是需要有个前提，万物都在某些领域或多或少的存在某些价值。 举个例子，汽车，绝对是个非常有价值的stuff，它给我们的日常出行，货物运输等带来了极大的便利；筷子，同样也是个非常有价值的stuff，它给我们吃饭带来了极大的方便。但是，汽车...","isCollected":false},{"collectionCount":125,"commentsCount":0,"gfw":false,"entryView":"57f74129a22b9d005be8ce2c","subscribersCount":0,"ngxCachedTime":1572571635,"updatedAt":"2019-10-13T09:00:04.192Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"57f661e28ac24700589ffb81","rankIndex":0.000044971813791632,"hot":false,"autoPass":false,"originalUrl":"http://blog.xieliqun.com/2016/10/06/scope-chain-2/","buildTime":1570957204.2121,"createdAt":"2016-10-06T14:38:26.978Z","user":{"community":{"github":{"username":"tsrot","avatarLarge":"https://avatars1.githubusercontent.com/u/13428605?v=4","uid":"13428605"}},"collectedEntriesCount":63,"company":"创业小公司","followersCount":778,"followeesCount":6,"role":"guest","postedPostsCount":2,"level":2,"isAuthor":true,"postedEntriesCount":10,"totalCommentsCount":367,"ngxCachedTime":1572571629,"ngxCached":true,"viewedEntriesCount":1096,"jobTitle":"一个经常背锅的产品","subscribedTagsCount":33,"totalCollectionsCount":2154,"username":"tsrot","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0832315e55ca447","objectId":"57de2bcaa0bb9f00589e05bd"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/de251dbbf787ec6dd14f.jpg","original":true,"hotIndex":193.3817,"content":"作为一个良好的开发者必需考虑程序的运行性能，作用域链的层级关系是 JavaScript 性能优化的一个重要部分。因为这关系到变量在内存里的读写速度。","title":"深入了解 JavaScript，优化作用域链（2）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":1364,"summaryInfo":"作为一个良好的开发者必需考虑程序的运行性能，作用域链的层级关系是JavaScript性能优化的一个重要部分。因为这关系到变量在内存里的读写速度。 从作用域链的结构可以看出，在执行上下文的作用域链中，标识符所在的位置越深，读写速度就会越慢。 全局变量总是存在于执行上下文作用域链的最末端，因此在标识符...","isCollected":false},{"collectionCount":120,"commentsCount":3,"gfw":false,"entryView":"5770fe4079bc44005b084efc","subscribersCount":2,"ngxCachedTime":1572571753,"updatedAt":"2019-10-22T03:31:33.920Z","tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"5770a7c8128fe1005a3a381f","rankIndex":0.000041237732168087,"hot":false,"autoPass":false,"originalUrl":"https://github.com/dreamapplehappy/hacking-with-javascript/blob/master/translate/everything-you-wanted-to-know-about-javascript-scope.md","buildTime":1571715093.9369,"createdAt":"2016-06-27T04:12:56.508Z","user":{"community":{"github":{"username":"dreamapplehappy","avatarLarge":"https://avatars2.githubusercontent.com/u/7955228?v=4","uid":"7955228"}},"collectedEntriesCount":124,"company":"公司","followersCount":128,"followeesCount":1,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":27,"totalCommentsCount":50,"ngxCachedTime":1572571753,"viewedEntriesCount":924,"jobTitle":"职位","subscribedTagsCount":10,"totalCollectionsCount":2069,"username":"dreamappleapple","avatarLarge":"https://user-gold-cdn.xitu.io/2017/4/16/e3a9889f74a2c093d442238131e651b7.png","objectId":"57321de0df0eea00633737ca"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/b5536166fcd2fbb3682f.png","original":true,"hotIndex":204.5844,"content":"深入理解关于 JavaScript 的作用域","title":"你想知道的关于 JavaScript 作用域的一切 (译)","lastCommentTime":"2019-08-15T21:01:25.002Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":1613,"summaryInfo":"JavaScript中有许多章节是关于的,但是对于初学者来说(甚至是一些有经验的JavaScript开发者),这些有关作用域的章节既不直接也不容易理解.这篇文章的目的就是为了帮助那些想更深一步学习了解JavaScript作用域的开发者,尤其是当他们听到一些关于作用域的单词的时候,好比:,,,,,,...","isCollected":false},{"collectionCount":114,"commentsCount":1,"gfw":false,"entryView":"583fbf0ea22b9d007a824ae7","subscribersCount":1,"ngxCachedTime":1572571758,"updatedAt":"2019-10-29T11:32:54.158Z","tags":[{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"583f9eaa128fe1006c341be0","rankIndex":0.000043438733044141,"hot":false,"autoPass":false,"originalUrl":"https://segmentfault.com/a/1190000007650548","buildTime":1572348774.1754,"createdAt":"2016-12-01T03:53:14.840Z","user":{"community":{"github":{"username":"Val-Zhang","avatarLarge":"https://avatars0.githubusercontent.com/u/15924149?v=4","uid":"15924149"}},"collectedEntriesCount":12,"company":"知乎","followersCount":32,"followeesCount":1,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":6,"totalCommentsCount":2,"ngxCachedTime":1572571758,"viewedEntriesCount":84,"jobTitle":"前端开发工程师","subscribedTagsCount":35,"totalCollectionsCount":250,"username":"zhangwang123","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082e5c63a055c6c","objectId":"57996b787db2a2005a33b76f"},"author":"","screenshot":"","original":false,"hotIndex":176.8488,"content":"JavaScript 的作用域和闭包是一个老生常谈的问题，但是这篇总结文章把这两个讲透了，值得推荐。","title":"弄懂 JavaScript 的作用域和闭包","lastCommentTime":"2016-12-01T07:13:07.495Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":1234,"summaryInfo":"《你不知道的JavaScript》真的是一本好书，阅读这本书，我有多次“哦，原来是这样”的感觉，以前自以为理解了（其实并非真的理解）的概念，这一次真的理解得更加透彻了。关于本书，我会写好几篇读书笔记用以记录那些让我恍然大悟的瞬间，本文是第一篇《弄懂JavaScript的作用域和闭包》。 很久以来我...","isCollected":false},{"collectionCount":111,"commentsCount":6,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571631,"updatedAt":"2019-10-31T13:56:08.972Z","tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571588,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"objectId":"59905c3b5188257d4c7778a3","rankIndex":0.00011185128210502,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/59905bea6fb9a03c34192c51","buildTime":1572530168.9911,"createdAt":"2017-08-13T14:03:39.838Z","user":{"community":{"github":{"username":"wxyyxc1992","avatarLarge":"https://avatars2.githubusercontent.com/u/5803001?v=4","uid":"5803001"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEICdFPkonHCc3EGibFJQwex8XstXV2CVr9qvlt6aJrI5xINiaKMA0jfAgkfsXQ51D8dKR2JlPmz2WCw/132"}},"collectedEntriesCount":327,"company":"上海联泰科技","followersCount":11955,"followeesCount":12,"role":"editor","postedPostsCount":83,"level":4,"isAuthor":true,"postedEntriesCount":256,"totalCommentsCount":233,"ngxCachedTime":1572571551,"ngxCached":true,"viewedEntriesCount":210,"jobTitle":"写代码的","subscribedTagsCount":39,"totalCollectionsCount":18256,"username":"王下邀月熊","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082b8d4e30c0d01","objectId":"57600ea72e958a0058f6ac24"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/8/13/a99348acd906718ab4649b816b25a3e9","original":true,"hotIndex":302.6286,"content":" ES6 变量作用域与提升：变量的生命周期详解从属于笔者的现代 JavaScript 开发：语法基础与实践技巧系列文章。本文详细讨论了 JavaScript 中作用域、执行上下文、不同作用域下变量提升与函数提升的表现、顶层对象以及如何避免创建全局对象等内容；建议阅读前文 ES6 …","title":"ES6 变量作用域与提升：变量的生命周期详解","lastCommentTime":"2019-09-05T11:51:42.502Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":3711,"summaryInfo":"在 ES6 之前，JavaScript 中只存在着函数作用域；而在 ES6 中，JavaScript 引入了 let、const 等变量声明关键字与块级作用域，在不同作用域下变量与函数的提升表现也是不一致的。在 JavaScript 中，所有绑定的声明会在控制流到达它们出现的作用域时被初始化；这里...","isCollected":false},{"collectionCount":108,"commentsCount":5,"gfw":false,"entryView":"5903795661ff4b00669cb79d","subscribersCount":5,"ngxCachedTime":1572571750,"updatedAt":"2019-10-30T18:00:24.271Z","tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571684,"ngxCached":true,"title":"程序员","id":"55c1748160b28fd99e49ea68"}],"objectId":"59037956da2f60005df58516","rankIndex":0.000070697400985977,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/590324e661ff4b0066977c85","buildTime":1572458424.2886,"createdAt":"2017-04-28T17:18:14.692Z","user":{"community":{"weibo":{"selfDescription":"种一棵树最好的时间是在十年前,其次就是现在了。","uid":"5468303800","blogAddress":"http://weibo.com/u/5468303800","username":"OBKoro1","avatarLarge":"http://tvax4.sinaimg.cn/crop.24.0.1194.1194.180/005Y4rColy8fm4g2lvey9j30yi0x6gp5.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/qPic9iawDn2EsFybdibyLqo3XibRznQzPoV4T9W9pqaCBKgF7ELibsic721ibrXBBIuvm3C0U8UfsC2wFIymiaGKYz5n8g/132"},"github":{"username":"OBKoro1","avatarLarge":"https://avatars1.githubusercontent.com/u/24698201?v=4","uid":"24698201"}},"collectedEntriesCount":266,"company":"上海","followersCount":15914,"followeesCount":29,"role":"editor","postedPostsCount":71,"level":6,"isAuthor":true,"postedEntriesCount":8,"totalCommentsCount":1037,"ngxCachedTime":1572571707,"ngxCached":true,"viewedEntriesCount":7837,"jobTitle":"前端","subscribedTagsCount":29,"totalCollectionsCount":21077,"username":"OBKoro1","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/22/1607d2bb387d545d?w=1920&h=1080&f=jpeg&s=343675","objectId":"58714f0eb123db4a2eb95372"},"author":"","screenshot":"","original":true,"hotIndex":230.0925,"content":"写在前面： 是想写一个闭包的，因为写的比较细，基于篇幅，所以闭包前面关于变量的部分就单独发出来，到时候放个链接引进来，js 闭包虽然是一个被讲烂的东西，但其实很多人刚接触这个概念也不太懂，所以希望写一篇接地气，能够让一个从前不知道这个内容的小伙伴能够清楚的理解闭包这个东西。so，…","title":"js 变量的作用域详解、生存周期，以及一些小细节。","lastCommentTime":"2019-04-11T02:44:37.558Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":2335,"summaryInfo":"是想写一个闭包的，因为写的比较细，基于篇幅，所以闭包前面关于变量的部分就单独发出来，到时候放个链接引进来，js闭包虽然是一个被讲烂的东西，但其实很多人刚接触这个概念也不太懂，所以希望写一篇接地气，能够让一个从前不知道这个内容的小伙伴能够清楚的理解闭包这个东西。so，本文是基于闭包的变量部分。 变量...","isCollected":false},{"collectionCount":104,"commentsCount":2,"gfw":false,"entryView":"592d298444d90400644f8377","subscribersCount":3,"ngxCachedTime":1572571636,"updatedAt":"2019-10-29T03:10:46.696Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"592d298344d90400644f8373","rankIndex":0.000056127353663606,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/592d29290ce463005798cb54","buildTime":1572318646.7119,"createdAt":"2017-05-30T08:12:51.925Z","user":{"community":{"weibo":{"uid":"1936502837","nickname":"halfrost"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEK1icEMNxEL8YGCLulF2Bn18J0f4h6diavN1ccc2nfVOgicCZubvgmWiaXtQTw7murxqKNLu2uYyiaRKgg/132"},"github":{"uid":"10825609","nickname":"halfrost","username":"halfrost","avatar_url":"https://avatars1.githubusercontent.com/u/10825609?v=3","bio":"iOS developer from China","html_url":"https://github.com/halfrost"}},"collectedEntriesCount":212,"company":"饿了么","followersCount":10067,"followeesCount":59,"role":"editor","postedPostsCount":66,"level":4,"isAuthor":true,"postedEntriesCount":15,"totalCommentsCount":325,"ngxCachedTime":1572571596,"ngxCached":true,"viewedEntriesCount":1408,"jobTitle":"菜鸟 gopher，前端未入门工程师","subscribedTagsCount":48,"totalCollectionsCount":5944,"username":"一缕殇流化隐半边冰霜","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/13/1604e9a80b2d7c1a?w=640&h=640&f=jpeg&s=97700","objectId":"5692e1e000b09aa2e8dcd422"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/96a526d1236cad9bc80d.png","original":true,"hotIndex":172.8105,"content":"目录 1. 静态作用域与动态作用域 2. 变量的作用域 3.JavaScript 中变量的作用域 4.JavaScript 欺骗作用域 5.JavaScript 执行上下文 6.JavaScript 中的作用域链 7.JavaScript 中的闭包 8.JavaScript 中的模…","title":"从 JavaScript 作用域说开去","lastCommentTime":"2017-05-31T09:57:29.167Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":1321,"summaryInfo":"在电脑程序设计中，作用域（scope，或译作有效范围）是名字（name）与实体（entity）的绑定（binding）保持有效的那部分计算机程序。不同的编程语言可能有不同的作用域和名字解析。而同一语言内也可能存在多种作用域，随实体的类型变化而不同。作用域类别影响变量的绑定方式，根据语言使用静态作用...","isCollected":false},{"collectionCount":101,"commentsCount":6,"gfw":false,"entryView":"58749ab5a22b9d0058a1b03e","subscribersCount":5,"ngxCachedTime":1572571755,"updatedAt":"2019-10-21T08:01:11.760Z","tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58749ab08d6d810058a203f1","rankIndex":0.000050153670294124,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/ffa126731b1c","buildTime":1571644871.7753,"createdAt":"2017-01-10T08:26:24.626Z","user":{"community":{"weibo":{"selfDescription":"热爱生活，心系未来，好好学习✧٩(ˊωˋ*)و✧","uid":"5322642628","blogAddress":"http://weibo.com/u/5322642628","username":"挺问中圆","avatarLarge":"https://tva3.sinaimg.cn/crop.159.0.361.361.180/005OdguEjw8ezsjmtqn4dg30i30a9qv6.gif?KID=imgbed,tva&Expires=1571385661&ssig=MCil7sHxkm"},"github":{"username":"Char-Ten","avatarLarge":"https://avatars1.githubusercontent.com/u/17474452?v=4","uid":"17474452"}},"collectedEntriesCount":110,"company":"前端围观党","followersCount":38,"followeesCount":8,"role":"guest","postedPostsCount":3,"level":2,"isAuthor":false,"postedEntriesCount":5,"totalCommentsCount":129,"ngxCachedTime":1572571635,"ngxCached":true,"viewedEntriesCount":3051,"jobTitle":"前端划水工程师","subscribedTagsCount":49,"totalCollectionsCount":494,"username":"CharTen","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e083407e43d8e8d5","objectId":"57f5285d7db2a2005931b729"},"author":"","screenshot":"","original":false,"hotIndex":190.411,"content":"通俗易懂理解作用域和闭包。","title":"毫无节操地理解 js 的作用域、闭包","lastCommentTime":"2018-02-27T14:35:03.189Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":1651,"summaryInfo":"然后问c是谁的。。。我一看，诶呀我擦，这又不是作用域的问题吗？刚想说c是b的变量，但是定睛一看，不对，妈的有陷阱，c前没加var，又不是严格模式，然后我就跟他说：\"c是全局变量。\"然后他就咚咚咚地用nodejs敲了一下然后：  噗，。额，这个嘛，我猜这个环境是严格模式下的吧。 不过，既然又遇到这种...","isCollected":false},{"collectionCount":99,"commentsCount":3,"gfw":false,"entryView":"58d7fb0b44d904006877d803","subscribersCount":3,"ngxCachedTime":1572571634,"updatedAt":"2019-10-31T13:35:06.972Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58d7fb0b5c497d0057fed46d","rankIndex":0.00006374825016681,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/58d7f8cb128fe1006ccbdfb4","buildTime":1572528906.987,"createdAt":"2017-03-26T17:31:55.409Z","user":{"community":null,"collectedEntriesCount":131,"company":"","followersCount":26,"followeesCount":1,"role":"guest","postedPostsCount":3,"level":2,"isAuthor":true,"postedEntriesCount":2,"totalCommentsCount":23,"ngxCachedTime":1572571634,"viewedEntriesCount":647,"jobTitle":"前端工程师","subscribedTagsCount":32,"totalCollectionsCount":336,"username":"海痕","avatarLarge":"https://leancloud-gold-cdn.xitu.io/adc6e124ad08a0a995e5.jpg","objectId":"57fb0ccea0bb9f00583fe8fe"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/0259845e05b930a3bd58.png","original":true,"hotIndex":219.0787,"content":"执行环境（也就是常说的上下文）和作用域是js中很基础也很重要的概念， 但在很多时候，特别是看其他的文档的时候，却容易混淆概念，这篇文章试着梳理下执行环境和作用域的概念。 1、执行环境 执行环境定义了变量或函数有权访问的其他数据，决定了它们各自的行为。每个执行环境都有一个相关联的…","title":"执行环境和作用域","lastCommentTime":"2017-03-27T01:16:22.987Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":2322,"summaryInfo":"执行环境（也就是常说的上下文）和作用域是js中很基础也很重要的概念， 但在很多时候，特别是看其他的文档的时候，却容易混淆概念，这篇文章试着梳理下执行环境和作用域的概念。 执行环境定义了变量或函数有权访问的其他数据，决定了它们各自的行为。每个执行环境都有一个相关联的变量对象，这个对象里面保存了环境中...","isCollected":false},{"collectionCount":96,"autoPass":true,"commentsCount":1,"gfw":false,"buildTime":1572533041.0942,"checkStatus":true,"objectId":"5b7621a5518825330955f09b","entryView":"","subscribersCount":0,"ngxCachedTime":1572571753,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571683,"ngxCached":true,"title":"Node.js","id":"555e9a77e4b00c57d9955d64"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571683,"ngxCached":true,"title":"Babel","id":"58a3deef8d6d810057e64970"}],"isEvent":false,"rankIndex":0.00019006254602199,"hot":false,"updatedAt":"2019-10-31T14:44:01.073Z","originalUrl":"https://juejin.im/post/5b762164e51d4566877c1739","verifyCreatedAt":"2018-08-17T01:15:17.474Z","createdAt":"2018-08-17T01:15:17.474Z","user":{"community":{"weibo":{"selfDescription":"不高级前端攻城狮，专注打杂30年，一年经验用10年。【忙时码代码，无事乱涂鸦】","uid":"1608907662","blogAddress":"http://weibo.com/newwave","username":"涂鸦码龙","avatarLarge":"https://tva4.sinaimg.cn/crop.0.0.996.996.180/5fe5fb8ejw8ezotiys2gqj20ro0rptae.jpg?KID=imgbed,tva&Expires=1568184360&ssig=pFnA12vRmU"},"github":{"username":"jinlong","avatarLarge":"https://avatars1.githubusercontent.com/u/1567277?v=4","uid":"1567277"}},"collectedEntriesCount":34,"company":"","followersCount":1201,"followeesCount":31,"role":"guest","postedPostsCount":3,"level":2,"isAuthor":false,"postedEntriesCount":12,"totalCommentsCount":21,"ngxCachedTime":1572571753,"viewedEntriesCount":382,"jobTitle":"资深前端打砸工程师","subscribedTagsCount":13,"totalCollectionsCount":764,"username":"涂鸦码龙","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/728548d14e91859cbfd18f1be45f41f7","objectId":"55fd4e5260b27cb221ec1297"},"author":"","screenshot":"","original":true,"hotIndex":206.6736,"content":"当与其他 JavaScript 开发人员交谈时，令我经常感到惊讶的是，有很多人不知道变量作用域是如何在 JavaScript 里起作用的。这里我们说的作用域指的是代码里变量的可见性；或者换句话说，哪部分代码可以访问和修改变量。我发现大家在代码中经常用 var 声明变量，而并不知…","title":"现代 JavaScript 的变量作用域","lastCommentTime":"2018-08-18T09:43:05.052Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":2192,"summaryInfo":"当与其他 JavaScript 开发人员交谈时，令我经常感到惊讶的是，有很多人不知道变量作用域是如何在 JavaScript 里起作用的。这里我们说的作用域指的是代码里变量的可见性；或者换句话说，哪部分代码可以访问和修改变量。我发现大家在代码中经常用 声明变量，而并不知道 JavaScript 将...","isCollected":false},{"collectionCount":93,"commentsCount":1,"gfw":false,"entryView":"58198c26d203090055dafe6a","subscribersCount":1,"ngxCachedTime":1572571761,"updatedAt":"2019-10-30T02:43:42.817Z","tags":[{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"5819652fbf22ec0068a8d246","rankIndex":0.000037708449835455,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/0c69c777e0a4","buildTime":1572403422.8888,"createdAt":"2016-11-02T04:01:51.865Z","user":{"community":{"weibo":{"avatar_url":"http://tva4.sinaimg.cn/crop.0.0.1080.1080.180/006h4sIljw8exqcfs92s8j30u00u0wfs.jpg","uid":"5749058397","nickname":"凯旋叔叔V"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/fn4lUXxGhSNo15kHkEekv3kGp8cA21dVlutz6lXMD9uQvAmfDULP4fm8icNTgiaiaFxMHBXyIwZVtEwE4To5pL59g/132"},"github":{"username":"likaixuan","avatarLarge":"https://avatars1.githubusercontent.com/u/17825609?v=4","uid":"17825609"}},"collectedEntriesCount":86,"company":"河软","followersCount":8,"followeesCount":14,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":4,"totalCommentsCount":9,"ngxCachedTime":1572571761,"viewedEntriesCount":813,"jobTitle":"前端","subscribedTagsCount":18,"totalCollectionsCount":206,"username":"李凯旋","avatarLarge":"https://user-gold-cdn.xitu.io/2018/7/8/16477887dcbfbaf2?w=359&h=371&f=png&s=50445","objectId":"579c560d7db2a2005a4f6134"},"author":"","screenshot":"","original":false,"hotIndex":159.986,"content":"讲述了一些 javascript 的边角细节，例如隐式全局变量、函数提升、词法作用域","title":"javascript 作用域详解","lastCommentTime":"2016-11-04T15:02:30.906Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":1302,"summaryInfo":"本文是作者的学习笔记、主要是给大家说说作用域在javascript中是怎么一回事、有不足之处在所难免欢迎大家指正。 JavaScript 不是块级作用域而是通过函数来管理作用域，在函数内部声明的变量只能在这个函数内部使用， 全局变量是在函数外定义的变量或者未定义就使用的变量(隐式全局变量)又或是直...","isCollected":false},{"collectionCount":92,"commentsCount":0,"gfw":false,"entryView":"58047f362e958a0055def297","subscribersCount":0,"ngxCachedTime":1572571768,"updatedAt":"2019-08-29T02:15:45.705Z","tags":[{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"580466f28ac24700580a4542","rankIndex":0.00003307606978691,"hot":false,"autoPass":false,"originalUrl":"http://blog.csdn.net/crper/article/details/51029112","buildTime":1567044945.7216,"createdAt":"2016-10-17T05:51:46.990Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/eSEBBXEPlm7ZibVLZibMASYpk9bu0Bicwr4tQn6PZy7nRoTavqL9HD2pSOFW7dJPvoRTrCgphRBHYN6DkGPjcK7aQ/132"},"github":{"username":"crper","avatarLarge":"https://avatars0.githubusercontent.com/u/8272877?v=4","uid":"8272877"}},"collectedEntriesCount":100,"company":"WeChat: MY1083","followersCount":14202,"followeesCount":10,"role":"editor","postedPostsCount":87,"level":5,"isAuthor":true,"postedEntriesCount":72,"totalCommentsCount":861,"ngxCachedTime":1572571753,"ngxCached":true,"viewedEntriesCount":15677,"jobTitle":"🎖️BUG攻城狮,大前端,伪架构","subscribedTagsCount":225,"totalCollectionsCount":18165,"username":"CRPER","avatarLarge":"https://user-gold-cdn.xitu.io/2018/1/26/16131f8dea4459b4?w=1016&h=1016&f=jpeg&s=252903","objectId":"575ebdbd5bbb5000638173fb"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/542b1cd18eed5e2e0b7b.jpg","original":true,"hotIndex":131.5409,"content":"上一节我们说了那些 JS 的基本概念相关的.. 今天我们接着来扯扯作用域对象这些基础知识;","title":" javascript 跳跃式前进 (2) - 作用域及引用类型","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":776,"summaryInfo":"上一节我们说了那些JS的基本概念相关的..今天我们接着来扯扯作用域对象这些基础知识; JS的变量是相当松散的,这个特性让人又爱又恨,因为我们可以在它的生命周期内进行各种各样的改变[比如值,数据类型,规则等].同样这个特性也提升了维护难度,一不小心自己给自己埋了个大坑 栈数据是LIFO(后入先出) ...","isCollected":false},{"collectionCount":90,"commentsCount":1,"gfw":false,"entryView":"58bd045da22b9d005eefaab8","subscribersCount":1,"ngxCachedTime":1572571638,"updatedAt":"2019-10-27T03:52:10.312Z","tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58bd03d2ac502e006c1f8853","rankIndex":0.000042685186522885,"hot":false,"autoPass":false,"originalUrl":"http://jungahuang.com/2017/03/05/scope-and-closure/","buildTime":1572148330.3298,"createdAt":"2017-03-06T06:38:10.825Z","user":{"community":{"github":{"uid":"16872237","bio":null,"avatar_url":"https://avatars0.githubusercontent.com/u/16872237?v=3","username":"huangzhuangjia","nickname":"Junga","html_url":"https://github.com/huangzhuangjia"}},"collectedEntriesCount":21,"company":"","followersCount":306,"followeesCount":20,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":4,"totalCommentsCount":13,"ngxCachedTime":1572571530,"ngxCached":true,"viewedEntriesCount":4705,"jobTitle":"前端开发","subscribedTagsCount":63,"totalCollectionsCount":478,"username":"Junga","avatarLarge":"https://user-gold-cdn.xitu.io/2019/10/11/16dbb1a4362cf059?w=640&h=640&f=jpeg&s=56466","objectId":"586f5f14128fe100580d6e17"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/5c30874a92c779375852.jpg","original":false,"hotIndex":150.4303,"content":"闭包是 JavaScript 语言的一大特点，可以说再开发的过程中，它无处不在，即使有时候我们都没有发现它的存在。接触 JavaScript 以来，虽然说是一直有对闭包了解，但是实际应用起来或者分析一些代码的时候却有些吃力。现在回过头总结，才又进一步的揭开了闭包的一层面纱。而在讲闭包之前，我们要先明白 JavaScript 中又一个重要的知识点，那就是 JavaScript 的内存机制以及作用域，这两个是我们有效理解闭包原理的前提吧。前面我们已经讲了 JavaScript 的内存机制，那么在这里先理解什么是作用域和作用域链。","title":"作用域与闭包的一二事","lastCommentTime":"2017-03-20T06:38:55.939Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":1182,"summaryInfo":"闭包是JavaScript语言的一大特点，可以说再开发的过程中，它无处不在，即使有时候我们都没有发现它的存在。接触JavaScript以来，虽然说是一直有对闭包了解，但是实际应用起来或者分析一些代码的时候却有些吃力。现在回过头总结，才又进一步的揭开了闭包的一层面纱。而在讲闭包之前，我们要先明白Ja...","isCollected":false},{"collectionCount":88,"autoPass":true,"commentsCount":5,"gfw":false,"buildTime":1572516742.239,"checkStatus":true,"objectId":"5b8dffb451882542df55fccd","entryView":"","subscribersCount":0,"ngxCachedTime":1572571747,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571673,"ngxCached":true,"title":"Vue.js","id":"555e9a98e4b00c57d9955f68"},{"ngxCachedTime":1572571706,"ngxCached":true,"title":"GitHub","id":"555e9abee4b00c57d9956152"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.0002545176459176,"hot":false,"updatedAt":"2019-10-31T10:12:22.220Z","originalUrl":"https://juejin.im/post/5b8de4cce51d4538a67aba91","verifyCreatedAt":"2018-09-04T03:44:52.661Z","createdAt":"2018-09-04T03:44:52.661Z","user":{"community":{"weibo":{"selfDescription":"现在上班我习惯早餐以后,放一杯咖啡在左手边,细细的品味,好好整理今天的工作,然后就开始埋头苦干。","uid":"2618931443","blogAddress":"http://weibo.com/qinshaowei111","username":"Hi_咖啡","avatarLarge":"http://tva4.sinaimg.cn/crop.0.0.180.180.180/9c19b8f3jw1e8qgp5bmzyj2050050aa8.jpg?Expires=1563525207&ssig=f2eaExXM5s&KID=imgbed,tva"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ2Oe4ZsVavJgxicJvReGxJNYK5LTq7txLjuHj8REjcMyfJJYIOKUPsXmBX4PxKo8ib8ajHgONPiazcA/132"},"github":{"username":"nihaojob","avatarLarge":"https://avatars0.githubusercontent.com/u/13534626?v=4","uid":"13534626"}},"collectedEntriesCount":62,"company":"优信","followersCount":3487,"followeesCount":99,"role":"editor","postedPostsCount":20,"level":3,"isAuthor":true,"postedEntriesCount":4,"totalCommentsCount":314,"ngxCachedTime":1572571725,"ngxCached":true,"viewedEntriesCount":5892,"jobTitle":"web前端","subscribedTagsCount":94,"totalCollectionsCount":3698,"username":"愚坤","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082f9eb6a524375","objectId":"57b5a69c165abd0065d24085"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/9/4/165a29a72d508261?w=718&h=408&f=jpeg&s=87424","original":true,"hotIndex":259.7066,"content":"昨天看vue的官网文档，在slot-scope这块不是特别的明白，今天自己做了一个小例子，便于理解。 先说一下我们假设的应用常用场景，我们已经开发了一个代办事项列表的组件，很多模块在用，现在要求在不影响已测试通过的模块功能和展示的情况下，给已完成的代办项增加一个对勾效果。 解决…","title":"Vue作用域插槽 ：slot-scope 实例","lastCommentTime":"2019-07-01T11:59:26.999Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":3329,"summaryInfo":"昨天看vue的官网文档，在slot-scope这块不是特别的明白，今天自己做了一个小例子，便于理解。 先说一下我们假设的应用常用场景，我们已经开发了一个代办事项列表的组件，很多模块在用，现在要求在不影响已测试通过的模块功能和展示的情况下，给已完成的代办项增加一个对勾效果。 也就是说，代办事项列表组...","isCollected":false},{"collectionCount":86,"userRankIndex":14.526036335931,"buildTime":1572531650.6167,"commentsCount":8,"gfw":false,"objectId":"5d140348e51d45108126d285","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571634,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571605,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"}],"updatedAt":"2019-10-31T14:20:50.598Z","rankIndex":0.0013774779014977,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d13a5fce51d455a694f9560","verifyCreatedAt":"2019-06-27T03:52:13.716Z","createdAt":"2019-06-27T03:52:13.716Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL4bLYyjxceBd1lPum5ccS0Eq153Smjicu7WicOnShkTqGoGOicz491BBOHG9sGkdZwpR2FRT6ZpcrAw/132"},"github":{"username":"koala-coding","avatarLarge":"https://avatars0.githubusercontent.com/u/52817889?v=4","uid":"52817889"}},"collectedEntriesCount":38,"company":"不告诉你","followersCount":6230,"followeesCount":8,"role":"guest","postedPostsCount":19,"level":4,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":268,"ngxCachedTime":1572571603,"ngxCached":true,"viewedEntriesCount":3704,"jobTitle":"前端开发小组长","subscribedTagsCount":16,"totalCollectionsCount":5277,"username":"ikoala","avatarLarge":"https://user-gold-cdn.xitu.io/2019/9/18/16d42ae0d6d59e39?w=1024&h=1024&f=jpeg&s=265204","objectId":"5cf288385188254abb110e3b"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/6/27/16b94c2844977c32?w=1280&h=545&f=jpeg&s=33822","original":true,"hotIndex":215.8435,"content":"1. 什么是作用域 作用域是你的代码在运行时,某些特定部分中的变量,函数和对象的可访问性。换句话说，作用域决定了变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命周期。 作者简介：koala，专注完整的 Node.js 技术栈分享，从 JavaScript 到 No…","title":"深入理解 JavaScript, 从作用域与作用域链开始","lastCommentTime":"2019-07-09T10:51:11.799Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":2424,"summaryInfo":"作用域是你的代码在运行时,某些特定部分中的变量,函数和对象的可访问性。换句话说，作用域决定了变量与函数的可访问范围，即。 2. JAVASCRIPT中的作用域 如果一个变量在函数外面或者大括号外声明,那么就定义了一个,在ES6之前局部作用域只包含了函数作用域,ES6为我们提供的,也属于局部作用域 ...","isCollected":false},{"collectionCount":85,"isEvent":false,"commentsCount":33,"gfw":false,"buildTime":1572486708.7947,"checkStatus":true,"objectId":"5c52c1faf265da2d90580ade","entryView":"","subscribersCount":0,"ngxCachedTime":1572571742,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-31T01:51:48.777Z","rankIndex":0.00057746090787898,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c52be126fb9a049d7481e38","verifyCreatedAt":"2019-01-31T13:10:59.818Z","createdAt":"2019-01-31T13:10:59.818Z","user":{"community":{"weibo":{"selfDescription":"简单、知足、坚持、努力、","uid":"5562953932","blogAddress":"http://weibo.com/u/5562953932","username":"墨言小顽石0905","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.1002.1002.180/0064tArqjw8f7gg8xr7cpj30ru0rv76b.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTINsZiaQbXhsa15EajGg0l3zUf26XLC7XFvn8mno2st200icShrbahW0joCaetffXKlc7WUYCmxMTrw/132"},"github":{"username":"liuxx052","avatarLarge":"https://avatars3.githubusercontent.com/u/40052238?v=4","uid":"40052238"}},"collectedEntriesCount":104,"company":"","followersCount":340,"followeesCount":230,"role":"guest","postedPostsCount":3,"level":2,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":97,"ngxCachedTime":1572571742,"viewedEntriesCount":1440,"jobTitle":"前端开发","subscribedTagsCount":15,"totalCollectionsCount":503,"username":"墨言妹","avatarLarge":"https://user-gold-cdn.xitu.io/2019/1/17/1685bca1b48b7ffe?w=640&h=640&f=jpeg&s=31953","objectId":"5b1f52f6e51d4506a4104a56"},"author":"","screenshot":"","original":true,"hotIndex":305.5319,"content":"作用域共有两种主要的工作模型，一是 词法作用域（ JavaScript 等）；二是 动态作用域（ bash 脚本等）。 在第1章学习了，大部分标准语言编译器的 第一个工作阶段 是词法化( token 化 ）。 词法作用域 就是在词法分析时定义的作用域，即在写代码时，由变量和块作…","title":"细读《你不知道的JavaScript·上卷》1-2 词法作用域","lastCommentTime":"2019-02-12T10:29:41.223Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":3734,"summaryInfo":"作用域共有两种主要的工作模型，一是 词法作用域（ 等）；二是 动态作用域（ 脚本等）。 在第1章学习了，大部分标准语言编译器的 第一个工作阶段 是词法化( 化 ）。 词法作用域 就是在词法分析时定义的作用域，即在写代码时，由变量和块作用域的位置决定的。因此，在词法分析时也是固定不变的了（不考虑欺骗...","isCollected":false},{"collectionCount":84,"isEvent":false,"commentsCount":8,"gfw":false,"buildTime":1572571401.2971,"checkStatus":true,"objectId":"5c8afd6ef265da2da23d725a","entryView":"","subscribersCount":0,"ngxCachedTime":1572571632,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-11-01T01:23:21.280Z","rankIndex":0.00062141410914103,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c8290455188257e5d0ec64f","verifyCreatedAt":"2019-03-15T02:53:56.068Z","createdAt":"2019-03-15T02:53:56.068Z","user":{"community":{"github":{"username":"ljianshu","avatarLarge":"https://avatars1.githubusercontent.com/u/36322912?v=4","uid":"36322912"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/1Sa22gUuybic14t380DXNaBpAFtUjWTxAHJlgKnOGQuoG13a3lptW7vvqINWLj9xoJwUV6K34a1Ua1jbEiblZWXw/132"}},"collectedEntriesCount":138,"company":"厦门","followersCount":12293,"followeesCount":93,"role":"guest","postedPostsCount":54,"level":5,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":626,"ngxCachedTime":1572571578,"ngxCached":true,"viewedEntriesCount":5747,"jobTitle":"前端小白","subscribedTagsCount":25,"totalCollectionsCount":11922,"username":"浪里行舟","avatarLarge":"https://user-gold-cdn.xitu.io/2019/1/16/1685746c4f59d230?w=740&h=708&f=png&s=236984","objectId":"5a9a9cdcf265da238b7d771c"},"author":"","screenshot":"","original":true,"hotIndex":256.4815,"content":"JavaScript中有一个被称为作用域(Scope)的特性。虽然对于许多新手开发者来说，作用域的概念并不是很容易理解，本文我会尽我所能用最简单的方式来解释作用域和作用域链，希望大家有所收获！ 作用域是在运行时代码中的某些特定部分中变量，函数和对象的可访问性。换句话说，作用域决…","title":"深入理解JavaScript作用域和作用域链","lastCommentTime":"2019-07-14T23:20:51.883Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571519},"viewsCount":3284,"summaryInfo":"JavaScript中有一个被称为作用域(Scope)的特性。虽然对于许多新手开发者来说，作用域的概念并不是很容易理解，本文我会尽我所能用最简单的方式来解释作用域和作用域链，希望大家有所收获！ 作用域是在运行时代码中的某些特定部分中变量，函数和对象的可访问性。换句话说，作用域决定了代码区块中变量和...","isCollected":false},{"collectionCount":83,"commentsCount":4,"gfw":false,"objectId":"59e8978cf265da432e5b2011","checkStatus":true,"buildTime":1572160217.9376,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571764,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571680,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"}],"autoPass":false,"rankIndex":0.00006230175250909,"hot":false,"updatedAt":"2019-10-27T07:10:17.918Z","originalUrl":"https://juejin.im/post/59e8974e6fb9a0451d409691","verifyCreatedAt":"2017-10-19T12:16:12.883Z","createdAt":"2017-10-19T12:16:12.883Z","user":{"community":{"weibo":{"selfDescription":"卫斯理/三国/JavaScript　文学·历史·编程","uid":"1795310341","blogAddress":"http://weibo.com/javarun","username":"天方夜影","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.179.179.180/6b024305tw1eh5fyq33dlj20500503yk.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eozpyAUaM6razM3WqWghsPk4C63HPuoT8vkNtl6qLJnMVh0hu2LX5drVrurzK0WVuO1ibYBfw6qwaQ/132"},"github":{"username":"AlphaBao","avatarLarge":"https://avatars0.githubusercontent.com/u/3227118?v=4","uid":"3227118"}},"collectedEntriesCount":20,"company":"","followersCount":34,"followeesCount":2,"role":"editor","postedPostsCount":11,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":18,"ngxCachedTime":1572571764,"viewedEntriesCount":505,"jobTitle":"","subscribedTagsCount":27,"totalCollectionsCount":582,"username":"天方夜","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08a677c1c2931f9","objectId":"59e85c146fb9a045284598b1"},"author":"","screenshot":"","original":true,"hotIndex":146.8084,"content":"近几天在编程群中的聊天，让我发现了很多人并不清楚什么是上下文（context）、什么是作用域（scope），而且纠结在其中。我当初对这两个概念也只有粗浅的理解，不过我从一开始就不怎么困惑，因为我清楚自己对这一问题的认识边界。现在，我对它们的认识也只加深了一点点。不过，群聊中小伙…","title":"从上下文，到作用域（彩蛋：理解闭包）","lastCommentTime":"2017-10-21T01:43:37.642Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":1178,"summaryInfo":"近几天在编程群中的聊天，让我发现了很多人并不清楚什么是上下文（context）、什么是作用域（scope），而且纠结在其中。我当初对这两个概念也只有粗浅的理解，不过我从一开始就不怎么困惑，因为我清楚自己对这一问题的认识边界。现在，我对它们的认识也只加深了一点点。不过，群聊中小伙伴的热情鼓舞了我——...","isCollected":false},{"collectionCount":79,"commentsCount":4,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571640,"updatedAt":"2019-10-30T10:46:39.261Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"59535d31f265da6c47417eb1","rankIndex":0.000044511152914689,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/59535cf66fb9a06bc06a37c6","buildTime":1572432399.2776,"createdAt":"2017-06-28T07:39:29.371Z","user":{"community":{"github":{"username":"MrErHu","avatarLarge":"https://avatars3.githubusercontent.com/u/16449143?v=4","uid":"16449143"}},"collectedEntriesCount":118,"company":"帆软软件","followersCount":500,"followeesCount":45,"role":"editor","postedPostsCount":29,"level":3,"isAuthor":true,"postedEntriesCount":10,"totalCommentsCount":145,"ngxCachedTime":1572571524,"ngxCached":true,"viewedEntriesCount":1727,"jobTitle":"前端工程师","subscribedTagsCount":14,"totalCollectionsCount":3187,"username":"请叫我王磊同学","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082be798bb1377d","objectId":"576e377bd342d30057c2e265"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/6/28/d9b95db0f4aa35cf50cfdae2d0957283","original":true,"hotIndex":130.6482,"content":" 毕业也整整一年了，看着很多学弟都毕业了，忽然心中颇有感慨，时间一去不复还呀。记得从去年这个时候接触到JavaScript,从一开始就很喜欢这门语言，当时迷迷糊糊看完了《JavaScript高级程序设计》这本书，似懂非懂。这几天又再次回顾了这本书，之前很多不理解的内容似乎开始有些…","title":"我所认识的 JavaScript 作用域链和原型链","lastCommentTime":"2017-06-29T10:33:30.750Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":948,"summaryInfo":"　　毕业也整整一年了，看着很多学弟都毕业了，忽然心中颇有感慨，时间一去不复还呀。记得从去年这个时候接触到JavaScript,从一开始就很喜欢这门语言，当时迷迷糊糊看完了《JavaScript高级程序设计》这本书，似懂非懂。这几天又再次回顾了这本书，之前很多不理解的内容似乎开始有些豁然开朗了。为了...","isCollected":false},{"collectionCount":79,"commentsCount":2,"gfw":false,"entryView":"58749b881b69e6005ce9b409","subscribersCount":2,"ngxCachedTime":1572571641,"updatedAt":"2019-07-13T08:33:17.820Z","tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58749b818d6d810058a20a51","rankIndex":0.000035580287915345,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/8a4dc9f1dab2","buildTime":1563006797.8368,"createdAt":"2017-01-10T08:29:53.920Z","user":{"community":{"weibo":{"selfDescription":"成功的路是目标铺成的","uid":"3836829334","blogAddress":"http://weibo.com/poetries1","username":"poetries","avatarLarge":"https://tvax4.sinaimg.cn/crop.156.399.600.600.180/e4b15e96ly8fv84jbfa81j20u00smn1a.jpg?KID=imgbed,tva&Expires=1571282547&ssig=m+yd5+e48Z"}},"collectedEntriesCount":292,"company":"公司名","followersCount":927,"followeesCount":16,"role":"guest","postedPostsCount":1,"level":2,"isAuthor":false,"postedEntriesCount":16,"totalCommentsCount":73,"ngxCachedTime":1572571570,"ngxCached":true,"viewedEntriesCount":3801,"jobTitle":"添加我的职位","subscribedTagsCount":69,"totalCollectionsCount":5150,"username":"Poetries","avatarLarge":"https://lc-gold-cdn.xitu.io/5a73c05dd378c5335923.jpg?imageView/2/w/100/h/100/q/80/format/png","objectId":"56792d8560b2f2e841685467"},"author":"","screenshot":"","original":false,"hotIndex":115.6051,"content":"JavaScript 作用域分析总结","title":"JavaScript 作用域分析总结","lastCommentTime":"2017-01-11T07:44:42.101Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":675,"summaryInfo":" alert( a );var a = 10;alert( a );function a(){alert(20)};alert( a );var a = 30;alert( a );function a(){alert(40)};alert( a );// 函数块 10 10 30 30 a();...","isCollected":false},{"collectionCount":78,"commentsCount":0,"gfw":false,"entryView":"5875aa2e1b69e6005cefd7f4","subscribersCount":0,"ngxCachedTime":1572571634,"updatedAt":"2019-10-31T14:00:19.325Z","tags":[{"ngxCachedTime":1572571582,"ngxCached":true,"title":"Vue.js","id":"555e9a98e4b00c57d9955f68"},{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"5875aa2aac502e0064757dd8","rankIndex":0.00005564112797384,"hot":false,"autoPass":false,"originalUrl":"http://blog.csdn.net/kkae8643150/article/details/52704280","buildTime":1572530419.3435,"createdAt":"2017-01-11T03:44:42.203Z","user":{"community":{"weibo":{"selfDescription":"","uid":"1975650284","blogAddress":"http://weibo.com/u/1975650284","username":"salmonjakro","avatarLarge":"http://tva1.sinaimg.cn/crop.0.0.180.180.180/75c207ecjw1e8qgp5bmzyj2050050aa8.jpg"}},"collectedEntriesCount":4276,"company":"","followersCount":17,"followeesCount":10,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":4,"ngxCachedTime":1572571634,"viewedEntriesCount":3435,"jobTitle":"","subscribedTagsCount":27,"totalCollectionsCount":256,"username":"gyx13","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/c1ec2af8cdfcedd15d4a15dc36cdaa69.jpg","objectId":"561f8791ddb24819b7eba047"},"author":"","screenshot":"","original":false,"hotIndex":214.2027,"content":"关于 vue 组件的 slot 内容分发，编译作用域","title":"Vue 组件学习 (2)：slot 内容分发，编译作用域，动态切换组件","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":2717,"summaryInfo":"组件这内容太多了，被迫分成2部分。上节最后讲了props进行父子组件通讯，这里接着来。 1.1 Vue组件是树形结构，必然要涉及到怎么查找父节点，根节点，子节点。子组件可以用 访问它的父组件。根实例的后代可以用 访问它。父组件有一个数组 ，包含它所有的子元素。 1.2 Vue也提供了自定义事件，用...","isCollected":false},{"collectionCount":76,"commentsCount":6,"gfw":false,"objectId":"5a0ff58e6fb9a0450d10a962","checkStatus":true,"buildTime":1571055875.782,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571763,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571745,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"},{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571680,"ngxCached":true,"title":"API","id":"55979f27e4b08a686ce550a6"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"autoPass":true,"rankIndex":0.000070112979073099,"hot":false,"updatedAt":"2019-10-14T12:24:35.764Z","originalUrl":"https://juejin.im/post/5a0ff568f265da4304063421","verifyCreatedAt":"2017-11-20T05:43:08.296Z","createdAt":"2017-11-20T05:43:08.296Z","user":{"community":null,"collectedEntriesCount":3,"company":"","followersCount":6,"followeesCount":16,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571763,"viewedEntriesCount":147,"jobTitle":"js工程师","subscribedTagsCount":34,"totalCollectionsCount":76,"username":"Sleet","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/23/2038abb68a2cb9e0b06eaf10980c9357","objectId":"5973f5bf6fb9a06bb21ae25f"},"author":"","screenshot":"","original":true,"hotIndex":150.493,"content":"通俗来说就是\b编译器会将我们写的代码首先拆分成可以进行编译的代码 eg：var a = 2；可以被编译器分割为var,a,=,2,; 空格是否会被当作词法单元，取决于空格在这门语言中是否具有意义。 AST：抽象语法树的概念他会把上述分割好的代码进组装成为一个语法树\bm,=,va…","title":"你不懂的JS学习笔记(作用域和闭包)","lastCommentTime":"2017-11-26T22:28:00.103Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":1353,"summaryInfo":"首先说一下基本的执行顺序首先是编译器由上面的步骤编译代码然后对于一些变量的声明会在编译期间交给作用域然后作用域就会组成一个像是一个树的结构，全局作用域下面会有嵌套的函数作用域。最后JS引擎根据作用域去执行代码，大概就是这样的一个流程。介绍以下三个关键的概念:  可以理解为foo需要知道自己应该赋值...","isCollected":false},{"collectionCount":76,"isEvent":false,"commentsCount":49,"gfw":false,"buildTime":1572486963.4802,"checkStatus":true,"objectId":"5c3b72b0e51d4552232fbbf7","entryView":"","subscribersCount":0,"ngxCachedTime":1572571631,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T01:56:03.460Z","rankIndex":0.00053438355656198,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c3b7133e51d45520a76862c","verifyCreatedAt":"2019-01-14T07:11:32.405Z","createdAt":"2019-01-14T07:11:32.405Z","user":{"community":{"weibo":{"selfDescription":"简单、知足、坚持、努力、","uid":"5562953932","blogAddress":"http://weibo.com/u/5562953932","username":"墨言小顽石0905","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.1002.1002.180/0064tArqjw8f7gg8xr7cpj30ru0rv76b.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTINsZiaQbXhsa15EajGg0l3zUf26XLC7XFvn8mno2st200icShrbahW0joCaetffXKlc7WUYCmxMTrw/132"},"github":{"username":"liuxx052","avatarLarge":"https://avatars3.githubusercontent.com/u/40052238?v=4","uid":"40052238"}},"collectedEntriesCount":104,"company":"","followersCount":340,"followeesCount":230,"role":"guest","postedPostsCount":3,"level":2,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":97,"ngxCachedTime":1572571631,"viewedEntriesCount":1440,"jobTitle":"前端开发","subscribedTagsCount":15,"totalCollectionsCount":503,"username":"墨言妹","avatarLarge":"https://user-gold-cdn.xitu.io/2019/1/17/1685bca1b48b7ffe?w=640&h=640&f=jpeg&s=31953","objectId":"5b1f52f6e51d4506a4104a56"},"author":"","screenshot":"","original":true,"hotIndex":310.0047,"content":"通常，把 JavaScript 归类为 “ 动态 ” 或 “ 解释执行 ” 的语言，但是事实上它是一门 编译语言，不提前编译，编译结果也不在分布式系统中进行移植。 传统编译语言，在执行之前的三个步骤，统称为 “ 编译 ” 。 将有字符组成的字符串分解成（对编程语言来说）有意义的…","title":"细读《你不知道的JavaScript·上卷》1-1 作用域是什么？","lastCommentTime":"2019-02-01T19:11:04.224Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":3691,"summaryInfo":"JavaScript是一门编译语言，不提前编译，编译结果也不在分布式系统中进行移植。 传统编译语言，在执行之前的三个步骤，统称为“编译”。 比如 存在2个不同的声明，变量的赋值操作会执行两个动作。 上述代码共有1处LHS查询，3处RHS查询。 作用域是一套规则，用于确定在何处以及如何查找变量（标识...","isCollected":false},{"collectionCount":72,"commentsCount":1,"gfw":false,"entryView":"583fe41aa22b9d007a834f0e","subscribersCount":1,"ngxCachedTime":1572571772,"updatedAt":"2019-10-31T15:23:08.325Z","tags":[{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"583fd9c4ac502e006b8f64ab","rankIndex":0.000027143355432945,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/689b6ab22efa","buildTime":1572535388.3423,"createdAt":"2016-12-01T08:05:24.884Z","user":{"community":{"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq5OlRrvic2eGlDgvr4Z0DOUib1ib7IlYDd2OPyVjwDIPZHDL1BPoyYe6nedSa5Gr3Kea1IDcpYYicCuA/132"}},"collectedEntriesCount":6,"company":"","followersCount":1,"followeesCount":0,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":1,"ngxCachedTime":1572571772,"viewedEntriesCount":34,"jobTitle":"","subscribedTagsCount":2,"totalCollectionsCount":74,"username":"哎呀@","avatarLarge":"","objectId":"57ffafd70bd1d00058e90068"},"author":"","screenshot":"","original":false,"hotIndex":110.8165,"content":"《你不知道的 JavaScript》真的是一本好书，阅读这本书，我有多次 “哦，原来是这样” 的感觉，以前自以为理解了（其实并非真的理解）的概念，这一次真的理解得更加透彻了。关于本书，我会写好几篇读书笔记用以记录那些让我恍然大悟的瞬间，本文是第一篇《弄懂 JavaScript 的作用域和闭包》","title":"弄懂 JavaScript 的作用域和闭包","lastCommentTime":"2016-12-02T05:08:20.042Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":750,"summaryInfo":"《你不知道的JavaScript》真的是一本好书，阅读这本书，我有多次“哦，原来是这样”的感觉，以前自以为理解了（其实并非真的理解）的概念，这一次真的理解得更加透彻了。关于本书，我会写好几篇读书笔记用以记录那些让我恍然大悟的瞬间，本文是第一篇《弄懂JavaScript的作用域和闭包》。 很久以来我...","isCollected":false},{"collectionCount":70,"isEvent":false,"commentsCount":7,"gfw":false,"buildTime":1572544824.2472,"checkStatus":true,"objectId":"5c23519bf265da613f2f85b5","entryView":"","subscribersCount":0,"ngxCachedTime":1572571637,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T18:00:24.228Z","rankIndex":0.00025951403757774,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c21fd05f265da612c5deb30","verifyCreatedAt":"2018-12-27T04:28:04.426Z","createdAt":"2018-12-27T04:28:04.426Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/191f1kcTTHVFgm4XWoCRJtzLF0Q2iaHw3icBGVUTaPAX2qakyNicEYYEj9ficLLaFUoFzZjBQNpcNG4r7DQ7Muu4cQ/132"},"github":{"username":"Baddyo","avatarLarge":"https://avatars0.githubusercontent.com/u/49943038?v=4","uid":"49943038"}},"collectedEntriesCount":13,"company":"北京中科东信科技有限公司","followersCount":333,"followeesCount":28,"role":"guest","postedPostsCount":22,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":206,"ngxCachedTime":1572571615,"ngxCached":true,"viewedEntriesCount":559,"jobTitle":"前端工程师","subscribedTagsCount":88,"totalCollectionsCount":1212,"username":"👊Badd","avatarLarge":"https://user-gold-cdn.xitu.io/2018/12/26/167eb25973be2bbb?w=1024&h=1024&f=jpeg&s=748776","objectId":"5b0f6d4b6fb9a009e405dda1"},"author":"","screenshot":"","original":true,"hotIndex":165.4184,"content":"文中部分链接可能需要梯子。 欢迎批评指正。 说出来可能吓你一跳，在我看来，理解Javascript的最重要最基本的思路就是理解执行上下文。吃透了执行上下文，你就能更好地学习诸如变量提升、作用域链和闭包等进阶知识。说到这个，到底什么是“执行上下文”？为了更好理解，我们先来看一看我…","title":"【译】终极指南：变量提升、作用域和闭包","lastCommentTime":"2019-01-18T15:46:25.009Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":1764,"summaryInfo":"说出来可能吓你一跳，在我看来，理解Javascript的最重要最基本的思路就是理解执行上下文。吃透了执行上下文，你就能更好地学习诸如变量提升、作用域链和闭包等进阶知识。说到这个，到底什么是“执行上下文”？为了更好理解，我们先来看一看我们是怎么写代码的。 编程的一个策略就是把代码拆分开。虽然那些拆开...","isCollected":false},{"collectionCount":69,"commentsCount":19,"gfw":false,"entryView":"58ed9c74a0bb9f006a4c2b80","subscribersCount":3,"ngxCachedTime":1572571739,"updatedAt":"2019-11-01T00:34:01.616Z","tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58ed9c6eb123db43cc341f0e","rankIndex":0.00010967774021415,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/58ed9c0ea0bb9f006a4c28cd","buildTime":1572568441.6343,"createdAt":"2017-04-12T03:18:06.699Z","user":{"community":{"github":{"username":"mqyqingfeng","avatarLarge":"https://avatars3.githubusercontent.com/u/11458263?v=4","uid":"11458263"}},"collectedEntriesCount":114,"company":"","followersCount":19310,"followeesCount":13,"role":"editor","postedPostsCount":64,"level":5,"isAuthor":true,"postedEntriesCount":5,"totalCommentsCount":906,"ngxCachedTime":1572571725,"ngxCached":true,"viewedEntriesCount":8724,"jobTitle":"前端","subscribedTagsCount":7,"totalCollectionsCount":13277,"username":"冴羽","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e084832fd5ec238f","objectId":"58e4b9b261ff4b006b3227f4"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/ffe999d3fd0ca17399aa.jpg","original":true,"hotIndex":367.4577,"content":"JavaScript深入系列第五篇，讲述作用链的创建过程，最后结合着变量对象，执行上下文栈，让我们一起捋一捋函数创建和执行的过程中到底发生了什么？ 前言 在《JavaScript深入之执行上下文栈》中讲到，当JavaScript代码执行一段可执行代码(executable co…","title":"JavaScript深入之作用域链","lastCommentTime":"2019-07-21T20:42:40.512Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":5577,"summaryInfo":"在《JavaScript深入之执行上下文栈》中讲到，当JavaScript代码执行一段可执行代码(executable code)时，会创建对应的执行上下文(execution context)。 对于每个执行上下文，都有三个重要属性： 在《JavaScript深入之变量对象》中讲到，当查找变量的...","isCollected":false},{"collectionCount":68,"commentsCount":4,"gfw":false,"entryView":"58e7007ca0bb9f00690f6615","subscribersCount":2,"ngxCachedTime":1572571753,"updatedAt":"2019-10-31T10:31:12.473Z","tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58e70077b123db15eb88dc7e","rankIndex":0.000059087304618744,"hot":false,"autoPass":false,"originalUrl":"https://github.com/mqyqingfeng/Blog/issues/3","buildTime":1572517872.5486,"createdAt":"2017-04-07T02:59:03.279Z","user":{"community":{"github":{"username":"mqyqingfeng","avatarLarge":"https://avatars3.githubusercontent.com/u/11458263?v=4","uid":"11458263"}},"collectedEntriesCount":114,"company":"","followersCount":19310,"followeesCount":13,"role":"editor","postedPostsCount":64,"level":5,"isAuthor":true,"postedEntriesCount":5,"totalCommentsCount":906,"ngxCachedTime":1572571741,"ngxCached":true,"viewedEntriesCount":8724,"jobTitle":"前端","subscribedTagsCount":7,"totalCollectionsCount":13277,"username":"冴羽","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e084832fd5ec238f","objectId":"58e4b9b261ff4b006b3227f4"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/5/3/2984e1d746cf626c645fff9be470246b.jpg","original":false,"hotIndex":199.3736,"content":"JavaScript 采用词法作用域，什么语言采用了动态作用域？两者的区别又是什么？还有一个略难的思考题，快来看看吧","title":"JavaScript 深入之词法作用域和动态作用域","lastCommentTime":"2019-07-18T10:57:03.872Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":2536,"summaryInfo":"作用域是程序源代码中定义变量的区域。 作用域规定了如何查找变量，也就是确定当前执行代码对变量的访问权限。 ECMAScript6之前只有全局作用域和函数作用域。 JavaScript采用词法作用域(lexical scoping)，也就是静态作用域。 因为采用词法作用域，函数的作用域在函数定义的时...","isCollected":false},{"collectionCount":66,"commentsCount":1,"gfw":false,"entryView":"5771db14d342d30057df3e2a","subscribersCount":1,"ngxCachedTime":1572571641,"updatedAt":"2019-09-25T07:41:41.599Z","tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"5771d6500a2b58006a2af675","rankIndex":0.000024665184000253,"hot":false,"autoPass":false,"originalUrl":"https://segmentfault.com/a/1190000005807487","buildTime":1569397301.6156,"createdAt":"2016-06-28T01:43:44.932Z","user":{"community":{"weibo":{"selfDescription":"SegmentFault 思否 - 帮助开发者成功！","uid":"2036070420","blogAddress":"http://weibo.com/segmentfault","username":"SegmentFault","avatarLarge":"http://tva2.sinaimg.cn/crop.0.0.180.180.180/795bf814jw1e8qgp5bmzyj2050050aa8.jpg?Expires=1565854150&ssig=6MKQc+WCj5&KID=imgbed,tva"}},"collectedEntriesCount":625,"company":"SegmentFault","followersCount":6025,"followeesCount":9,"role":"guest","postedPostsCount":4,"level":2,"isAuthor":false,"postedEntriesCount":686,"totalCommentsCount":405,"ngxCachedTime":1572571522,"ngxCached":true,"viewedEntriesCount":363,"jobTitle":"吉祥物","subscribedTagsCount":11,"totalCollectionsCount":44463,"username":"SegmentFault","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/9aa5f3a653941dde1c51669144232a09","objectId":"561c771260b22ed7aa580496"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/545b6099890e5cb55f72.png","original":false,"hotIndex":118.1921,"content":"JavaScript 中有许多章节是关于 scope 的，但是对于初学者来说 (甚至是一些有经验的 JavaScript 开发者)，这些有关作用域的章节既不直接也不容易理解。这篇文章的目的就是为了帮助那些想更深一步学习了解 JavaScript 作用域的开发者，尤其是当他们听到一些关于作用域的单词的时候。","title":"[译] 你想知道的关于 JavaScript 作用域的一切","lastCommentTime":"2016-06-29T03:32:04.858Z","type":"article","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571580},"viewsCount":1012,"summaryInfo":"JavaScript中有许多章节是关于的,但是对于初学者来说(甚至是一些有经验的JavaScript开发者),这些有关作用域的章节既不直接也不容易理解.这篇文章的目的就是为了帮助那些想更深一步学习了解JavaScript作用域的开发者,尤其是当他们听到一些关于作用域的单词的时候,好比:,,,,,,...","isCollected":false},{"collectionCount":65,"autoPass":true,"commentsCount":13,"gfw":false,"buildTime":1572447256.3199,"checkStatus":true,"objectId":"5ad89ec2f265da0ba2668561","entryView":"","subscribersCount":0,"ngxCachedTime":1572571764,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571653,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571749,"ngxCached":true,"title":"安全","id":"5597a500e4b08a686ce5efc3"},{"ngxCachedTime":1572571748,"ngxCached":true,"title":"微信","id":"55b9036700b0cecc83240cb7"}],"isEvent":false,"rankIndex":0.000093346114342304,"hot":false,"updatedAt":"2019-10-30T14:54:16.303Z","originalUrl":"https://juejin.im/post/5ad89dd0f265da0b873a07a2","verifyCreatedAt":"2018-04-19T13:50:58.359Z","createdAt":"2018-04-19T13:50:58.359Z","user":{"community":{"github":{"username":"crazylxr","avatarLarge":"https://avatars1.githubusercontent.com/u/16161407?v=4","uid":"16161407"}},"collectedEntriesCount":298,"company":"蘑菇街","followersCount":1728,"followeesCount":21,"role":"editor","postedPostsCount":21,"level":3,"isAuthor":true,"postedEntriesCount":5,"totalCommentsCount":275,"ngxCachedTime":1572571731,"ngxCached":true,"viewedEntriesCount":4655,"jobTitle":"前端打杂","subscribedTagsCount":84,"totalCollectionsCount":2245,"username":"桃翁","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082beb449a8635e","objectId":"576e489079bc44005bf2e248"},"author":"","screenshot":"","original":true,"hotIndex":145.0877,"content":"变量提升（Hoisting）被认为是， Javascript 中执行上下文 （特别是创建和执行阶段）工作方式的一种认识。具体表现就是所有通过 var 声明的变量会提升到当前作用域的最前面。 可以看到用 var 声明了的并不会报错。因为其实函数 bar 等同于 大多数类 C 语言…","title":"ES6之块级作用域","lastCommentTime":"2019-08-14T21:48:03.426Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":1334,"summaryInfo":"作用域指变量所作用的范围，在 Javascript 中有两种作用域： 变量提升（Hoisting）被认为是， Javascript 中执行上下文 （特别是创建和执行阶段）工作方式的一种认识。具体表现就是所有通过 var 声明的变量会提升到当前作用域的最前面。 可以看到用 var 声明了的并不会报错...","isCollected":false},{"collectionCount":64,"commentsCount":1,"gfw":false,"entryView":"58c02dd161ff4b005d7b776b","subscribersCount":1,"ngxCachedTime":1572571777,"updatedAt":"2019-10-20T06:43:35.196Z","tags":[{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571769,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58c0177bda2f6019f62ffed2","rankIndex":0.000028999036943612,"hot":false,"autoPass":false,"originalUrl":"https://github.com/linesh-simplicity/linesh-simplicity.github.io/issues/131","buildTime":1571553815.2144,"createdAt":"2017-03-08T14:38:51.161Z","user":{"community":{"weibo":{"selfDescription":"未知的可能性。","uid":"2323702154","blogAddress":"http://weibo.com/liqing215","username":"立青油菜花","avatarLarge":"https://tva2.sinaimg.cn/crop.0.0.1152.1152.180/8a80e18ajw8emwoxzvgo4j20w00w0wgn.jpg?KID=imgbed,tva&Expires=1570624705&ssig=OmVqKvbMA4"},"github":{"username":"JimmyLv","avatarLarge":"https://avatars3.githubusercontent.com/u/4997466?v=4","uid":"4997466"}},"collectedEntriesCount":1506,"company":"宝尊电商","followersCount":1203,"followeesCount":26,"role":"editor","postedPostsCount":12,"level":2,"isAuthor":true,"postedEntriesCount":25,"totalCommentsCount":54,"ngxCachedTime":1572571756,"ngxCached":true,"viewedEntriesCount":2403,"jobTitle":"资深开发工程师","subscribedTagsCount":120,"totalCollectionsCount":2807,"username":"吕立青","avatarLarge":"https://lc-gold-cdn.xitu.io/716b83d0802b0d203b82.jpg?imageView/1/w/100/h/100/q/80/format/png","objectId":"5628752900b07a1836200154"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/0f2bfebba78c101eb42a.jpg","original":false,"hotIndex":100.7374,"content":"为什么先讲 作用域 scope 和 闭包 closure ？因为它对接下来要学习的 OO JavaScript 很重要；\n支持 OO JavaScript 的两个关键技术是：this 和 原型 prototype；","title":"一：面向对象的 JavaScript  1.1 作用域 Scope","lastCommentTime":"2017-03-08T23:02:22.063Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":710,"summaryInfo":"作用域是什么呢？它指的是你的变量和函数运行到某个地方的代码处能否被访问到。为什么需要作用域呢？为什么要限制变量的访问性而非全部暴露到公共域下呢？这是计算机科学中最基本的概念和理念：隔离性（The Principle of Least Access）。为了职责明确，你只能刚好访问到你需要的所有东西，...","isCollected":false},{"collectionCount":63,"autoPass":false,"commentsCount":4,"gfw":false,"buildTime":1571853035.0928,"checkStatus":true,"objectId":"5ae2f5be518825672033cc74","entryView":"","subscribersCount":0,"ngxCachedTime":1572571766,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571725,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000091919223175272,"hot":false,"updatedAt":"2019-10-23T17:50:35.073Z","originalUrl":"https://juejin.im/post/5ae2f3566fb9a07a9b35af6a","verifyCreatedAt":"2018-04-28T02:24:49.848Z","createdAt":"2018-04-28T02:24:49.848Z","user":{"community":{"github":{"username":"ZhelinCheng","avatarLarge":"https://avatars0.githubusercontent.com/u/16441850?v=4","uid":"16441850"}},"collectedEntriesCount":39,"company":"","followersCount":7,"followeesCount":2,"role":"guest","postedPostsCount":2,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":7,"ngxCachedTime":1572571766,"viewedEntriesCount":869,"jobTitle":"低级切图仔","subscribedTagsCount":12,"totalCollectionsCount":81,"username":"ZheLin","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08309693668f3e8","objectId":"57c8370e79bc440063eb19ec"},"author":"","screenshot":"","original":true,"hotIndex":137.0073,"content":"作用域，这个词在编程界经常能听到看到，每一个程序员几乎都有被问到过。在前端圈，面试JavaScript相关知识，这可以算说是一个非常基础的问题了。但早年间我长期陷入了一种“只可意会不可言传”的地步，我不知道是不是有许多小伙伴与我曾经有一样的经历，所以我就抽时间把书本中看到的东西…","title":"再谈JavaScript作用域——你确定你真的知道？","lastCommentTime":"2018-05-08T07:26:41.125Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":1397,"summaryInfo":"作用域，这个词在编程界经常能听到看到，每一个程序员几乎都有被问到过。在前端圈，面试JavaScript相关知识，这可以算说是一个非常基础的问题了。但早年间我长期陷入了一种“只可意会不可言传”的地步，我不知道是不是有许多小伙伴与我曾经有一样的经历，所以我就抽时间把书本中看到的东西整理了一下。把提炼的...","isCollected":false},{"collectionCount":62,"autoPass":false,"commentsCount":9,"gfw":false,"buildTime":1572540444.5769,"checkStatus":true,"objectId":"5abf610f6fb9a028c5234f31","entryView":"","subscribersCount":0,"ngxCachedTime":1572571750,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571660,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.00014194121036339,"hot":false,"updatedAt":"2019-10-31T16:47:24.559Z","originalUrl":"https://juejin.im/post/5abf5b5af265da23a1420833","verifyCreatedAt":"2018-04-02T04:01:49.911Z","createdAt":"2018-04-02T04:01:49.911Z","user":{"community":{"github":{"username":"leiting1998","avatarLarge":"https://avatars2.githubusercontent.com/u/18072105?v=4","uid":"18072105"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLFM4HMOulV8AnJ465UwJRHtM4LgPWYPkXacmkT2NebjGI1J9m47ZsAKJgon7AbAOWZMicwVBicbq5g/132"}},"collectedEntriesCount":37,"company":"重庆邮电大学","followersCount":35,"followeesCount":12,"role":"guest","postedPostsCount":8,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":25,"ngxCachedTime":1572571633,"ngxCached":true,"viewedEntriesCount":1176,"jobTitle":"大三啦","subscribedTagsCount":15,"totalCollectionsCount":415,"username":"leiting1998","avatarLarge":"https://user-gold-cdn.xitu.io/2018/10/14/1667266043c280e8?w=1066&h=1600&f=jpeg&s=303135","objectId":"5aa7b4c9518825558358ea06"},"author":"","screenshot":"","original":true,"hotIndex":231.652,"content":"贫道，感觉，JS的坑，不是一般地大。 变量提升（ hoisting ）。 这段代码，很意外地简单，我们的到了想要的结果，在控制台打印出了：Hello JavaScript hoisting 。 现在，我将这一段代码，改一改，将 调用 放在前面， 声明 放在后面。 很多语言比如说…","title":"理解 JS 作用域链与执行上下文","lastCommentTime":"2019-09-10T17:04:13.419Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":3202,"summaryInfo":"贫道，感觉，JS的坑，不是一般地大。 变量提升（ hoisting ）。 你读完下面内容就会明白标题的含义，先来一段超级简单的代码： 这段代码，很意外地简单，我们的到了想要的结果，在控制台打印出了： 。 现在，我将这一段代码，改一改，将 调用 放在前面， 声明 放在后面。 很多语言比如说 或者 都...","isCollected":false},{"collectionCount":62,"userRankIndex":13.097896169971,"buildTime":1572519761.0193,"commentsCount":22,"gfw":false,"objectId":"5cf8dd3ee51d455d6d5357d2","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571634,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T11:02:41.002Z","rankIndex":0.0010414111775523,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cf8612df265da1bcb4f1bf8","verifyCreatedAt":"2019-06-06T09:37:06.932Z","createdAt":"2019-06-06T09:37:06.932Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLiaibvicQdq1Uzcwh74EHYyfXjbLOPxvIKkV0dZQDt5ddWh74vmqNuNTp6CiarZF9r0PngiamE3svJM9w/132"}},"collectedEntriesCount":124,"company":"BUG搬运公司","followersCount":4120,"followeesCount":28,"role":"guest","postedPostsCount":11,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":230,"ngxCachedTime":1572571532,"ngxCached":true,"viewedEntriesCount":3743,"jobTitle":"临时工","subscribedTagsCount":12,"totalCollectionsCount":2906,"username":"幻灵尔依","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e09b9430f8db44bb","objectId":"5c395fb5e51d454ddb2bd18c"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/6/7/16b2fe557a13afd5?w=1920&h=1080&f=jpeg&s=132974","original":true,"hotIndex":205.3576,"content":"js 中的作用域是词法作用域，是由 函数声明时 所在的位置决定的。词法作用域是指在编译阶段就产生的，一整套函数标识符的访问规则。 说到底js的作用域只是一个“空地盘”，其中并没有真实的变量，但是却定义了变量如何访问的规则。（词法作用域是在编译阶段就确认的，区别于词法作用域，动态…","title":"JS基础篇之作用域、执行上下文、this、闭包","lastCommentTime":"2019-06-11T18:05:41.540Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":2427,"summaryInfo":"js中的作用域是词法作用域，即由 函数声明时 所在的位置决定的。词法作用域是指在编译阶段就产生的，一整套函数标识符的访问规则。（区别于词法作用域，动态作用域是在函数执行的时候确认的，js的没有动态作用域，但js的很像动态作用域，后面会提到。词法作用域的概念十分重要，请多加记忆并理解。） 说到底js...","isCollected":false},{"collectionCount":59,"commentsCount":3,"gfw":false,"objectId":"5a0cebadf265da430f31a4e8","checkStatus":true,"buildTime":1572223487.0155,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571774,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"autoPass":true,"rankIndex":0.000048776564888039,"hot":false,"updatedAt":"2019-10-28T00:44:46.998Z","originalUrl":"https://juejin.im/post/5a0ce9ae51882561a20a0573","verifyCreatedAt":"2017-11-16T05:38:06.873Z","createdAt":"2017-11-16T05:38:06.873Z","user":{"community":null,"collectedEntriesCount":59,"company":"","followersCount":216,"followeesCount":0,"role":"guest","postedPostsCount":11,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":110,"ngxCachedTime":1572571730,"ngxCached":true,"viewedEntriesCount":2552,"jobTitle":"周期工程师","subscribedTagsCount":495,"totalCollectionsCount":1804,"username":"深谷逸风","avatarLarge":"https://user-gold-cdn.xitu.io/2017/11/16/c2e25d0f5fe4eb7295f4449b1a78402b","objectId":"59b1efb0f265da24701ef0af"},"author":"","screenshot":"","original":true,"hotIndex":108.6886,"content":"","title":"javascript 函数作用域中的关键字this的指向","lastCommentTime":"2018-01-31T23:32:48.887Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":914,"summaryInfo":"对于初学者来说，关键字this总是让人捉摸不透，甚是复杂，但是其实，只要你摸透了其中关键所在，便也无甚烦恼了； 其实this在函数中指向的是什么，都是围绕两个原则，就是谁引用他他就指向谁与就近原则； 一般this的指向性问题分为下面几类，我们来看具体实例 上面两个例子都是普通函数，他们指向的都是w...","isCollected":false},{"collectionCount":57,"commentsCount":0,"gfw":false,"entryView":"581d4f19bf22ec0068c4f319","subscribersCount":0,"ngxCachedTime":1572571392,"updatedAt":"2019-08-23T02:00:02.088Z","tags":[{"ngxCachedTime":1572571347,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"},{"ngxCachedTime":1572571377,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571375,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"}],"objectId":"581d2b5ca22b9d0067bc2dda","rankIndex":0.00002645243499425,"hot":false,"autoPass":false,"originalUrl":"http://liujiacai.net/blog/2016/05/28/scope-closure/","buildTime":1566525602.1054,"createdAt":"2016-11-05T00:44:12.549Z","user":{"community":{"weibo":{"avatar_url":"http://tva2.sinaimg.cn/crop.0.0.193.193.180/5fee18eegw1ejclkxvjp2j205e05ejrr.jpg","uid":"1609439470","nickname":"jiacai2050"},"github":{"username":"jiacai2050","avatarLarge":"https://avatars1.githubusercontent.com/u/3848910?v=4","uid":"3848910"}},"collectedEntriesCount":16,"company":"","followersCount":621,"followeesCount":7,"role":"editor","postedPostsCount":9,"level":2,"isAuthor":true,"postedEntriesCount":11,"totalCommentsCount":24,"ngxCachedTime":1572571295,"ngxCached":true,"viewedEntriesCount":556,"jobTitle":"后端工程师","subscribedTagsCount":20,"totalCollectionsCount":765,"username":"jiacai2050","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e083046b71f7a16b","objectId":"57c2431b165abd00665ee39f"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/ca3c56d6919c59b990e3.png","original":true,"hotIndex":101.4802,"content":"这篇文章首先介绍作用域相关的知识，主要是比较 dynamic scope 与 static(或 lexical) scope 语言的优劣势；然后分析 Python 中为什么需要 global 和 nonlocal，Javascript 为什么有变量提升，我这里不仅仅是介绍 what，更重要的是 why，要知道这两门语言的设计者都是深耕 CS 领域多年的老手，不会轻易犯错的，肯定有 “不为人知” 的一面，但遗憾的是网上大部分文章就是解释 what，很少有涉及到 why 的，希望我这篇文章能够填充这一空缺；最后介绍闭包这一重要概念。","title":"编程语言中的变量作用域与闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571340},"viewsCount":887,"summaryInfo":"文章目录如果你写过 javascript，应该听说过变量提升（hoisting），如果你自诩“Life is short, I use Python”，那么多多少少会用过、这两个关键字。无论新手还是老手，遇到这些时都会觉得很别扭，稍不留神就会出现意想不到的 bug，如果你仔细观察就会发现，它们其实...","isCollected":false},{"collectionCount":56,"commentsCount":3,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571777,"updatedAt":"2019-10-25T20:05:14.195Z","tags":[{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"59808f3d51882537ad02b67a","rankIndex":0.000035841141729353,"hot":false,"autoPass":false,"originalUrl":"https://github.com/carolineLH/Js_project/blob/master/README.md","buildTime":1572033914.2122,"createdAt":"2017-08-02T03:32:56.071Z","user":{"community":{"github":{"username":"carolineLH","avatarLarge":"https://avatars3.githubusercontent.com/u/29778950?v=4","uid":"29778950"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTInR8EFnGZwPrbTSGQbNLZtZNgJkEoHoeyibviaqiaVKDP46AwG0k5Z7hiaV9mCTQJDoubiaQjSUOUuwKQ/132"}},"collectedEntriesCount":90,"company":"","followersCount":140,"followeesCount":27,"role":"editor","postedPostsCount":3,"level":2,"isAuthor":true,"postedEntriesCount":6,"totalCommentsCount":51,"ngxCachedTime":1572571769,"ngxCached":true,"viewedEntriesCount":1312,"jobTitle":"前端","subscribedTagsCount":26,"totalCollectionsCount":862,"username":"caraline","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/3/0d283929b99873535d3c8e67a893bd72","objectId":"5958b512f265da6c2f0a9edb"},"author":"","screenshot":"","original":true,"hotIndex":97.9986,"content":"闭包，似乎是JavaScript中分离出来的一个未开化的世界，有无尽的宝藏，让我们一起去探险吧！😊","title":"作用域闭包","lastCommentTime":"2017-08-03T09:44:36.602Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":776,"summaryInfo":"想要好好的理解闭包，你得首先理解作用域。别说了，赶紧去看作用域吧， 😩，这世界就是如此残酷。好，言归正传，我们是来学习闭包的。O(∩_∩)O 百度了一波,but理解不了哇。别怕，我来帮你。其实，可以这样理解的：魔术师的幕后藏着一个人，我们要揭开他的伪装，伪装之后的那个人是..知道你会说就是闭包了。...","isCollected":false},{"collectionCount":55,"commentsCount":1,"gfw":false,"entryView":"57864076c4c971005c505f5b","subscribersCount":1,"ngxCachedTime":1572571774,"updatedAt":"2019-10-24T08:27:03.352Z","tags":[{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571681,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"objectId":"57863e437db2a200630b116c","rankIndex":0.000022176238535699,"hot":false,"autoPass":false,"originalUrl":"http://www.w3cplus.com/javascript/variables-and-scoping-in-es6.html","buildTime":1571905623.3691,"createdAt":"2016-07-13T13:12:35.476Z","user":{"community":{"weibo":{"selfDescription":"你听过小跳蛙吗？","uid":"1761535457","blogAddress":"http://weibo.com/117879051","username":"王子变跳蛙","avatarLarge":"http://tva3.sinaimg.cn/crop.0.0.512.512.180/68fee5e1jw8evdo4h5gzjj20e80epwfu.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLAjhv4IwvkTib8bnMaBMedKjH0DmaWhBLnjiaKMIVRVibP4aibLWibMAgFFhX2CdwnrwGHcibZbdicIibBotA/132"},"github":{"uid":"6170899","nickname":"MrDream","avatar_url":"https://avatars.githubusercontent.com/u/6170899?v=3","username":"mrdream24","bio":"我的琴声呜咽，泪水全无","html_url":"https://github.com/mrdream24"}},"collectedEntriesCount":296,"company":"不饿","followersCount":6340,"followeesCount":94,"role":"editor","postedPostsCount":2,"level":2,"isAuthor":true,"postedEntriesCount":137,"totalCommentsCount":277,"ngxCachedTime":1572571717,"ngxCached":true,"viewedEntriesCount":4580,"jobTitle":"前端","subscribedTagsCount":46,"totalCollectionsCount":13377,"username":"MrDream24","avatarLarge":"https://user-gold-cdn.xitu.io/2018/3/27/1626638803b5ffb2?w=1080&h=1080&f=jpeg&s=299643","objectId":"56a319852e958a0059576864"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/5d81fec9a65a49825a55.jpg","original":false,"hotIndex":108.0948,"content":"详解 ES6 中的变量和作用域，很实用","title":"ES6 中的变量和作用域_JavaScript, ES6, 变量 教程_w3cplus","lastCommentTime":"2016-07-14T01:31:55.450Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":1033,"summaryInfo":"这篇文章主要是探讨如何处理ES6中的变量和作用域。 使用和创建块作用域，他们声明的变量只存在块内。比如下面的示例，声明的变量只存在于语句块，也只有在语句块内有效。 相比之下，使用声明的变量，在整个函数域内都有效： 而使用创建的变量是不可变量，其是一个常量： 注意:并不影响一个常数是否可变，如果一个...","isCollected":false},{"collectionCount":50,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1571553867.3416,"checkStatus":true,"objectId":"5b5ecf91e51d45191c7e8466","entryView":"","subscribersCount":0,"ngxCachedTime":1572571781,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571736,"ngxCached":true,"title":"算法","id":"55cd843d60b203b0519307a9"}],"isEvent":false,"rankIndex":0.000074006457776226,"hot":false,"updatedAt":"2019-10-20T06:44:27.323Z","originalUrl":"https://juejin.im/post/5b5ad8766fb9a04fbe12e99f","verifyCreatedAt":"2018-07-31T07:02:12.533Z","createdAt":"2018-07-31T07:02:12.533Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/ADCGgm8ia4iaCs1AyKGYDiapRahmib6ew4PmaZX7oWDXxV1ch8UT209NoYiamQbgjSCSWtKLpZibnZAjVm1LBQDwLiaXQ/132"}},"collectedEntriesCount":15,"company":"","followersCount":1,"followeesCount":8,"role":"guest","postedPostsCount":5,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":2,"ngxCachedTime":1572571781,"viewedEntriesCount":107,"jobTitle":"","subscribedTagsCount":26,"totalCollectionsCount":99,"username":"不愿意透露姓名的聂先生","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e09221e6c55db17e","objectId":"5b51432ce51d45195f0b2a6d"},"author":"","screenshot":"","original":true,"hotIndex":81.9656,"content":"我们都知道一个执行上下文的数据（变量、函数声明和函数的形参）作为属性存储在变量对象中，同时我们也应该知道变量对象在每次进入上下文时创建并填入初始值，值的更新出现在代码执行阶段。那么咱们专门讨论与执行上下文直接相关的更多细节，这次我们将提及一个议题——作用域链。 如果要简要的描述…","title":"擒贼先擒王，简单谈一下JavaScript作用域链（Scope Chain）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":632,"summaryInfo":"我们都知道一个执行上下文的数据（变量、函数声明和函数的形参）作为属性存储在变量对象中，同时我们也应该知道变量对象在每次进入上下文时创建并填入初始值，值的更新出现在代码执行阶段。那么咱们专门讨论与执行上下文直接相关的更多细节，这次我们将提及一个议题——作用域链。 如果要简要的描述并展示其重点，那么作...","isCollected":false},{"collectionCount":50,"isEvent":false,"commentsCount":8,"gfw":false,"buildTime":1572456991.1833,"checkStatus":true,"objectId":"5caa176c6fb9a05e5b2ae032","entryView":"","subscribersCount":0,"ngxCachedTime":1572571640,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T17:36:31.165Z","rankIndex":0.00036086263880088,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ca995626fb9a05e1a7aabd8","verifyCreatedAt":"2019-04-07T23:39:17.211Z","createdAt":"2019-04-07T23:39:17.211Z","user":{"community":{"github":{"username":"YanceyOfficial","avatarLarge":"https://avatars2.githubusercontent.com/u/30535332?v=4","uid":"30535332"}},"collectedEntriesCount":352,"company":"进击的前端","followersCount":466,"followeesCount":86,"role":"guest","postedPostsCount":15,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":185,"ngxCachedTime":1572571640,"viewedEntriesCount":5122,"jobTitle":"公众号","subscribedTagsCount":8,"totalCollectionsCount":1361,"username":"YanceyOfficial","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/2/16a781771374fb5c?w=890&h=1073&f=jpeg&s=48642","objectId":"5bc82522f265da0af1617021"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/4/7/169f86b6a294ef6a?w=2940&h=1551&f=jpeg&s=89037","original":true,"hotIndex":125.2548,"content":"对于大部分编程语言, 编译大致有三个步骤. 此过程将源代码分解成 词法单元 (token), 如代码 const firstName = 'Yancey' 会被分解成 const, firstName, =, 'Yancey', 空格是否会被当成词法单元, 取决于空格对这门语言…","title":"从 JS 编译原理到作用域(链)及闭包","lastCommentTime":"2019-04-10T18:30:22.931Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":1342,"summaryInfo":"对于大部分编程语言, 编译大致有三个步骤. 除上面三个阶段之外, JavaScript 引擎还对 语法分析、代码生成、编译过程 进行一些优化, 这一块估计得看 v8 源码了, 先留个坑. 有个库叫做 Acorn, 用来解析 JavaScript 代码, 像 webpack、eslint 都有用到,...","isCollected":false},{"collectionCount":50,"isEvent":false,"commentsCount":4,"gfw":false,"buildTime":1572516117.9896,"checkStatus":true,"objectId":"5c808e416fb9a04a0b22f391","entryView":"","subscribersCount":0,"ngxCachedTime":1572571637,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T10:01:57.975Z","rankIndex":0.00037326314793741,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c808dc46fb9a04a10300f7f","verifyCreatedAt":"2019-03-07T03:32:12.829Z","createdAt":"2019-03-07T03:32:12.829Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/20T4al0niay5uohibhibqDMoibcHqibY42h5dotZXnwwhey6ia01A0KZKgvDz7ckicEpTwdCJYXFgezicC32hWPWycnqEA/132"}},"collectedEntriesCount":87,"company":"","followersCount":319,"followeesCount":32,"role":"guest","postedPostsCount":72,"level":3,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":121,"ngxCachedTime":1572571522,"ngxCached":true,"viewedEntriesCount":1580,"jobTitle":"前端开发","subscribedTagsCount":54,"totalCollectionsCount":1028,"username":"JS菌","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/30/169cd23c307cddf3?w=1024&h=768&f=png&s=63204","objectId":"59af6538f265da246d6b2a25"},"author":"","screenshot":"","original":true,"hotIndex":161.4551,"content":"常见的变量作用域就是 静态作用域（词法作用域） 与 动态作用域 。词法作用域注重的是 write-time ，即 编程时的上下文 ，而 动态作用域 则注重的是 run-time ，即 运行时上下文 。词法作用域中我们需要知道一个函数 在什么地方被定义 ，而动态作用域中我们需要关…","title":"🎁大白话解释作用域和闭包是个啥","lastCommentTime":"2019-03-11T22:54:42.142Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":2148,"summaryInfo":"常见的变量作用域就是 静态作用域（词法作用域） 与 动态作用域 。词法作用域注重的是 WRITE-TIME ，即 编程时的上下文 ，而 动态作用域 则注重的是 RUN-TIME ，即 运行时上下文 。词法作用域中我们需要知道一个函数 在什么地方被定义 ，而动态作用域中我们需要关心的是函数 在什么地...","isCollected":false},{"collectionCount":49,"autoPass":true,"commentsCount":1,"gfw":false,"buildTime":1571748814.166,"checkStatus":true,"objectId":"5b8e669651882542ea13daf9","entryView":"","subscribersCount":0,"ngxCachedTime":1572571642,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.000098807034061686,"hot":false,"updatedAt":"2019-10-22T12:53:34.148Z","originalUrl":"https://www.zcfy.cc/article/javascript-loops-and-scope","verifyCreatedAt":"2018-09-04T11:03:50.611Z","createdAt":"2018-09-04T11:03:50.611Z","user":{"community":null,"collectedEntriesCount":235,"company":"","followersCount":7827,"followeesCount":35,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":224,"totalCommentsCount":166,"ngxCachedTime":1572571636,"ngxCached":true,"viewedEntriesCount":238,"jobTitle":"翻译，求知的另一种表达","subscribedTagsCount":9,"totalCollectionsCount":7981,"username":"众成翻译","avatarLarge":"https://user-gold-cdn.xitu.io/2018/3/30/16275a86e4bb52a2?w=461&h=461&f=png&s=51937","objectId":"5abddb3c6fb9a028c812f56f"},"author":"","screenshot":null,"original":false,"hotIndex":97.5474,"content":"","title":"JavaScript循环和作用域","lastCommentTime":"2018-09-05T03:46:38.435Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":948,"summaryInfo":"JavaScript有一个特点，也许会让开发者头痛, 是与循环和作用域相关的. 它基本是循环了5次，将一个函数添加到operations数组里面。这个函数可打印出循环变量索引值. 为什么会有这种情况? 因为使用的是. 由于提升了变量, 上面的代码等同于 因此，在for-of循环中, 依然是可见的,...","isCollected":false},{"collectionCount":46,"commentsCount":7,"gfw":false,"objectId":"5a7ad1f2f265da4e865a5995","checkStatus":true,"buildTime":1571068393.9388,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571644,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"autoPass":false,"rankIndex":0.000043944251246752,"hot":false,"updatedAt":"2019-10-14T15:53:13.922Z","originalUrl":"https://www.fragmentwall.com/fragment/SJYI-guIG/understand-the-scope-in-javascript","verifyCreatedAt":"2018-02-09T03:00:25.010Z","createdAt":"2018-02-09T03:00:25.010Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Y4R8glNgDXjwCQDeu2VhJDvkfObopePHtbL17RVjJVY3fGuheQmPEtp3jlwuJV3V7iaeSCsuWcvHqwcw1f3z0iaQ/132"},"github":{"username":"monsterooo","avatarLarge":"https://avatars3.githubusercontent.com/u/18432680?v=4","uid":"18432680"}},"collectedEntriesCount":335,"company":"https://coderlane.net","followersCount":499,"followeesCount":30,"role":"guest","postedPostsCount":12,"level":2,"isAuthor":false,"postedEntriesCount":7,"totalCommentsCount":51,"ngxCachedTime":1572571582,"ngxCached":true,"viewedEntriesCount":1738,"jobTitle":"打杂的呢","subscribedTagsCount":18,"totalCollectionsCount":372,"username":"Monster000","avatarLarge":"https://user-gold-cdn.xitu.io/2018/12/3/1677021c1885788c?w=400&h=400&f=jpeg&s=17009","objectId":"5a79e6f65188257a716854aa"},"author":"","screenshot":"","original":false,"hotIndex":78.336,"content":"","title":"理解 JavaScript 中的作用域","lastCommentTime":"2018-02-11T18:08:03.592Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":506,"summaryInfo":"作用域是 JavaScript 中的一个重要而又模糊的概念。只有正确使用 JavaScript 作用域，才能使用优秀的设计模式，帮助你规避副作用。本文中，我们将会详细分析 JavaScript 的不同类型的作用域，以及为了写出更好的代码，介绍它们是如何工作的。 作用域的简单定义是编译器需要变量和函...","isCollected":false},{"collectionCount":46,"commentsCount":0,"gfw":false,"entryView":"58070f872f301e006c9c5df9","subscribersCount":0,"ngxCachedTime":1572571340,"updatedAt":"2019-10-25T01:14:45.156Z","tags":[{"ngxCachedTime":1572571320,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"objectId":"58070c78a22b9d005b62b5f0","rankIndex":0.000017277850610942,"hot":false,"autoPass":false,"originalUrl":"http://blog.csdn.net/crper/article/details/52698021","buildTime":1571966085.1729,"createdAt":"2016-10-19T06:02:32.872Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/eSEBBXEPlm7ZibVLZibMASYpk9bu0Bicwr4tQn6PZy7nRoTavqL9HD2pSOFW7dJPvoRTrCgphRBHYN6DkGPjcK7aQ/132"},"github":{"username":"crper","avatarLarge":"https://avatars0.githubusercontent.com/u/8272877?v=4","uid":"8272877"}},"collectedEntriesCount":100,"company":"WeChat: MY1083","followersCount":14202,"followeesCount":10,"role":"editor","postedPostsCount":87,"level":5,"isAuthor":true,"postedEntriesCount":72,"totalCommentsCount":861,"ngxCachedTime":1572571333,"ngxCached":true,"viewedEntriesCount":15677,"jobTitle":"🎖️BUG攻城狮,大前端,伪架构","subscribedTagsCount":225,"totalCollectionsCount":18165,"username":"CRPER","avatarLarge":"https://user-gold-cdn.xitu.io/2018/1/26/16131f8dea4459b4?w=1016&h=1016&f=jpeg&s=252903","objectId":"575ebdbd5bbb5000638173fb"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/0493316187423f973c4c.jpg","original":true,"hotIndex":74.1983,"content":"话说 ES6 之前有局部变量，全局变量，唯独木有块级变量; 也没有常量之说...","title":"ES6 折腾记 - let/const 块级变量及块作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571264},"viewsCount":561,"summaryInfo":"ES5及之前是木有块级变量这个说法的，常规性是用闭包来防止变量泄露; 我来列出下ES5 var声明的一些特点 而ES6中出了一个新变量，不在于取代,而在于解决ES5中声明中的一些痛点；这货就是了 我来说说这货的特点 这货和是好基友；为了让我们代码更加清晰，不至于越来越混乱，为了更美好的明天，我们有...","isCollected":false},{"collectionCount":43,"commentsCount":3,"gfw":false,"objectId":"5a3d0ea65188255de57df71c","checkStatus":true,"buildTime":1572263511.6132,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571784,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571778,"ngxCached":true,"title":"jQuery","id":"5599f577e4b08a686d142949"},{"ngxCachedTime":1572571757,"ngxCached":true,"title":"运维","id":"5602d88360b27db45a7f3bdc"}],"autoPass":true,"rankIndex":0.000036736389041774,"hot":false,"updatedAt":"2019-10-28T11:51:51.596Z","originalUrl":"https://github.com/Mcbai/Blog/issues/3","verifyCreatedAt":"2017-12-25T06:49:11.900Z","createdAt":"2017-12-25T06:49:11.900Z","user":{"community":{"github":{"username":"Mcbai","avatarLarge":"https://avatars2.githubusercontent.com/u/12459860?v=4","uid":"12459860"}},"collectedEntriesCount":11,"company":"","followersCount":2525,"followeesCount":6,"role":"guest","postedPostsCount":6,"level":2,"isAuthor":false,"postedEntriesCount":15,"totalCommentsCount":53,"ngxCachedTime":1572571728,"ngxCached":true,"viewedEntriesCount":1063,"jobTitle":"","subscribedTagsCount":9,"totalCollectionsCount":542,"username":"Mcbai","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0830fec80aae9b7","objectId":"57d1352a7db2a200681fd222"},"author":"","screenshot":null,"original":false,"hotIndex":75.2855,"content":"新手拿来入门，中手以作习文，老司机请在评论区任意飙车","title":"题解JavaScript作用域","lastCommentTime":"2018-11-15T10:28:20.493Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":572,"summaryInfo":"又到一年底，大家是不是又开始蠢蠢欲动，准备开始到处吹嘘了。 凡是参加过面试的朋友应该都有过一个相同的感受，就是面试官常常会抛出个很宏观的问题，让你有种 狗啃乌龟，不知从何下口 的赶脚。 我记得之前问过一个从事开发十来年的大哥，大哥贼猛，前后端通杀，运维也照样搞，撸码就是一把梭，抡起jQuery就是...","isCollected":false},{"collectionCount":41,"commentsCount":7,"gfw":false,"objectId":"59e96a7bf265da432f303d4c","checkStatus":true,"buildTime":1572356337.1713,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571780,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571780,"ngxCached":false,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"autoPass":false,"rankIndex":0.000035703677069229,"hot":false,"updatedAt":"2019-10-29T13:38:57.154Z","originalUrl":"https://my.oschina.net/huskydog/blog/1553720","verifyCreatedAt":"2017-10-20T05:45:35.437Z","createdAt":"2017-10-20T05:45:35.437Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLetObiaicw0oSSr8ibocKfh6UicskK7qPD4WStRXicOicV6xepSDWPnWT4jrnCicEibIDHYPqjiawlBVeE8UA/132"}},"collectedEntriesCount":17,"company":"医渡云","followersCount":1,"followeesCount":6,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":5,"ngxCachedTime":1572571780,"viewedEntriesCount":320,"jobTitle":"前端工程师","subscribedTagsCount":20,"totalCollectionsCount":44,"username":"爱coding的husky","avatarLarge":"https://user-gold-cdn.xitu.io/2017/10/20/27d0989b07adb0fe8d031f73051e2d48","objectId":"58f87a2061ff4b00664a7430"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/10/20/d01087702108c786f2c6676e06e6f141","original":false,"hotIndex":84.3962,"content":"最近在模仿swiper鼓捣一个轮播图插件时，碰到了setInterval的作用域问题，轮播的方法写在一个对象里，但是setInterval执行这个方法后，在方法体内无法访问这个对象的属性了，业务逻辑代码如下：      以上代码并没有按照预期情况（循环递增num）来执行，执行结…","title":"关于setInterval与setTimeout作用域问题","lastCommentTime":"2019-05-12T11:26:26.023Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":725,"summaryInfo":"        最近在模仿swiper鼓捣一个轮播图插件时，碰到了setInterval的作用域问题，轮播的方法写在一个对象里，但是setInterval执行这个方法后，在方法体内无法访问这个对象的属性了，业务逻辑代码如下：         以上代码并没有按照预期情况（循环递增num）来执行，执行...","isCollected":false},{"collectionCount":41,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571789,"updatedAt":"2019-10-20T20:57:41.732Z","tags":[{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"5980709951882537e0595efa","rankIndex":0.000024276538731272,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/a1b63decb983","buildTime":1571605061.7519,"createdAt":"2017-08-02T03:56:56.219Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLTLicc0w6SgPWnuKRLrVDia8zPWNDibGLusfvNdGLE0GYgN79riccRKaNCbkz91LzygiagU8mRrLkZoBw/132"}},"collectedEntriesCount":18,"company":"亚博科技","followersCount":1,"followeesCount":74,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":0,"ngxCachedTime":1572571790,"viewedEntriesCount":1056,"jobTitle":"","subscribedTagsCount":34,"totalCollectionsCount":42,"username":"半老大","avatarLarge":"https://user-gold-cdn.xitu.io/2019/7/23/16c1e5323f77afda?w=144&h=144&f=png&s=8694","objectId":"57b082201532bc00617c6e12"},"author":"","screenshot":"","original":true,"hotIndex":65.7704,"content":"js中的作用域与预解释","title":"js中的作用域与预解释","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":481,"summaryInfo":"在开始之前先写一下js中的数据类型 . 基本数据类型 number， boolen ，string ，null， undefined . 对象数据类型 object {} [] /$/,date (对象，数据，正则，日期) ，function 当html页面加载的时候，浏览器首先会提供一个全局的j...","isCollected":false},{"collectionCount":38,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572512133.3319,"checkStatus":true,"objectId":"5af109a0f265da0b7c07373b","entryView":"","subscribersCount":0,"ngxCachedTime":1572571791,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000043592800360173,"hot":false,"updatedAt":"2019-10-31T08:55:33.314Z","originalUrl":"https://juejin.im/post/5af109426fb9a07aa047f1c7","verifyCreatedAt":"2018-05-09T02:39:24.618Z","createdAt":"2018-05-09T02:39:24.618Z","user":{"community":{"github":{"username":"MLuminary","avatarLarge":"https://avatars1.githubusercontent.com/u/17595913?v=4","uid":"17595913"}},"collectedEntriesCount":81,"company":"teambition","followersCount":9,"followeesCount":42,"role":"guest","postedPostsCount":10,"level":2,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":20,"ngxCachedTime":1572571787,"ngxCached":true,"viewedEntriesCount":914,"jobTitle":"低级前端","subscribedTagsCount":47,"totalCollectionsCount":198,"username":"Hutchins","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0874d2a76a4da67","objectId":"598bfc1df265da3e1c0f8cdf"},"author":"","screenshot":"","original":true,"hotIndex":64.3706,"content":"先创建 ECS，ECS 其实就是专门保存正在调用的函数的执行环境的数组，也可以说对象，其实关联数组也就相当于对象。 函数对象的 scope 属性，指回函数创建时的作用域，意思是，函数执行时如果函数本身提供的变量不能让函数执行完全，那它便会去回它创建时的那个作用域去寻找变量。 函…","title":"图解作用域及闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":520,"summaryInfo":"网络上关于作用域及闭包的文章很多，自己对于纯理论知识并不能很快的理解，但自己对于图画有很强的记忆和理解能力，因此决定将此知识点以图画的知识表现出来，加深自身理解的同时如果能帮到正在学习的童鞋就再好不过了 引用类型在其中只能存储地址，这个在此笔记谈谈值传递中有详细说明 函数的执行环境出栈，AO 释放...","isCollected":false},{"collectionCount":37,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572247401.0516,"checkStatus":true,"objectId":"5c70c7396fb9a049ab0e3d03","entryView":"","subscribersCount":0,"ngxCachedTime":1572571644,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-28T07:23:21.035Z","rankIndex":0.00019514215011801,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c70c6ebe51d457c2a224ac2","verifyCreatedAt":"2019-02-25T03:33:40.131Z","createdAt":"2019-02-25T03:33:40.131Z","user":{"community":{"github":{"username":"Zenquan","avatarLarge":"https://avatars2.githubusercontent.com/u/38183707?v=4","uid":"38183707"}},"collectedEntriesCount":301,"company":"","followersCount":22,"followeesCount":152,"role":"guest","postedPostsCount":10,"level":2,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":5,"ngxCachedTime":1572571644,"viewedEntriesCount":2091,"jobTitle":"前端小菜鸟","subscribedTagsCount":110,"totalCollectionsCount":103,"username":"Zenquan","avatarLarge":"https://user-gold-cdn.xitu.io/2019/6/16/16b5e5e07d2c1258?w=819&h=819&f=jpeg&s=316881","objectId":"5acc3dd6f265da23a049e242"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/3/11/1696ce214ae92148?w=751&h=303&f=png&s=8293","original":true,"hotIndex":88.0951,"content":"原型：相当于一个模具，用来生产实例对象。 原型链：原型对象有个指针指向构造函数，实例对象又有一个指针指向原型对象，就形成了一条原型链，最终指向null。 原型：就是js里实现面向对象的方式，也就是说，js就是基于原型的面向对象。 原型链：是js实现继承的方式。 以上的a就是全局…","title":"原型、原型链、作用域、作用域链、闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":1019,"summaryInfo":"原型：相当于一个模具，用来生产实例对象。 原型链：原型对象有个指针指向构造函数，实例对象又有一个指针指向原型对象，就形成了一条原型链，最终指向null。 原型：就是js里实现面向对象的方式，也就是说，js就是基于原型的面向对象。 原型链：是js实现继承的方式。 以上的a就是全局变量，到处可以访问a...","isCollected":false},{"collectionCount":35,"isEvent":false,"commentsCount":4,"gfw":false,"buildTime":1572516239.5882,"checkStatus":true,"objectId":"5c511330f265da613f2fdb0b","entryView":"","subscribersCount":0,"ngxCachedTime":1572571644,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T10:03:59.564Z","rankIndex":0.00016501898068426,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c5111f8e51d4552176c382f","verifyCreatedAt":"2019-01-30T04:08:31.794Z","createdAt":"2019-01-30T04:08:31.794Z","user":{"community":{"github":{"username":"jylzs369","avatarLarge":"https://avatars0.githubusercontent.com/u/11734375?v=4","uid":"11734375"}},"collectedEntriesCount":0,"company":"","followersCount":80,"followeesCount":6,"role":"guest","postedPostsCount":17,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":10,"ngxCachedTime":1572571644,"viewedEntriesCount":132,"jobTitle":"前端开发工程师","subscribedTagsCount":16,"totalCollectionsCount":225,"username":"jylzs369","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e09bf76497eb7f2a","objectId":"5c4aa128e51d4513732833ef"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/1/30/1689cb2b3058e9b0?w=630&h=473&f=jpeg&s=14939","original":true,"hotIndex":88.1378,"content":"作用域是程序设计里的基础特性，是作用域使得程序运行时可以使用变量存储值、记录和改变程序的“状态”。JavaScript 也毫不例外，但在 JavaScript 中作用域的特性与其他高级语言稍有不同，这是很多学习者久久难以理清的一个核心知识点。 翻译：作用域是在运行时对代码某些特…","title":"理解JavaScript的核心知识点：作用域","lastCommentTime":"2019-01-31T10:25:33.234Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":971,"summaryInfo":"作用域是程序设计里的基础特性，是作用域使得程序运行时可以使用变量存储值、记录和改变程序的“状态”。 也毫不例外，但在 中作用域的特性与其他高级语言稍有不同，这是很多学习者久久难以理清的一个核心知识点。 翻译：作用域是在运行时对代码某些特定部分中的变量、函数和对象的可访问性。换句话说，作用域决定代码...","isCollected":false},{"collectionCount":35,"autoPass":false,"commentsCount":3,"gfw":false,"buildTime":1572354506.9387,"checkStatus":true,"objectId":"5adf34646fb9a07abd0d4ea6","entryView":"","subscribersCount":0,"ngxCachedTime":1572571789,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000043689882827014,"hot":false,"updatedAt":"2019-10-29T13:08:26.921Z","originalUrl":"https://juejin.im/post/5adf213bf265da0b9d77dd8f","verifyCreatedAt":"2018-04-25T01:55:44.433Z","createdAt":"2018-04-25T01:55:44.433Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/LtHjTGlnOMYwm7C1LZEIWjm057YBsVGvMt0pjDrptP7xlt6SLOcibHyqkJFZBxibFFaRH2N6ZavoIfBKodhuRrRQ/132"},"github":{"username":"Kerinlin","avatarLarge":"https://avatars1.githubusercontent.com/u/32203226?v=4","uid":"32203226"}},"collectedEntriesCount":301,"company":"undefined","followersCount":43,"followeesCount":117,"role":"guest","postedPostsCount":4,"level":2,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":22,"ngxCachedTime":1572571789,"viewedEntriesCount":2128,"jobTitle":"前端","subscribedTagsCount":61,"totalCollectionsCount":388,"username":"Kerinlin","avatarLarge":"https://user-gold-cdn.xitu.io/2018/10/24/166a48ba69e278f5?w=768&h=768&f=jpeg&s=194514","objectId":"5acf414ef265da238c3b1061"},"author":"","screenshot":"","original":true,"hotIndex":66.7124,"content":"当调用setTimeout事件时，会把函数参数，放到事件队列中。等主程序运行完，再调用 变量和函数的访问区域,分全局作用域和函数作用域,在es6中添加let关键字后有了块级作用域概念. 为什么第一个值为undefined?因为函数体内的Gscope变量被提升至函数体顶端,但是未…","title":"由两道题扩展的对作用域,作用域链,闭包,立即执行函数,匿名函数的认识总结","lastCommentTime":"2018-04-25T16:49:14.506Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":536,"summaryInfo":"##前言最近在学JS,前几天看到两道题,刚开始看懵懵懂懂,这几天通过各种查资料,慢慢的理解,顿悟了,对匿名函数,闭包,立即执行函数的理解也更深了一点,在此分享给大家我的理解与总结,希望能帮助大家理解.因为这篇文章是我用心总结的,查阅了很多的资料,所以总结的比较细,篇幅较长,如果没耐心,建议跳出,点...","isCollected":false},{"collectionCount":34,"commentsCount":0,"gfw":false,"entryView":"578c2a8e2e958a005431d980","subscribersCount":0,"ngxCachedTime":1572571644,"updatedAt":"2019-10-10T14:10:25.399Z","tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"578b8c421532bc0061e8e654","rankIndex":0.000017003137697354,"hot":false,"autoPass":false,"originalUrl":"http://www.36nu.com/post/194.html","buildTime":1570716625.4176,"createdAt":"2016-07-17T13:46:42.165Z","user":{"community":{"weibo":{"selfDescription":"分享编程知识及经验","uid":"2096755251","blogAddress":"http://weibo.com/u/2096755251","username":"36nu","avatarLarge":"http://tva3.sinaimg.cn/crop.0.0.200.200.180/7cf9f233jw8f47vpt3lvzj205k05kdfm.jpg"}},"collectedEntriesCount":0,"company":"","followersCount":81,"followeesCount":0,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":66,"totalCommentsCount":33,"ngxCachedTime":1572571608,"ngxCached":true,"viewedEntriesCount":70,"jobTitle":"","subscribedTagsCount":1,"totalCollectionsCount":3210,"username":"muyuren","avatarLarge":"https://user-gold-cdn.xitu.io/2017/4/18/4c18a5d78c0012a943195242bdbb7bd1.jpg","objectId":"5736e4cc1ea4930060df481e"},"author":"","screenshot":"","original":false,"hotIndex":81.0403,"content":"ES6 中块级作用域及新变量声明新语法 let 详解","title":"ES6 中块级作用域及新变量声明新语法 let 详解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":933,"summaryInfo":"ES6之前js没有块级作用域，它使用var声明变量，以function来划分作用域，大括号“{}” 却限定不了var的作用域,用var声明的变量具有变量提升（declaration hoisting）的效果。ES6新增加了一个let，可以在{}， if， for里声明。用法同var，但作用域限定在...","isCollected":false},{"collectionCount":34,"commentsCount":0,"gfw":false,"objectId":"5a1eb8d46fb9a044fa19a08c","checkStatus":true,"buildTime":1571041670.7877,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571646,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"autoPass":true,"rankIndex":0.000034559135302321,"hot":false,"updatedAt":"2019-10-14T08:27:50.770Z","originalUrl":"https://github.com/cbbfcd/all-of-javascript/blob/master/深入到不能再深入之JS大法系列/scope.md","verifyCreatedAt":"2017-11-30T04:01:57.404Z","createdAt":"2017-11-30T04:01:57.404Z","user":{"community":{"github":{"username":"cbbfcd","avatarLarge":"https://avatars2.githubusercontent.com/u/20987775?v=4","uid":"20987775"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJDibiaJibk0LGpMOX2icBFljzDHRtLvNE2mBCaVVibvayqicK23sVJYYQpJR3NnystFjcpFQbBApCnu9eQ/132"}},"collectedEntriesCount":545,"company":"百度","followersCount":3038,"followeesCount":114,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":65,"totalCommentsCount":168,"ngxCachedTime":1572571644,"ngxCached":true,"viewedEntriesCount":3964,"jobTitle":"打野 or 中单","subscribedTagsCount":29,"totalCollectionsCount":1341,"username":"波比小金刚","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/19/16acf2a0fc0f9f55?w=750&h=560&f=png&s=521731","objectId":"593df367128fe1006aecb3cf"},"author":"","screenshot":null,"original":false,"hotIndex":72.5649,"content":"上一章节我们讲了VO。\n我们回顾一下之前的内容。\n进入执行上下文会创建VO对象、建立作用域链、确定this指向。执行上下文的数据(函数形参、变量声明、函数声明)是作为属性存储在VO中的。\n我们也知道变量对象在每次进入上下文时创建，并填入初始值，值的更新出现在代码执行阶段。\n这一…","title":"你还要我怎样的JS系列（4） -- 作用域链","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":756,"summaryInfo":"上一章节我们讲了VO。 进入执行上下文会创建VO对象、建立作用域链、确定this指向。执行上下文的数据(函数形参、变量声明、函数声明)是作为属性存储在VO中的。 我们也知道变量对象在每次进入上下文时创建，并填入初始值，值的更新出现在代码执行阶段。 这一章节我们继续深入了解执行上下文，我们来认识作用...","isCollected":false},{"collectionCount":31,"commentsCount":0,"gfw":false,"objectId":"59f1f9a051882513c430768b","checkStatus":true,"buildTime":1572512575.1446,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571791,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571746,"ngxCached":true,"title":"Babel","id":"58a3deef8d6d810057e64970"}],"autoPass":false,"rankIndex":0.000026636120424648,"hot":false,"updatedAt":"2019-10-31T09:02:55.126Z","originalUrl":"https://juejin.im/post/59f1f98df265da43294d49c3","verifyCreatedAt":"2017-10-27T02:42:55.204Z","createdAt":"2017-10-27T02:42:55.204Z","user":{"community":{"github":{"username":"jimczj","avatarLarge":"https://avatars2.githubusercontent.com/u/13499146?v=4","uid":"13499146"}},"collectedEntriesCount":34,"company":"","followersCount":17,"followeesCount":4,"role":"guest","postedPostsCount":2,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":7,"ngxCachedTime":1572571791,"viewedEntriesCount":543,"jobTitle":"前端","subscribedTagsCount":4,"totalCollectionsCount":106,"username":"阿集啊","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e083b74f348bf6ff","objectId":"585e24af1b69e6006cd0fac7"},"author":"","screenshot":"","original":true,"hotIndex":62.3165,"content":"当你声明一个函数的时候，你就创建了一个作用域气泡。前期的js只有函数可以创建作用域，现代js引入了块级作用域，每进入一次花括号{}就生成了一个块级作用域。 有些人会叫作用域链，但是我觉得这应该是个树形结构。树的顶层是全局作用域，在作用域内声明函数会创建函数作用域子节点，遇{}会…","title":"javascript作用域总结","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":624,"summaryInfo":"当你声明一个函数的时候，你就创建了一个作用域气泡。前期的js只有函数可以创建作用域，现代js引入了块级作用域，每进入一次花括号{}就生成了一个块级作用域。 有些人会叫作用域链，但是我觉得这应该是个树形结构。树的顶层是全局作用域，在作用域内声明函数会创建函数作用域子节点，遇{}会创建块级作用域子节点...","isCollected":false},{"collectionCount":31,"autoPass":false,"commentsCount":1,"gfw":false,"buildTime":1571796235.2774,"checkStatus":true,"objectId":"5ac307805188255c637b246d","entryView":"","subscribersCount":0,"ngxCachedTime":1572571791,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571702,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"},{"ngxCachedTime":1572571757,"ngxCached":true,"title":"求职","id":"584628d92f301e005c17064c"}],"isEvent":false,"rankIndex":0.000040241805599622,"hot":false,"updatedAt":"2019-10-23T02:03:55.259Z","originalUrl":"https://juejin.im/post/5ac307285188255c313aef90","verifyCreatedAt":"2018-04-03T07:32:37.586Z","createdAt":"2018-04-03T07:32:37.586Z","user":{"community":{"github":{"username":"prettyEcho","avatarLarge":"https://avatars1.githubusercontent.com/u/22290721?v=4","uid":"22290721"}},"collectedEntriesCount":29,"company":"去哪儿","followersCount":250,"followeesCount":1,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":5,"totalCommentsCount":28,"ngxCachedTime":1572571791,"viewedEntriesCount":236,"jobTitle":"前端工程师","subscribedTagsCount":40,"totalCollectionsCount":387,"username":"prettyEcho","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e087bc66990960f4","objectId":"599b891551882524316f3d5a"},"author":"","screenshot":"","original":true,"hotIndex":64.0181,"content":"我们常说，万物都有其存在的价值，这话的确不错，但是深思一下，是不是需要有个前提，万物都在某些领域或多或少的存在某些价值。 举个例子，汽车，绝对是个非常有价值的stuff，它给我们的日常出行，货物运输等带来了极大的便利；筷子，同样也是个非常有价值的stuff，它给我们吃饭带来了极…","title":"彻底搞懂JavaScript作用域","lastCommentTime":"2018-04-03T17:46:25.374Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":634,"summaryInfo":"我们常说，万物都有其存在的价值，这话的确不错，但是深思一下，是不是需要有个前提，万物都在某些领域或多或少的存在某些价值。 举个例子，汽车，绝对是个非常有价值的stuff，它给我们的日常出行，货物运输等带来了极大的便利；筷子，同样也是个非常有价值的stuff，它给我们吃饭带来了极大的方便。但是，汽车...","isCollected":false},{"collectionCount":30,"isEvent":false,"commentsCount":2,"gfw":false,"buildTime":1571069360.1243,"checkStatus":true,"objectId":"5ca6d3dc51882563476101c6","entryView":"","subscribersCount":0,"ngxCachedTime":1572571780,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571780,"ngxCached":false,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-14T16:09:20.107Z","rankIndex":0.00027411997419212,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ca69a8ee51d4521bb0a8096","verifyCreatedAt":"2019-04-07T06:26:30.496Z","createdAt":"2019-04-07T06:26:30.496Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjJwaevDnZ163wNSa4APdzrJYlrkCAiaxfxP3iaxR7gwKu7C6d2ucD7O48LmwYrSgnEKGrdCKNeibhQ/132"}},"collectedEntriesCount":343,"company":"深演智能","followersCount":68,"followeesCount":115,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":32,"ngxCachedTime":1572571780,"viewedEntriesCount":2282,"jobTitle":"web前端","subscribedTagsCount":24,"totalCollectionsCount":169,"username":"石小阳","avatarLarge":"https://user-gold-cdn.xitu.io/2019/9/24/16d62b5a3eeecaa4?w=580&h=582&f=jpeg&s=31489","objectId":"5b7a8eb751882542da337f5d"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/4/5/169ebb3bd60d62c7?w=2196&h=1240&f=png&s=686311","original":true,"hotIndex":84.7065,"content":"建议在阅读前了解作者的生平，背景，核心贡献及思想。相信会对理解本书以及后续的选书读书会有所帮助。 谈谈你对作用域的理解。 介绍一下 ReferenceError 异常类型 和 TypeError 异常类型。 谈谈你对作用域链的理解。 作用域收集并且维护由所有声明的标识符组成的查…","title":"【共读】你不知道的js 上 （1）作用域是什么？","lastCommentTime":"2019-04-07T15:51:00.680Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":1052,"summaryInfo":"建议在阅读前了解作者的生平，背景，核心贡献及思想。相信会对理解本书以及后续的选书读书会有所帮助。 作用域收集并且维护由所有声明的标识符组成的查询，有自己非常严格的规则确定当前执行代码对标识符的访问权限。 JavaScript 是一门编译语言，在执行代码前的编译中，编译器需要和作用域沟通是否存在某个...","isCollected":false},{"collectionCount":29,"commentsCount":1,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571796,"updatedAt":"2019-10-23T15:28:59.690Z","tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571683,"ngxCached":true,"title":"Node.js","id":"555e9a77e4b00c57d9955d64"},{"ngxCachedTime":1572571702,"ngxCached":true,"title":"Chrome","id":"555e9ae0e4b00c57d99562ee"}],"objectId":"59b9e7dd6fb9a00a4c26ecd5","rankIndex":0.000020669144989321,"hot":false,"autoPass":false,"originalUrl":"http://www.zcfy.cc/article/javascript-scope-and-closures-css-tricks-4107.html?t=new","buildTime":1571844539.7097,"createdAt":"2017-09-14T02:22:21.282Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/0viawNqRfUfBECkYNpibdQMlqaiaibToqyD9icHgP4Jm0BdoSXzCiaX3h80u4mQjO6SodYZvd6ibY2Tp65o1lh6U17ccA/132"}},"collectedEntriesCount":547,"company":"丹佛掘金","followersCount":3729,"followeesCount":32,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":293,"totalCommentsCount":352,"ngxCachedTime":1572571701,"ngxCached":true,"viewedEntriesCount":2589,"jobTitle":"编辑","subscribedTagsCount":15,"totalCollectionsCount":10400,"username":"Plum","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/28/64594283519482d5411728f04e359195","objectId":"5951d9005188250d7e730340"},"author":"","screenshot":null,"original":false,"hotIndex":51.8832,"content":"作用域和闭包在JavaScript里非常重要。但是在我最初学习JavaScript的时候，却很难理解。这篇文章会用一些例子帮你理解它们。","title":"JavaScript作用域和闭包","lastCommentTime":"2017-09-14T11:59:33.280Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":424,"summaryInfo":"作用域和闭包在JavaScript里非常重要。但是在我最初学习JavaScript的时候，却很难理解。这篇文章会用一些例子帮你理解它们。 JavaScript的作用域限定了你可以访问哪些变量。有两种作用域：全局作用域，局部作用域。 在所有函数声明或者大括号之外定义的变量，都在全局作用域里。 不过这...","isCollected":false},{"collectionCount":29,"isEvent":false,"commentsCount":5,"gfw":false,"buildTime":1572520326.8173,"checkStatus":true,"objectId":"5c207648e51d4535f05a2a0b","entryView":"","subscribersCount":0,"ngxCachedTime":1572571647,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T11:12:06.800Z","rankIndex":0.0001026590554484,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c2075f7e51d451611220c45","verifyCreatedAt":"2018-12-24T08:54:08.193Z","createdAt":"2018-12-24T08:54:08.193Z","user":{"community":{"github":{"username":"KaronAmI","avatarLarge":"https://avatars3.githubusercontent.com/u/4024796?v=4","uid":"4024796"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epa9z00epINz5avoXU7QfAnDFdZvXuvhxK5n2odLicUia3bSeb7Qw1cJb0VqibsVqrfQE6R06HYNzyNA/132"}},"collectedEntriesCount":14,"company":"保个密","followersCount":64,"followeesCount":24,"role":"guest","postedPostsCount":11,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":13,"ngxCachedTime":1572571639,"ngxCached":true,"viewedEntriesCount":1161,"jobTitle":"前端","subscribedTagsCount":42,"totalCollectionsCount":195,"username":"Karon_","avatarLarge":"https://user-gold-cdn.xitu.io/2018/12/19/167c6eb696013ccd?w=1122&h=1062&f=png&s=1222194","objectId":"5862313cac502e00673f76a4"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/12/24/167decdb71525191?w=800&h=320&f=jpeg&s=8247","original":true,"hotIndex":66.2434,"content":"在 JavaScript 中，函数实际上是一个对象。 这种没有函数名的函数被称为匿名函数表达式。 arguments 的长度由传入的参数决定，并不是定义函数时决定的。 如果按定义函数是决定个的，那么此时的 arguments.length 应该为 0 而不为 3。 argume…","title":"JS 总结之函数、作用域链","lastCommentTime":"2018-12-25T12:06:11.061Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":629,"summaryInfo":"JavaScript 中，函数实际上是一个对象。 这种没有函数名的函数被称为匿名函数表达式。 没有 return 或者只写 return，函数将返回 undefined： 没有传值的命名参数，会被自动设置为 undefined 函数可以通过内部属性 arguments 这个类数组的对象来访问参数，...","isCollected":false},{"collectionCount":28,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571801,"updatedAt":"2019-10-09T09:23:01.330Z","tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571698,"ngxCached":true,"title":"设计模式","id":"55a872f0e4b05881ac919dfc"},{"ngxCachedTime":1572571711,"ngxCached":true,"title":"编译器","id":"561d10fd60b28354a05435b2"}],"objectId":"59a8ccac6fb9a024903ac1a1","rankIndex":0.000016463168839045,"hot":false,"autoPass":false,"originalUrl":"http://www.zcfy.cc/article/understanding-scope-in-javascript-4086.html?t=new","buildTime":1570612981.3511,"createdAt":"2017-09-01T02:57:48.077Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/0viawNqRfUfBECkYNpibdQMlqaiaibToqyD9icHgP4Jm0BdoSXzCiaX3h80u4mQjO6SodYZvd6ibY2Tp65o1lh6U17ccA/132"}},"collectedEntriesCount":547,"company":"丹佛掘金","followersCount":3729,"followeesCount":32,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":293,"totalCommentsCount":352,"ngxCachedTime":1572571772,"ngxCached":true,"viewedEntriesCount":2589,"jobTitle":"编辑","subscribedTagsCount":15,"totalCollectionsCount":10400,"username":"Plum","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/28/64594283519482d5411728f04e359195","objectId":"5951d9005188250d7e730340"},"author":"","screenshot":null,"original":false,"hotIndex":41.2225,"content":"作用域是 JavaScript 中的一个重要而又模糊的概念。只有正确使用 JavaScript 作用域，才能使用优秀的设计模式，帮助你规避副作用。","title":"理解 JavaScript 中的作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":258,"summaryInfo":"作用域是 JavaScript 中的一个重要而又模糊的概念。只有正确使用 JavaScript 作用域，才能使用优秀的设计模式，帮助你规避副作用。本文中，我们将会详细分析 JavaScript 的不同类型的作用域，以及为了写出更好的代码，介绍它们是如何工作的。 作用域的简单定义是编译器需要变量和函...","isCollected":false},{"collectionCount":28,"isEvent":false,"commentsCount":9,"gfw":false,"buildTime":1572346419.2723,"checkStatus":true,"objectId":"5c76352b51882540c96704ec","entryView":"","subscribersCount":0,"ngxCachedTime":1572571776,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571681,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-29T10:53:39.255Z","rankIndex":0.00022703772895926,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c76310c5188254046012189","verifyCreatedAt":"2019-02-27T17:24:55.484Z","createdAt":"2019-02-27T17:24:55.484Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHxa7FGIoZyGib2pA72pwxQiaS2bqeibsKH5oSuA25PN8lbKmSSfyv6aNNdYkib46SwK7AhwoE3e8Nuw/132"}},"collectedEntriesCount":24,"company":"无","followersCount":174,"followeesCount":32,"role":"guest","postedPostsCount":11,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":29,"ngxCachedTime":1572571758,"ngxCached":true,"viewedEntriesCount":1317,"jobTitle":"前端搬砖农民工","subscribedTagsCount":10,"totalCollectionsCount":430,"username":"小李本人","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/21/16cb320da801fdac?w=640&h=640&f=png&s=453673","objectId":"59560a3f6fb9a06bc90398e1"},"author":"","screenshot":"","original":true,"hotIndex":101.598,"content":"在 ES5 中，我们通常会使用 var 来声明变量。在使用 var 声明变量的时候，通常会遇到变量声明提升的问题。这种机制会让很多初学者疑惑不解。其实当我们理解了一个变量通常包括声明和赋值两个部分，这个问题也就不难理解了。 事实上，无论在全局作用域或者函数作用域中，只要通过 v…","title":"重读《深入理解ES6》 —— 块级作用域","lastCommentTime":"2019-03-05T11:31:42.055Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":1287,"summaryInfo":"在 ES5 中，我们通常会使用 来声明变量。在使用 声明变量的时候，通常会遇到变量声明提升的问题。这种机制会让很多初学者疑惑不解。其实当我们理解了一个变量通常包括声明和赋值两个部分，这个问题也就不难理解了。 事实上，无论在全局作用域或者函数作用域中，只要通过 关键字声明的变量，不论在哪里声明，都会...","isCollected":false},{"collectionCount":26,"commentsCount":2,"gfw":false,"objectId":"59c199706fb9a00a4551730f","checkStatus":true,"buildTime":1572295304.0867,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571799,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571769,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571696,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"}],"autoPass":false,"rankIndex":0.000018298855222494,"hot":false,"updatedAt":"2019-10-28T20:41:44.070Z","originalUrl":"http://blog.csdn.net/hbzyin/article/details/78025777","verifyCreatedAt":"2017-09-20T02:28:36.700Z","createdAt":"2017-09-20T02:28:36.700Z","user":{"community":{"github":{"username":"hbzyin","avatarLarge":"https://avatars1.githubusercontent.com/u/19633356?v=4","uid":"19633356"}},"collectedEntriesCount":47,"company":"","followersCount":6,"followeesCount":21,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":6,"totalCommentsCount":14,"ngxCachedTime":1572571798,"ngxCached":true,"viewedEntriesCount":1288,"jobTitle":"前端开发","subscribedTagsCount":60,"totalCollectionsCount":227,"username":"hbzyin","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e084817f2fc9fb51","objectId":"58deffc9570c35005795dce0"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/9/20/0623fd262cef2ae5efa5f595c1851844","original":false,"hotIndex":45.8629,"content":"Javascript 作为一种动态语言，其语法特别是变量具有更多的灵活性。对于js的掌握程度不仅仅是实现功能，更需要理解背后的原理。","title":"也谈Javascript变量、作用域、变量提升","lastCommentTime":"2017-09-29T21:20:43.283Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":356,"summaryInfo":"1. 先看下一个经典的面试题，  结果输出不是10，是1；如果你还不是清楚背后的原理，那么请继续往下看； 2. JAVASCRIPT变量 2.1 先来看一个简单例子：局部变量传参 2.2 再来看一个例子：按引用传参  3. 作用域 SCOPING、执行环境CONTEXT  4. 变量提升 HOIS...","isCollected":false},{"collectionCount":26,"isEvent":false,"commentsCount":2,"gfw":false,"buildTime":1572423578.326,"checkStatus":true,"objectId":"5c3c899ae51d45207f54b4e9","entryView":"","subscribersCount":0,"ngxCachedTime":1572571340,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571320,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"updatedAt":"2019-10-30T08:19:38.309Z","rankIndex":0.00011644953504868,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c3c86525188252620582a06","verifyCreatedAt":"2019-01-15T03:14:44.619Z","createdAt":"2019-01-15T03:14:44.619Z","user":{"community":{"github":{"username":"Yangfan2016","avatarLarge":"https://avatars2.githubusercontent.com/u/17830872?v=4","uid":"17830872"}},"collectedEntriesCount":604,"company":"","followersCount":292,"followeesCount":29,"role":"guest","postedPostsCount":21,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":161,"ngxCachedTime":1572571330,"ngxCached":true,"viewedEntriesCount":4314,"jobTitle":"前端开发工程师","subscribedTagsCount":41,"totalCollectionsCount":898,"username":"Yangfan","avatarLarge":"https://user-gold-cdn.xitu.io/2018/10/28/166b9c6475b63772?w=400&h=400&f=jpeg&s=27636","objectId":"5bd570f86fb9a05d396f5d50"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/1/14/1684c915f159c56d?w=2394&h=1192&f=png&s=103449","original":true,"hotIndex":67.0064,"content":"ES2015 最大的特性之一就是有了一个全新的作用域。在这个章节里，我们将开始学习什么是作用域。我们将继续学习如何创建新的作用域类型，以及给我们代码带来的好处 作用域描述为一个变量，函数，标识符可以被访问的区域。JavaScript 传统上有两种作用域类型：全局作用域和函数作用…","title":"【译】深入理解 ES2015，第一趴：块作用域 let 和 const","lastCommentTime":"2019-01-30T14:26:58.788Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571264},"viewsCount":774,"summaryInfo":"ES2015 最大的特性之一就是有了一个全新的作用域。在这个章节里，我们将开始学习什么是作用域。我们将继续学习如何创建新的作用域类型，以及给我们代码带来的好处 作用域描述为一个变量，函数，标识符可以被访问的区域。JavaScript 传统上有两种作用域类型：全局作用域和函数作用域，你定义变量的位置...","isCollected":false},{"collectionCount":25,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571084,"updatedAt":"2019-10-31T10:24:47.725Z","tags":[{"ngxCachedTime":1572571048,"ngxCached":true,"title":"函数式编程","id":"584628f161ff4b006c3c147f"}],"objectId":"5950af566fb9a06bc3407be9","rankIndex":0.000011784487520803,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5950af315188250d892f47b6","buildTime":1572517487.7419,"createdAt":"2017-06-26T06:53:10.726Z","user":{"community":null,"collectedEntriesCount":28,"company":"","followersCount":314,"followeesCount":9,"role":"editor","postedPostsCount":10,"level":2,"isAuthor":true,"postedEntriesCount":8,"totalCommentsCount":12,"ngxCachedTime":1572571084,"viewedEntriesCount":28,"jobTitle":"","subscribedTagsCount":43,"totalCollectionsCount":208,"username":"疯狂的小蘑菇","avatarLarge":"","objectId":"593828e8b123db00644e9a89"},"author":"","screenshot":"","original":true,"hotIndex":34.773,"content":"动态作用域 在任何JS核心引擎中，都有一张全局表来存储全局变量 const _ = require('../util/understore') // 动态作用域，任何JS核心引擎中，有个全局查找表 const globals = {} const makeBind = resol…","title":"函数式编程3-作用域与闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571007},"viewsCount":179,"summaryInfo":"在任何JS核心引擎中，都有一张全局表来存储全局变量 我们无法精确控制函数中的this是什么，因为函数的this由调用者决定。所以，我们需要在调用函数前进行绑定。 闭包的用途非常广泛，任何函数内部能读取外部变量（包括参数，全局变量，私有变量），这就形成了一个闭包。","isCollected":false},{"collectionCount":25,"commentsCount":2,"gfw":false,"objectId":"5a733937f265da4e7b44785c","checkStatus":true,"buildTime":1571193703.504,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571798,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571769,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"autoPass":false,"rankIndex":0.000027602412373349,"hot":false,"updatedAt":"2019-10-16T02:41:43.486Z","originalUrl":"https://juejin.im/post/5a7339135188257a624c97aa","verifyCreatedAt":"2018-02-02T07:05:14.717Z","createdAt":"2018-02-02T07:05:14.717Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eozjcE7jdia0QJx2HQic0ROyUw79InhicZib15bY1a6ayiaBHibKdELGwmibpY6uUVlX7u6zyo0PbHjibfJQg/132"}},"collectedEntriesCount":14,"company":"陌陌","followersCount":64,"followeesCount":9,"role":"guest","postedPostsCount":5,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":7,"ngxCachedTime":1572571798,"viewedEntriesCount":1685,"jobTitle":"FE","subscribedTagsCount":42,"totalCollectionsCount":131,"username":"FE大锤","avatarLarge":"https://user-gold-cdn.xitu.io/2018/1/21/16118b79949c70ef?w=640&h=640&f=jpeg&s=39812","objectId":"57d8a4d1128fe10064a906da"},"author":"","screenshot":"","original":true,"hotIndex":50.2057,"content":"作用域是理解JS的关键所在，同样作用域关系到性能。其实主要还是标识符的解析会影响到性能。而我们主要是从特别细微的地方去分析作用域的性能问题。 当函数在执行的时候，每遇到一个变量都会去搜索执行环境的作用域链，查找同名的标识符，且搜索过程是从作用域链的头部开始。搜索的时候先以当前运…","title":"作用域对性能的影响","lastCommentTime":"2018-02-04T00:33:03.658Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":453,"summaryInfo":"作用域是理解JS的关键所在，同样作用域关系到性能。其实主要还是标识符的解析会影响到性能。而我们主要是从特别细微的地方去分析作用域的性能问题。可能有一些地方的优化在引擎不断优化的情况下已经成效渐微，但是我觉得还是有必要去从根源了解为什么我们要这么做， 可以从图中看到全局对象位于作用域的末端，活动对象...","isCollected":false},{"collectionCount":25,"commentsCount":4,"gfw":false,"objectId":"5a17e698f265da430b7aecf5","checkStatus":true,"buildTime":1572481370.9782,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571395,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571344,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"autoPass":false,"rankIndex":0.000020940921592484,"hot":false,"updatedAt":"2019-10-31T00:22:50.961Z","originalUrl":"http://www.jianshu.com/p/ad8d49511ea0","verifyCreatedAt":"2017-11-24T09:30:00.915Z","createdAt":"2017-11-24T09:30:00.915Z","user":{"community":{"weibo":{"selfDescription":"一个普普通通简简单单平平凡凡的神","uid":"2598069875","blogAddress":"http://weibo.com/u/2598069875","username":"刺客白告","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.0.996.996.180/9adb6673ly8fe01mxyxm0j20ro0roac8.jpg"}},"collectedEntriesCount":827,"company":"鹅厂","followersCount":5765,"followeesCount":24,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":544,"totalCommentsCount":210,"ngxCachedTime":1572571318,"ngxCached":true,"viewedEntriesCount":1215,"jobTitle":"神","subscribedTagsCount":9,"totalCollectionsCount":10611,"username":"一个普普通通简简单单平平凡凡的神","avatarLarge":"https://user-gold-cdn.xitu.io/2017/8/7/b13842a126fb8c8a22b94b9e2498a75a","objectId":"598413fef265da3e2a2f7fda"},"author":"","screenshot":null,"original":false,"hotIndex":46.1538,"content":"因为最早用的是 Java 和 C#，写 Python 的时候自然也把 Python 作用域的想的和原有的一致。Python 的作用域变量遵循在大部分情况下是一致的，但也有例外的情况。本文着通过遇到的一个作用域的小问题来说说 Python 的作用域","title":"Python 中的作用域准则","lastCommentTime":"2017-11-27T19:01:27.151Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571337},"viewsCount":324,"summaryInfo":"因为最早用的是 Java 和 C#，写 Python 的时候自然也把 Python 作用域的想的和原有的一致。 Python 的作用域变量遵循在大部分情况下是一致的，但也有例外的情况。 这点似乎挺符合我们认知的，那么，再深一点呢？既然这个变量是可以 Load 进来的就可以修改咯？ 然而并不是，我们...","isCollected":false},{"collectionCount":24,"commentsCount":1,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571396,"updatedAt":"2019-10-30T08:39:50.981Z","tags":[{"ngxCachedTime":1572571348,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"},{"ngxCachedTime":1572571344,"ngxCached":true,"title":"GitHub","id":"555e9abee4b00c57d9956152"}],"objectId":"56e111a9816dfa005269700a","rankIndex":0.0000063301879617188,"hot":false,"autoPass":false,"originalUrl":"https://github.com/rainyear/pytips/blob/master/Markdowns/2016-03-10-Scope-and-Closure.md","buildTime":1572424790.9999,"createdAt":"2016-03-10T06:18:17.995Z","user":{"community":{"github":{"username":"rainyear","avatarLarge":"https://avatars2.githubusercontent.com/u/3953966?v=4","uid":"3953966"}},"collectedEntriesCount":268,"company":"HUAWEI","followersCount":20059,"followeesCount":8,"role":"editor","postedPostsCount":13,"level":3,"isAuthor":true,"postedEntriesCount":148,"totalCommentsCount":195,"ngxCachedTime":1572571298,"ngxCached":true,"viewedEntriesCount":877,"jobTitle":"UX","subscribedTagsCount":17,"totalCollectionsCount":8255,"username":"雨神姥爷","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/18/16726c50eafe93ff?w=5472&h=3648&f=jpeg&s=3014883","objectId":"559603dce4b001ca17215568"},"author":"","screenshot":"https://lc-gold-cdn.xitu.io/fcfe158637925eac9136.png","original":true,"hotIndex":36.0653,"content":"每天一点 Python！","title":"Python 作用域与闭包 - PyTips 0x04","lastCommentTime":"2016-03-11T15:29:46.288Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571359},"viewsCount":219,"summaryInfo":"","isCollected":false},{"collectionCount":24,"userRankIndex":8.3570805159387,"buildTime":1572522056.9166,"commentsCount":5,"gfw":false,"objectId":"5d93e80b6fb9a04e2c015157","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571487,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571421,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"}],"updatedAt":"2019-10-31T11:40:56.898Z","rankIndex":0.004792785375959,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d93e6f06fb9a04e1b57df2d","verifyCreatedAt":"2019-10-02T07:45:25.466Z","createdAt":"2019-10-02T07:45:25.466Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLcooZPYcuSKgtGBg58HgAiaHFw8DTfjwJamY5AUef3TgOicPuFqNicR2WiaZicQLBOjxOnNRJLkK9XNibA/132"},"github":{"username":"qinggee","avatarLarge":"https://avatars0.githubusercontent.com/u/6011374?v=4","uid":"6011374"}},"collectedEntriesCount":78,"company":"「沉默王二」公号","followersCount":7213,"followeesCount":32,"role":"guest","postedPostsCount":82,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":379,"ngxCachedTime":1572571478,"ngxCached":true,"viewedEntriesCount":702,"jobTitle":"作者","subscribedTagsCount":23,"totalCollectionsCount":1592,"username":"沉默王二","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/23/167400e60e87f4c9?w=300&h=300&f=jpeg&s=9272","objectId":"5bd7fb9ce51d45219836421e"},"author":"","screenshot":"","original":true,"hotIndex":80.5826,"content":"明人不说暗话啊。这篇文章的灵感来源于《Effective Java》，这本书我买了有好长好长一段时间了，书页都已经泛黄，烙下了时间的痕迹，但我仍然还没有把这本书读完。说来惭愧啊。 为什么呢？总感觉这本书的中文翻译有点拙劣，读起来烦闷枯燥。明明感觉作者说得非常有道理，但就是提不起…","title":"为什么要将局部变量的作用域最小化？","lastCommentTime":"2019-10-19T15:17:34.192Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571460},"viewsCount":1013,"summaryInfo":"嗨，本篇文章来说说 Java 的一个小细节：为什么要将局部变量的作用域最小化？ 明人不说暗话啊。这篇文章的灵感来源于《Effective Java》，这本书我买了有好长好长一段时间了，书页都已经泛黄，烙下了时间的痕迹，但我仍然还没有把这本书读完。说来惭愧啊。 为什么呢？总感觉这本书的中文翻译有点拙...","isCollected":false},{"collectionCount":24,"commentsCount":0,"gfw":false,"entryView":"58f4293261ff4b0058fcc80b","subscribersCount":0,"ngxCachedTime":1572571650,"updatedAt":"2019-09-25T09:09:08.767Z","tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"objectId":"58f4292c8d6d810064887d4f","rankIndex":0.000014082479100168,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/aa0c0cbe18f0","buildTime":1569402548.7843,"createdAt":"2017-04-17T02:32:12.500Z","user":{"community":null,"collectedEntriesCount":361,"company":"某创业公司","followersCount":95,"followeesCount":43,"role":"editor","postedPostsCount":6,"level":2,"isAuthor":true,"postedEntriesCount":3,"totalCommentsCount":12,"ngxCachedTime":1572571582,"ngxCached":true,"viewedEntriesCount":7096,"jobTitle":"前端工程师","subscribedTagsCount":8,"totalCollectionsCount":585,"username":"前端一小卒","avatarLarge":"","objectId":"582bbe352e958a0069afe468"},"author":"","screenshot":"","original":true,"hotIndex":44.06,"content":"无论是哪种语言，作用域都是一个非常重要的概念，同样，作用域对 JavaScript 有许多影响。从功能的角度来看，作用域确定了哪些变量可以被函数访问以及确定了 this 的赋值；从性能的角度上看，作用域关系到标示符解析的性能。所以，我们应当正确地理解作用域的工作原理。","title":"JavaScript 作用域解析","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":386,"summaryInfo":"在ES6出来之前，JavaScript只有全局作用域和函数作用域，并没有块作用域，在这里，我们将关注点放在全局作用域和函数作用域上，并不讨论块级作用域。 在JavaScript代码中的任何地方都有定义的变量被称为全局变量，其也拥有全局作用域。一般来说，不在任何函数体内定义的变量以及未定义就直接赋值...","isCollected":false},{"collectionCount":24,"commentsCount":0,"gfw":false,"entryView":"58e5f2fc61ff4b006b393db8","subscribersCount":0,"ngxCachedTime":1572571801,"updatedAt":"2019-10-28T05:10:21.195Z","tags":[{"ngxCachedTime":1572571706,"ngxCached":true,"title":"HTML","id":"555eadbbe4b00c57d99623cc"},{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58e5ef28da2f60005febc965","rankIndex":0.000012777877958261,"hot":false,"autoPass":false,"originalUrl":"https://woozy.im/articles/the-scope-of-event-handler-on-html/","buildTime":1572239421.2116,"createdAt":"2017-04-06T07:32:56.205Z","user":{"community":{"github":{"username":"weizhenye","avatarLarge":"https://avatars3.githubusercontent.com/u/1879224?v=4","uid":"1879224"}},"collectedEntriesCount":0,"company":"","followersCount":0,"followeesCount":0,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":2,"ngxCachedTime":1572571801,"viewedEntriesCount":26,"jobTitle":"","subscribedTagsCount":3,"totalCollectionsCount":73,"username":"woozy","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082aee3d57c5d79","objectId":"575591fd207703006c04e02e"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/4/5/b3445b397d453e0607bf9aea72dfc99b","original":true,"hotIndex":42.949,"content":"HTML 中 on 开头的属性们，它的作用域是什么？form 元素怎么就神奇地拿到了 input 元素变量了？","title":"HTML 上事件句柄的作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":375,"summaryInfo":"前段时间翻看 HTML Reference，发现了没怎么见过的 output 标签，其中给出的例子让我比较吃惊： 在前辈们从小教育我们不要这么写的 写法中， 是一个全局变量，我们理所当然地认为能调用到，没什么问题。那 是不是全局变量呢？，并不是。如果是的话 HTML 也太危险了，随便一个 name...","isCollected":false},{"collectionCount":23,"commentsCount":0,"gfw":false,"objectId":"59c1e9dc5188256bce40ec10","checkStatus":true,"buildTime":1572407803.0262,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571796,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571734,"ngxCached":true,"title":"函数式编程","id":"584628f161ff4b006c3c147f"},{"ngxCachedTime":1572571790,"ngxCached":true,"title":"设计","id":"5597a035e4b08a686ce56bd9"}],"autoPass":false,"rankIndex":0.000021297838162643,"hot":false,"updatedAt":"2019-10-30T03:56:43.009Z","originalUrl":"https://github.com/Jocs/jocs.github.io/issues/5","verifyCreatedAt":"2017-09-20T05:51:36.956Z","createdAt":"2017-09-20T05:51:36.956Z","user":{"community":{"github":{"username":"Jocs","avatarLarge":"https://avatars0.githubusercontent.com/u/9712830?v=4","uid":"9712830"}},"collectedEntriesCount":111,"company":"石墨文档","followersCount":924,"followeesCount":41,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":14,"totalCommentsCount":13,"ngxCachedTime":1572571772,"ngxCached":true,"viewedEntriesCount":719,"jobTitle":"前端工程师","subscribedTagsCount":74,"totalCollectionsCount":450,"username":"Jocs","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0858f80fa80efa9","objectId":"5952ed14f265da6c45239d10"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/9/20/5fa1adf61e0196170d6008b472c8649c","original":false,"hotIndex":53.5003,"content":"什么是块级作用域？ES6之前有块级作用域吗？ES6中的块级作用域有哪些？","title":"ES6--块级作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":610,"summaryInfo":"当Brendan Eich在1995年设计JAVASCRIPT第一个版本的时候，考虑的不是很周到，以至于最初版本的JavaScript有很多不完善的地方，在Douglas Crockford的《JavaScript：The Good Parts》中就总结了很多JavaScript不好的地方，比如允...","isCollected":false},{"collectionCount":23,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571395,"updatedAt":"2019-10-30T08:39:00.828Z","tags":[{"ngxCachedTime":1572571344,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"objectId":"58364644da2f60006281dd14","rankIndex":0.000010090011099948,"hot":false,"autoPass":false,"originalUrl":"http://python.jobbole.com/81367/","buildTime":1572424740.8449,"createdAt":"2016-11-24T01:45:40.937Z","user":{"community":null,"collectedEntriesCount":13,"company":" 22世纪火星第三殖民地","followersCount":1812,"followeesCount":6,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":true,"postedEntriesCount":17,"totalCommentsCount":13,"ngxCachedTime":1572571392,"ngxCached":true,"viewedEntriesCount":514,"jobTitle":"高级打杂工程师","subscribedTagsCount":1,"totalCollectionsCount":1066,"username":"tonnie","avatarLarge":"https://leancloud-gold-cdn.xitu.io/2b6b450e1d919ee92640.png?imageView/1/w/100/h/100/q/80/format/png","objectId":"56edfe27816dfa005163043e"},"author":"","screenshot":"","original":false,"hotIndex":41.5417,"content":"Python 命名空间和作用域窥探","title":"Python 命名空间和作用域窥探","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571337},"viewsCount":354,"summaryInfo":"","isCollected":false},{"collectionCount":23,"isEvent":false,"commentsCount":8,"gfw":false,"buildTime":1571100109.8688,"checkStatus":true,"objectId":"5c850117e51d45193754c991","entryView":"","subscribersCount":0,"ngxCachedTime":1572571644,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T00:41:49.852Z","rankIndex":0.00021124223756446,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c8500d9e51d453b7666b376","verifyCreatedAt":"2019-03-11T07:37:18.104Z","createdAt":"2019-03-11T07:37:18.104Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoLbAPnRZAZb6GRrq7dT4nKgvWGDlfzReTPYVAicIib652eHCJCbHmtm5ic0DmfCvpICvPyAmxMmBjVA/132"}},"collectedEntriesCount":39,"company":"IFLYTEK","followersCount":14,"followeesCount":11,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":8,"ngxCachedTime":1572571644,"viewedEntriesCount":915,"jobTitle":"FE","subscribedTagsCount":23,"totalCollectionsCount":26,"username":"不思","avatarLarge":"https://leancloud-gold-cdn.xitu.io/vsSnERGsAY9EATfqH9n7K5D","objectId":"57e282eb0bd1d000570df976"},"author":"","screenshot":"","original":true,"hotIndex":79.8076,"content":"JS中的作用域、闭包、this机制和原型往往是最难理解的概念之一。笔者将通过几篇文章和大家谈谈自己的理解，希望对大家的学习有一些帮助。如果有什么理解偏差的地方，希望大家可以评论指出，相互学习。 有过一定编程经验的同学，一定不会对作用域感到陌生，在C/C++/Java中等语言中，…","title":"从JS的运行机制的角度谈谈作用域","lastCommentTime":"2019-03-14T14:27:38.794Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":959,"summaryInfo":"JS中的作用域、闭包、this机制和原型往往是最难理解的概念之一。笔者将通过几篇文章和大家谈谈自己的理解，希望对大家的学习有一些帮助。如果有什么理解偏差的地方，希望大家可以评论指出，相互学习。 有过一定编程经验的同学，一定不会对作用域感到陌生，在C/C++/Java中等语言中，作用域从来没有Jav...","isCollected":false},{"collectionCount":22,"userRankIndex":15.768792765847,"buildTime":1572495380.7482,"commentsCount":4,"gfw":false,"objectId":"5d3d98e86fb9a07eb74b8624","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571792,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571750,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-31T04:16:20.730Z","rankIndex":0.0006927291732636,"hot":false,"autoPass":true,"originalUrl":"https://juejin.im/post/5d32cc3e5188255ac45f6a1e","verifyCreatedAt":"2019-07-28T12:45:28.964Z","createdAt":"2019-07-28T12:45:28.964Z","user":{"community":{"github":{"username":"yeyan1996","avatarLarge":"https://avatars1.githubusercontent.com/u/39046570?v=4","uid":"39046570"}},"collectedEntriesCount":244,"company":"","followersCount":10573,"followeesCount":23,"role":"guest","postedPostsCount":20,"level":5,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":557,"ngxCachedTime":1572571760,"ngxCached":true,"viewedEntriesCount":16197,"jobTitle":"hello world 工程师","subscribedTagsCount":17,"totalCollectionsCount":8216,"username":"yeyan1996","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e094945d95739467","objectId":"5ba9f38ce51d450e8477bd7a"},"author":"","screenshot":"","original":true,"hotIndex":59.2765,"content":"","title":"三刷红宝书之变量和作用域","lastCommentTime":"2019-08-01T11:00:18.895Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":651,"summaryInfo":"正如标题所说，这是我第三次翻开红宝书也就是《 JavaScript 高级程序设计第三版》，不得不说，虽然书有一些年份，很多知识点也不适合现代的前端开发，但是对于想要掌握 JavaScript 基础的前端新手，亦或是像我一样想找回曾经遗忘在记忆角落的那些碎片知识，这本书依旧非常的适合，不愧被成为 \"...","isCollected":false},{"collectionCount":22,"commentsCount":2,"gfw":false,"entryView":"58fd65e1a0bb9f0065c4bd28","subscribersCount":1,"ngxCachedTime":1572571804,"updatedAt":"2019-10-20T03:01:29.183Z","tags":[{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"objectId":"58fb24ee61ff4b00665d0aab","rankIndex":0.000010961346917738,"hot":false,"autoPass":false,"originalUrl":"http://www.cnblogs.com/wangfupeng1988/p/3991995.html","buildTime":1571540489.2,"createdAt":"2017-04-22T09:39:58.051Z","user":{"community":{"github":{"username":"LanceJiang","avatarLarge":"https://avatars3.githubusercontent.com/u/26266976?v=4","uid":"26266976"}},"collectedEntriesCount":280,"company":"","followersCount":0,"followeesCount":18,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":13,"ngxCachedTime":1572571804,"viewedEntriesCount":2873,"jobTitle":"前端","subscribedTagsCount":37,"totalCollectionsCount":32,"username":"LanceJiang","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08481ad6328f453","objectId":"58df386c44d904006d0b739c"},"author":"","screenshot":"","original":false,"hotIndex":35.4234,"content":"既然都知道他们的关系了，\n   var name=\"global\";\n    function foo(){console.log(name);\n    }\n\n    function fooOuter1(){\n        var name=\"local\";\n        foo();\n    }\n    fooOuter1();// 输出 global 而不是 local，并且和闭包没有任何关系\n\n    var name=\"global\";\n    function foo(){\n        console.log(name);\n    }\n\n    function fooOuter1(){\n           name=\"local\";   // 全局 name 被修改\n        foo();\n    }\n    fooOuter1();// 输出 global 而不是 local，并且和闭包没有任何关系\n\n这个是不是也就迎刃而解了\n\n后期 在结合  闭包   列出一些  面试中会遇上的坑","title":"用图片形象的说出 作用域 和 上下文的区别，引荐高手的论述","lastCommentTime":"2018-06-05T17:56:23.647Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":225,"summaryInfo":"上文简单介绍了作用域，本文把作用域和上下文环境结合起来说一下，会理解的更深一些。 如上图，我们在上文中已经介绍了，除了全局作用域之外，每个函数都会创建自己的作用域，作用域在函数定义时就已经确定了。而不是在函数调用时确定。 下面我们将按照程序执行的顺序，一步一步把各个上下文环境加上。另外，对上下文环...","isCollected":false},{"collectionCount":22,"autoPass":false,"commentsCount":7,"gfw":false,"buildTime":1572512224.8146,"checkStatus":true,"objectId":"5ac38e0d51882555770caac0","entryView":"","subscribersCount":0,"ngxCachedTime":1572571796,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571677,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000032972317582351,"hot":false,"updatedAt":"2019-10-31T08:57:04.798Z","originalUrl":"https://juejin.im/post/5ac38c9ff265da238059d835","verifyCreatedAt":"2018-04-08T02:38:56.776Z","createdAt":"2018-04-08T02:38:56.776Z","user":{"community":{"github":{"username":"persilee","avatarLarge":"https://avatars2.githubusercontent.com/u/18243510?v=4","uid":"18243510"}},"collectedEntriesCount":26,"company":"🏢","followersCount":133,"followeesCount":2,"role":"guest","postedPostsCount":11,"level":3,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":78,"ngxCachedTime":1572571680,"ngxCached":true,"viewedEntriesCount":620,"jobTitle":"前端搬砖员","subscribedTagsCount":38,"totalCollectionsCount":1662,"username":"子木_lsy","avatarLarge":"https://user-gold-cdn.xitu.io/2018/4/3/1628bd7b85a74b85?w=960&h=960&f=jpeg&s=409965","objectId":"58b3d788570c350069747887"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/4/3/1628be247fdbd56f?w=1563&h=879&f=png&s=645623","original":true,"hotIndex":52.938,"content":"我们在面试时，总会碰到一些奇奇怪怪的关于 作用域 的面试题，其实弄清楚原理，万变不离其宗，大部分的面试题都可以得 '姐'。 JavaScript 的作用域只用两种，一个是全局的，一个是函数的，也称为 全局作用域 和 局部作用域 ；局部作用域 可以访问 全局作用域 。但是 全局作…","title":"浅谈JavaScript作用域","lastCommentTime":"2019-08-07T09:03:06.756Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":463,"summaryInfo":"今天我们来谈谈 的 作用域(JAVASCRIPT SCOPE) ，这是老生常谈的话题，这里我们会从 作用域 开始，会延伸到 预解析规则（预编译） 、 表达式\b 、 变量提升 、 函数提升 、 匿名函数表达式 、 具名函数表达式 等，彻底搞明白作用域这些事 🤓 详情，可查看我的博客 lishaoy....","isCollected":false},{"collectionCount":21,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572084521.9067,"checkStatus":true,"objectId":"5b912d82e51d450e810861a3","entryView":"","subscribersCount":0,"ngxCachedTime":1572571801,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571794,"ngxCached":true,"title":"Node.js","id":"555e9a77e4b00c57d9955d64"},{"ngxCachedTime":1572571799,"ngxCached":true,"title":"GitHub","id":"555e9abee4b00c57d9956152"},{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571745,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"isEvent":false,"rankIndex":0.000043794201067442,"hot":false,"updatedAt":"2019-10-26T10:08:41.889Z","originalUrl":"https://juejin.im/post/5b912afc6fb9a05d035bb716","verifyCreatedAt":"2018-09-07T02:46:12.688Z","createdAt":"2018-09-07T02:46:12.688Z","user":{"community":null,"collectedEntriesCount":3,"company":"","followersCount":43,"followeesCount":2,"role":"guest","postedPostsCount":8,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":80,"ngxCachedTime":1572571763,"ngxCached":true,"viewedEntriesCount":1955,"jobTitle":"前端工程师","subscribedTagsCount":42,"totalCollectionsCount":512,"username":"是方旭啊","avatarLarge":"https://user-gold-cdn.xitu.io/2017/8/11/7066db7563ce1c3142deb3575211ddcd","objectId":"593b8430128fe1006ad5024d"},"author":"","screenshot":"","original":true,"hotIndex":43.4293,"content":"因为有了块级作用域，然后我们才有继续往下聊的可能。 块级声明是用于声明在指定块的作用域之外无法访问的变量。 从块的开始到变量声明这段的区域被称为临时死区，ES6明确规定，如果区块中存在let和const命令，则这个区块对这些命令声明的变量从一开始就形成封闭作用域，只要在声明之前…","title":"ES6走走看看—由块级作用域引出的一场变革","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":431,"summaryInfo":"持续更新的github笔记，链接地址：Front-End-Basics ES6走走看看系列，特别鸣谢奇舞读书会~ 块级作用域又称词法作用域，存在于： 因为有了块级作用域，然后我们才有继续往下聊的可能。 块级声明是用于声明在指定块的作用域之外无法访问的变量。 3、 声明没有预解析，不存在变量提升，有...","isCollected":false},{"collectionCount":21,"autoPass":false,"commentsCount":4,"gfw":false,"buildTime":1572546863.7713,"checkStatus":true,"objectId":"5abba0466fb9a028c42e41f6","entryView":"","subscribersCount":0,"ngxCachedTime":1572571746,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571635,"ngxCached":true,"title":"函数式编程","id":"584628f161ff4b006c3c147f"},{"ngxCachedTime":1572571669,"ngxCached":true,"title":"面试","id":"55979fe6e4b08a686ce562fe"}],"isEvent":false,"rankIndex":0.00016437628117739,"hot":false,"updatedAt":"2019-10-31T18:34:23.753Z","originalUrl":"https://juejin.im/post/5abb99e9f265da2392366824","verifyCreatedAt":"2018-03-29T02:20:11.421Z","createdAt":"2018-03-29T02:20:11.421Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLFM4HMOulV8AnJ465UwJRHtM4LgPWYPkXacmkT2NebjGI1J9m47ZsAKJgon7AbAOWZMicwVBicbq5g/132"},"github":{"username":"leiting1998","avatarLarge":"https://avatars2.githubusercontent.com/u/18072105?v=4","uid":"18072105"}},"collectedEntriesCount":37,"company":"重庆邮电大学","followersCount":35,"followeesCount":12,"role":"guest","postedPostsCount":8,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":25,"ngxCachedTime":1572571746,"viewedEntriesCount":1176,"jobTitle":"大三啦","subscribedTagsCount":15,"totalCollectionsCount":415,"username":"leiting1998","avatarLarge":"https://user-gold-cdn.xitu.io/2018/10/14/1667266043c280e8?w=1066&h=1600&f=jpeg&s=303135","objectId":"5aa7b4c9518825558358ea06"},"author":"","screenshot":"","original":true,"hotIndex":271.1596,"content":"作用域，是指变量的生命周期（一个变量在哪些范围内保持一定值）。 全局变量，虽然好用，但是是非常可怕的，这是所有程序员公认的事实。 它能够自动执行 (function() { //... })() 里面包裹的内容，能够很好地消除全局变量的影响； 在 ES6 之前，是没有块级作用域…","title":"谈谈 JavaScript 的作用域","lastCommentTime":"2019-09-17T06:54:15.536Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":4906,"summaryInfo":"学了好久的 Javascript 惭愧仍然没有总结完全作用域，今天老夫就来总结一番： 作用域，是指变量的生命周期（一个变量在哪些范围内保持一定值）。 全局变量，虽然好用，但是是非常可怕的，这是所有程序员公认的事实。 其实，我们写的函数如果不经过封装，也会是全局变量，他的生命周期也就是全局作用域； ...","isCollected":false},{"collectionCount":20,"commentsCount":1,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571802,"updatedAt":"2019-09-17T11:30:23.145Z","tags":[{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571745,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"objectId":"59a27e756fb9a0248f4a876a","rankIndex":0.000016601441292926,"hot":false,"autoPass":false,"originalUrl":"https://zhuanlan.zhihu.com/p/28826556","buildTime":1568719823.1631,"createdAt":"2017-08-27T08:10:29.348Z","user":{"community":{"weibo":{"selfDescription":"icepy | 厨子/摩旅/编程 | front end developer","uid":"2455876310","blogAddress":"http://weibo.com/u/2455876310","username":"子曰五溪","avatarLarge":"https://tvax1.sinaimg.cn/crop.0.0.1002.1002.180/9261b2d6ly8fu7s604og1j20ru0ruq45.jpg?KID=imgbed,tva&Expires=1570889571&ssig=FGu0RHmmTE"},"github":{"username":"icepy","avatarLarge":"https://avatars0.githubusercontent.com/u/3321837?v=4","uid":"3321837"}},"collectedEntriesCount":5,"company":"","followersCount":6496,"followeesCount":2,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":230,"totalCommentsCount":174,"ngxCachedTime":1572571731,"ngxCached":true,"viewedEntriesCount":1093,"jobTitle":"厨子/摩旅/编程 | front end developer","subscribedTagsCount":69,"totalCollectionsCount":6123,"username":"icepy","avatarLarge":"https://lc-gold-cdn.xitu.io/u3UiRbBpJ6MtyCtZZRwZFwB","objectId":"56d08dcfdf0eea79dc943244"},"author":"","screenshot":null,"original":true,"hotIndex":40.1864,"content":"这一小节让我想到很多年前阅读到Nicholas的那本红宝书，所讲的作用域以及Var。也许至今，还有一些人搞不明白变量提升的含义。如果你有幸在大学里写过C语言，其实这就很好理解了。一个我们所说明的变量其实包含声明，赋值两个部分，是否有看过在头文件里声明…","title":"《深入理解ES6》阅读笔记 --- 块级作用域","lastCommentTime":"2017-08-30T08:35:51.984Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":382,"summaryInfo":"这一小节让我想到很多年前阅读到Nicholas的那本红宝书，所讲的作用域以及Var。也许至今，还有一些人搞不明白变量提升的含义。如果你有幸在大学里写过C语言，其实这就很好理解了。一个我们所说明的变量其实包含声明，赋值两个部分，是否有看过在头文件里声明，或者在C函数体内先声明，比如：  而JS中所提...","isCollected":false},{"collectionCount":20,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571492,"updatedAt":"2019-10-31T09:09:16.896Z","tags":[{"ngxCachedTime":1572571447,"ngxCached":true,"title":"Spring","id":"5847c9a5ac502e006ce63fa1"},{"ngxCachedTime":1572571472,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571439,"ngxCached":true,"title":"单元测试","id":"584628320ce463005784fd34"},{"ngxCachedTime":1572571374,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"}],"objectId":"59ae0f6b6fb9a02484494e61","rankIndex":0.000017002121278808,"hot":false,"autoPass":false,"originalUrl":"https://zhuanlan.zhihu.com/p/29065692","buildTime":1572512956.914,"createdAt":"2017-09-05T02:43:56.044Z","user":{"community":{"weibo":{"selfDescription":"极乐科技隶属于武汉聚蜗网络科技有限公司，成立于2014年，极乐核心团队由一群怀揣梦想、技术精湛、立志通过科技改变世界的有志青年组建而成。 公司自成立至今，专注于平台技术、移动互�","uid":"5264011747","blogAddress":"http://weibo.com/dreawer99","username":"极乐科技官微","avatarLarge":"http://tvax1.sinaimg.cn/crop.0.0.200.200.180/005KffVhly8fh38gcu5qwj305k05kwf4.jpg"}},"collectedEntriesCount":570,"company":"极乐科技","followersCount":7553,"followeesCount":43,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":307,"totalCommentsCount":245,"ngxCachedTime":1572571441,"ngxCached":true,"viewedEntriesCount":850,"jobTitle":"后端","subscribedTagsCount":10,"totalCollectionsCount":13799,"username":"极乐君","avatarLarge":"https://user-gold-cdn.xitu.io/2017/6/30/a8588c19f679d324940ee8993ce87e12","objectId":"574ea4c4d342d300434c4043"},"author":"","screenshot":null,"original":false,"hotIndex":44.0768,"content":"Spring Bean，就像JavaBeans中一样，有其使用的作用域。前面的文章中我们已经看到其中的两个:singleton 和prototype。这次来讲讲另外2个作用域(总共六个，参考本人Spring5文档翻译)。 本文将分为两部分。每个部分描述一个bean作用域。所以，…","title":"Spring中Bean的作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571457},"viewsCount":462,"summaryInfo":"本文将分为两部分。每个部分描述一个bean作用域。所以，在第一个，我们将探讨下request请求作用域。第二个描述的是session和全局session(此在Spring5文档中已经消失)的作用域。每一部分将由理论和实践组成。需要注意的是:这些概念仅在Web Spring应用程序上下文中有效。 每...","isCollected":false},{"collectionCount":19,"isEvent":false,"commentsCount":3,"gfw":false,"buildTime":1571074641.565,"checkStatus":true,"objectId":"5c1faa61e51d45317e24a0c7","entryView":"","subscribersCount":0,"ngxCachedTime":1572571649,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-14T17:37:21.546Z","rankIndex":0.000078481211063359,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c1faa3a6fb9a049ca375859","verifyCreatedAt":"2018-12-24T06:04:52.291Z","createdAt":"2018-12-24T06:04:52.291Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/ovxG1bicQhea1CxIrjc2zjNtVA0UHBa2cTiaQwpdOUBpRpjyQiaTTSKK4OuWrW6Sia6XbicibuGV6UPOvaW2QEQlEAmw/132"}},"collectedEntriesCount":20,"company":"Independent Developer","followersCount":43,"followeesCount":6,"role":"guest","postedPostsCount":8,"level":2,"isAuthor":false,"postedEntriesCount":3,"totalCommentsCount":18,"ngxCachedTime":1572571629,"ngxCached":true,"viewedEntriesCount":1880,"jobTitle":"程序员","subscribedTagsCount":7,"totalCollectionsCount":347,"username":"Real_Aaron","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/3/16c5643a068462b3?w=748&h=728&f=png&s=183469","objectId":"57e147e35bbb50005e7848f6"},"author":"","screenshot":"","original":true,"hotIndex":46.6402,"content":"这似乎令人惊讶，但在我看来，理解JavaScript语言最重要和最基本的概念是理解执行上下文。通过正确学习它，你将很好地学习更多高级主题，如提升，作用域链和闭包。考虑到这一点，究竟什么是“执行上下文”？为了更好地理解它，我们首先来看看我们如何编写软件。 编写软件的一种策略是将代…","title":"【译】学习JavaScript中提升、作用域、闭包的终极指南","lastCommentTime":"2018-12-25T08:48:44.925Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":482,"summaryInfo":"这似乎令人惊讶，但在我看来，理解JavaScript语言最重要和最基本的概念是理解执行上下文。通过正确学习它，你将很好地学习更多高级主题，如提升，作用域链和闭包。考虑到这一点，究竟什么是“执行上下文”？为了更好地理解它，我们首先来看看我们如何编写软件。 编写软件的一种策略是将代码分解为单独的部分。...","isCollected":false},{"collectionCount":19,"isEvent":false,"commentsCount":8,"gfw":false,"buildTime":1572493603.698,"checkStatus":true,"objectId":"5c0bebd75188257c3045dc68","entryView":"","subscribersCount":0,"ngxCachedTime":1572571340,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571228,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"updatedAt":"2019-10-31T03:46:43.681Z","rankIndex":0.00014027525445207,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c0be11b6fb9a049df23e388","verifyCreatedAt":"2018-12-09T15:48:25.168Z","createdAt":"2018-12-09T15:48:25.168Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/PNT8zQOiaT1bcIvehavPOda1r2k6eIb9CzL6EMjefQtuaxzlKD32iaBWRd1CfGZ6O1oqlj7ZNA2CUrtVnExY58uA/132"}},"collectedEntriesCount":3,"company":"","followersCount":2,"followeesCount":11,"role":"guest","postedPostsCount":6,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":8,"ngxCachedTime":1572571337,"ngxCached":true,"viewedEntriesCount":155,"jobTitle":"前端初学者","subscribedTagsCount":3,"totalCollectionsCount":30,"username":"被雨水过滤的空气不想说话","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e096d5bd8559d05e","objectId":"5c0498aee51d4533be171bd8"},"author":"","screenshot":"","original":true,"hotIndex":96.8736,"content":"完。","title":"全局作用域中，用const和let声明的变量去哪了？","lastCommentTime":"2018-12-12T09:49:59.157Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571245},"viewsCount":1384,"summaryInfo":"用CONST和LET声明的变量，不会存在WINDOW对象中","isCollected":false},{"collectionCount":19,"autoPass":false,"commentsCount":1,"gfw":false,"buildTime":1565410387.5306,"checkStatus":true,"objectId":"5a9bc08a518825557207d248","entryView":"","subscribersCount":0,"ngxCachedTime":1572571804,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571736,"ngxCached":true,"title":"算法","id":"55cd843d60b203b0519307a9"}],"isEvent":false,"rankIndex":0.000023672342053983,"hot":false,"updatedAt":"2019-08-10T04:13:07.514Z","originalUrl":"https://github.com/andy2046/blog/issues/2","verifyCreatedAt":"2018-03-06T05:16:31.971Z","createdAt":"2018-03-06T05:16:31.971Z","user":{"community":null,"collectedEntriesCount":69,"company":"GrabLa","followersCount":24,"followeesCount":94,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":4,"totalCommentsCount":18,"ngxCachedTime":1572571791,"ngxCached":true,"viewedEntriesCount":3143,"jobTitle":"Coder","subscribedTagsCount":105,"totalCollectionsCount":64,"username":"__andy__","avatarLarge":"https://leancloud-gold-cdn.xitu.io/92Js49SDVsypNGf9aNIxOwD","objectId":"5991d2b9f265da3e161aa655"},"author":"","screenshot":null,"original":false,"hotIndex":33.1941,"content":"","title":"JavaScript 作用域链 难不难？","lastCommentTime":"2018-03-07T08:19:54.737Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":253,"summaryInfo":"在变量对象中已经介绍过，执行上下文（变量，函数声明和函数形式参数）的数据被存储为变量对象的属性 此外，我们知道每次进入上下文时都会创建变量对象并填充初始值，并且它的更新发生在代码执行阶段 如果要简要说明，作用域链主要与内部函数有关 正如我们所知，ECMAScript允许创建内部函数，我们甚至可以从...","isCollected":false},{"collectionCount":19,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1569484098.0649,"checkStatus":true,"objectId":"5bd10422518825295071ce78","entryView":"","subscribersCount":0,"ngxCachedTime":1572571445,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571342,"ngxCached":true,"title":"前端框架","id":"55978433e4b0c4d3e6fddcb1"},{"ngxCachedTime":1572571356,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.000054393249294951,"hot":false,"updatedAt":"2019-09-26T07:48:18.048Z","originalUrl":"https://blog.hhking.cn/2018/10/24/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/","verifyCreatedAt":"2018-10-25T02:18:45.325Z","createdAt":"2018-10-25T02:18:45.325Z","user":{"community":{"github":{"username":"hhking","avatarLarge":"https://avatars2.githubusercontent.com/u/11470599?v=4","uid":"11470599"}},"collectedEntriesCount":57,"company":"广州","followersCount":1275,"followeesCount":13,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":16,"totalCommentsCount":11,"ngxCachedTime":1572571445,"viewedEntriesCount":1617,"jobTitle":"前端","subscribedTagsCount":9,"totalCollectionsCount":313,"username":"hhking","avatarLarge":"https://user-gold-cdn.xitu.io/2018/7/21/164bc0f4bcee4ac6?w=744&h=750&f=png&s=579110","objectId":"5712e9f6128fe1006cf35b3f"},"author":"","screenshot":"","original":false,"hotIndex":39.4362,"content":"理解 JavaScript 语言的最重要的基本概念是理解执行上下文。正确的学习执行上下文，可以让你更容易学习更高级的内容，比如变量提升（hoisting）、作用域链（scope chains）和闭包（closures）。","title":"[译]JavaScript 终极指南之执行上下文、变量提升、作用域和闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571399},"viewsCount":408,"summaryInfo":"视频：The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript 我认为理解 JavaScript 语言的最重要的基本概念是理解执行上下文（Execution Context），这点可...","isCollected":false},{"collectionCount":17,"isEvent":false,"commentsCount":4,"gfw":false,"buildTime":1572287860.1089,"checkStatus":true,"objectId":"5c556248e51d450164635c52","entryView":"","subscribersCount":0,"ngxCachedTime":1572571650,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-28T18:37:40.089Z","rankIndex":0.000088607128513125,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c555f6fe51d457fbf5da123","verifyCreatedAt":"2019-02-02T13:03:20.266Z","createdAt":"2019-02-02T13:03:20.266Z","user":{"community":{"github":{"username":"MagicalBridge","avatarLarge":"https://avatars3.githubusercontent.com/u/22520475?v=4","uid":"22520475"}},"collectedEntriesCount":109,"company":"公众号@ 指尖的宇宙","followersCount":70,"followeesCount":61,"role":"guest","postedPostsCount":20,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":26,"ngxCachedTime":1572571650,"viewedEntriesCount":1726,"jobTitle":"前端工程师","subscribedTagsCount":16,"totalCollectionsCount":140,"username":"MagicalLouis","avatarLarge":"https://user-gold-cdn.xitu.io/2019/6/14/16b54d7fadbdf8f5?w=220&h=220&f=jpeg&s=11425","objectId":"5ac5c2946fb9a028c06b0c9b"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/2/2/168ad88cc6e68a01?w=750&h=422&f=jpeg&s=16418","original":true,"hotIndex":45.7776,"content":"深入学习js系列是自己阶段性成长的见证，希望通过文章的形式更加严谨、客观地梳理js的相关知识，也希望能够帮助更多的前端开发的朋友解决问题，期待我们的共同进步。 当我们在开始学习任何一门语言的时候，都会接触到变量的概念，变量的出现其实是为了解决一个问题，为的是存储某些值，进而，存…","title":"深入学习js之——词法作用域和动态作用域#2","lastCommentTime":"2019-02-02T21:08:59.022Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571588},"viewsCount":492,"summaryInfo":"当我们在开始学习任何一门语言的时候，都会接触到变量的概念，变量的出现其实是为了解决一个问题，为的是存储某些值，进而，存储某些值的目的是为了在之后对这个值进行访问或者修改，正是这种存储和访问变量的能力将状态给了程序。我们的程序中到处都充斥着对于状态的判断，根据不同的状态执行不同的逻辑。 我们试想一下...","isCollected":false},{"collectionCount":17,"isEvent":false,"commentsCount":2,"gfw":false,"buildTime":1571100118.8447,"checkStatus":true,"objectId":"5c850c8bf265da2d9c38a532","entryView":"","subscribersCount":0,"ngxCachedTime":1572571650,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T00:41:58.828Z","rankIndex":0.00011371805297895,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c7230f8e51d450a97271fe8","verifyCreatedAt":"2019-03-11T02:39:54.279Z","createdAt":"2019-03-11T02:39:54.279Z","user":{"community":{"github":{"username":"coderliwenjie","avatarLarge":"https://avatars1.githubusercontent.com/u/16144720?v=4","uid":"16144720"}},"collectedEntriesCount":42,"company":"公众号","followersCount":151,"followeesCount":14,"role":"guest","postedPostsCount":21,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":31,"ngxCachedTime":1572571650,"viewedEntriesCount":2470,"jobTitle":"前端持续学","subscribedTagsCount":7,"totalCollectionsCount":639,"username":"william_li","avatarLarge":"https://user-gold-cdn.xitu.io/2017/9/10/b6f2ba4ff67d3b6af7842daa075b02dc","objectId":"5927f0e10ce46300575ec67b"},"author":"","screenshot":"","original":true,"hotIndex":43.024,"content":"分词/词法分析：将代码语句分解成有意义的代码块，又叫词法单元。 遇到var a，编译器会询问作用域是否已经有一个该名称的变量存在于同一个作用域的集合中。如果是，编译器会忽略该声明，继续进行编译；否则它会要求作用域在当前作用域的集合中声明一个新的变量a 接下来编译器会为引擎生成运…","title":"JS进击之路：作用域","lastCommentTime":"2019-03-12T16:01:00.870Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":464,"summaryInfo":"几乎所有的编程语言都有作用域的概念，那作用域到底指的是什么呢？作用域就是编程语言在定义变量时，变量如何存储、变量如何访问的一套规则，不同的编程语言的规则大同小异，接下来就来看看这套规则是怎么设定的 在传统编译语言中，在代码执行之前都会有一个编译过程： 和传统编译语言不太一样，js的编译和执行并不是...","isCollected":false},{"collectionCount":15,"commentsCount":4,"gfw":false,"objectId":"59c91c325188257e7a42a418","checkStatus":true,"buildTime":1572512591.6919,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571800,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571717,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571797,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571763,"ngxCached":true,"title":"React.js","id":"555e99ffe4b00c57d99556aa"},{"ngxCachedTime":1572571710,"ngxCached":true,"title":"Node.js","id":"555e9a77e4b00c57d9955d64"}],"autoPass":false,"rankIndex":0.000017962209260461,"hot":false,"updatedAt":"2019-10-31T09:03:11.673Z","originalUrl":"https://juejin.im/post/59c91b106fb9a00a4b0c5f0e","verifyCreatedAt":"2017-09-26T02:34:54.027Z","createdAt":"2017-09-26T02:34:54.027Z","user":{"community":{"weibo":{"selfDescription":"简单点","uid":"5139293363","blogAddress":"http://weibo.com/u/5139293363","username":"---Nealyang","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.25.1242.1242.180/005BNWYrly8fgr0rq7pxgj30yi0zxmzq.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgs75zBvdRIRs05Tlbb7JtNXcibutOKApmDYOzqLyxkaibJv1T9xq74oLiaiaEFp2P0aO2nShv2AicqJw/132"}},"collectedEntriesCount":373,"company":"全栈前端精选","followersCount":11338,"followeesCount":64,"role":"guest","postedPostsCount":47,"level":5,"isAuthor":false,"postedEntriesCount":10,"totalCommentsCount":651,"ngxCachedTime":1572571681,"ngxCached":true,"viewedEntriesCount":5157,"jobTitle":"公众号","subscribedTagsCount":42,"totalCollectionsCount":11630,"username":"Neal_yang","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/18/1606900c1392ea33?w=2122&h=1406&f=jpeg&s=486693","objectId":"59be059c5188256c6d77cf2e"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2017/9/25/4c8a1efd6cde9e2b29bca07ccf9b78b2","original":true,"hotIndex":44.713,"content":"在ECMAScript中，变量分为基本类型和引用类型两种。 基本类型就是存储简单的数据段。而引用类型指的是那些可能由多个值构成的对象。 在ECMAScript中，基本类型包括：Undefined、Null、Boolean、Number和String。 这些基本类型的对象都是按值…","title":"夯实JS系列--变量、作用域和内存问题","lastCommentTime":"2017-10-11T15:12:24.654Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571759},"viewsCount":501,"summaryInfo":"在ECMAScript中，变量分为基本类型和引用类型两种。基本类型就是存储简单的数据段。而引用类型指的是那些可能由多个值构成的对象。在ECMAScript中，基本类型包括：Undefined、Null、Boolean、Number和String。这些基本类型的对象都是按值访问的。所以js中我们可以...","isCollected":false},{"collectionCount":15,"userRankIndex":9.0210403336546,"buildTime":1572418245.2942,"commentsCount":5,"gfw":false,"objectId":"5cf40a2ef265da1b6c5f5f20","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571651,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T06:50:45.276Z","rankIndex":0.00023080212015315,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cf409d36fb9a07ecf720e9b","verifyCreatedAt":"2019-06-02T18:04:45.267Z","createdAt":"2019-06-02T18:04:45.267Z","user":{"community":{"weibo":{"selfDescription":"a web front-end developer","uid":"6366781668","blogAddress":"http://weibo.com/u/6366781668","username":"kris陈大文","avatarLarge":"http://tvax1.sinaimg.cn/crop.0.0.500.500.180/006WSmKUly8fp9yr68hzbj30dw0dwaa9.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erI5a95A6kOdNwUDibog0AYeHEkplcoIwhwyI9P8fI6XvZs7KF6vLXoWR3755EqYtlq8waibP7ibHbAQ/132"},"github":{"username":"KRISACHAN","avatarLarge":"https://avatars1.githubusercontent.com/u/18380538?v=4","uid":"18380538"}},"collectedEntriesCount":215,"company":"糖果厂","followersCount":1868,"followeesCount":88,"role":"editor","postedPostsCount":34,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":758,"ngxCachedTime":1572571540,"ngxCached":true,"viewedEntriesCount":6786,"jobTitle":"前端偏甜工程师（前国服第一杠精）","subscribedTagsCount":102,"totalCollectionsCount":2850,"username":"陈大鱼头","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/7/16a90949a3ea4ccf?w=959&h=959&f=jpeg&s=56736","objectId":"576b433bd342d30057aaa1e9"},"author":"","screenshot":"","original":true,"hotIndex":40.6198,"content":"词法环境（Lexical Environment） 就是 ECMAScript 的代码环境。 它由 环境记录（Environment Record） 和 外部引用 组成。 它会根据 ECMAScript 代码来动态创建。 环境记录绑定了其关联的词法环境。其一共分了5类，分别如下…","title":"前端进阶之你真的了解JS的作用域跟上下文吗？","lastCommentTime":"2019-06-03T16:43:50.434Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":407,"summaryInfo":"词法环境（LEXICAL ENVIRONMENT） 是一种规范类型，用于根据 ECMASCRIPT 代码的 词法嵌套结构定义标识符 与 特定变量 和 函数 的关联。词法环境（LEXICAL ENVIRONMENT） 由 环境记录（ENVIRONMENT RECORD） 和 外部词汇环境的可能为NU...","isCollected":false},{"collectionCount":15,"isEvent":false,"commentsCount":5,"gfw":false,"buildTime":1571467123.7836,"checkStatus":true,"objectId":"5cbe93546fb9a0324264fe75","entryView":"","subscribersCount":0,"ngxCachedTime":1572571651,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-19T06:38:43.766Z","rankIndex":0.00012647200087654,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cbe6cd06fb9a031fe3bc66f","verifyCreatedAt":"2019-04-23T07:45:12.279Z","createdAt":"2019-04-23T07:45:12.279Z","user":{"community":null,"collectedEntriesCount":87,"company":"大四待业","followersCount":19,"followeesCount":9,"role":"guest","postedPostsCount":11,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":17,"ngxCachedTime":1572571651,"viewedEntriesCount":4036,"jobTitle":"摸鱼工程师","subscribedTagsCount":11,"totalCollectionsCount":46,"username":"楼下的小黑","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/19/16ca7224cc9f9ee7?w=780&h=780&f=jpeg&s=185054","objectId":"5ca0c083e51d4561165067cf"},"author":"","screenshot":"","original":true,"hotIndex":35.6102,"content":"正常来说，在函数创建时获取函数的[[scope]]属性，通过该属性访问到所有父上下文的变量，但是由函数构造函数创建的的函数，其[[scope]]总是唯一的全局对象属性。 with结束，将{x: 30} 从作用域链中移出。 为什么会有二维作用域链呢，因为一个属性在对象中没有直接找…","title":"深入作用域","lastCommentTime":"2019-04-23T22:28:13.388Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":297,"summaryInfo":"作用域链(ES5.1规格视角) javascript采用的是词法作用域(静态作用域) 与之相对的是动态作用域，以下的例子可以很好地说明 静态作用域是与我们惯性思维冲突的，从上述例子可以看出，我们第一次看会习惯性往函数调用位置去找变量(动态作用域思维)，但是JAVASCRIPT使用的是静态作用域，也...","isCollected":false},{"collectionCount":14,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572195680.9593,"checkStatus":true,"objectId":"5b39b8f9e51d45588577133a","entryView":"","subscribersCount":0,"ngxCachedTime":1572571652,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"isEvent":false,"rankIndex":0.000025157840733446,"hot":false,"updatedAt":"2019-10-27T17:01:20.942Z","originalUrl":"https://www.cnblogs.com/HCJJ/p/9251632.html","verifyCreatedAt":"2018-07-03T02:14:58.498Z","createdAt":"2018-07-03T02:14:58.498Z","user":{"community":null,"collectedEntriesCount":34,"company":"","followersCount":542,"followeesCount":0,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":11,"totalCommentsCount":19,"ngxCachedTime":1572571652,"viewedEntriesCount":2065,"jobTitle":"前端开发人员","subscribedTagsCount":2,"totalCollectionsCount":680,"username":"gtshen","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/11/4df451dc6b173583b1802f1a317f2ab3","objectId":"596464995188250d9f1b0470"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/7/2/164597a8a6259673?w=268&h=299&f=png&s=147647","original":false,"hotIndex":31.2678,"content":"当一个变量保存了基本数据类型时，此时对于变量的操作（赋值，运算）就是操作这个基本数据的本身，就算是赋值操作，赋值时拷贝后的值与之前的值也是相互独立互不影响的。\n这非常好理解，但是如果一个变量保存的是一个引用类型的数据，例如对象，那么情况将会不同，这是因为变量保存的并不是对象本身…","title":"《JavaScript 高级程序设计》第四章：变量、作用域和内存问题","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":345,"summaryInfo":"当一个变量保存了基本数据类型时，此时对于变量的操作（赋值，运算）就是操作这个基本数据的本身，就算是赋值操作，赋值时拷贝后的值与之前的值也是相互独立互不影响的。 这非常好理解，但是如果一个变量保存的是一个引用类型的数据，例如对象，那么情况将会不同，这是因为变量保存的并不是对象本身，而是其在内存中的地...","isCollected":false},{"collectionCount":14,"commentsCount":0,"gfw":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1568851514,"updatedAt":"2019-09-16T03:27:49.910Z","tags":[{"ngxCachedTime":1568851407,"ngxCached":true,"title":"Swift","id":"559e7cc0e4b0796c19675383"}],"objectId":"56e3e1ddb014600029f11646","rankIndex":0.0000057201100055492,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/db91110ae33f","buildTime":1568604469.9281,"createdAt":"2016-03-12T09:31:09.640Z","user":{"community":{"weibo":{"selfDescription":"独立开发，分享独立开发知识与经验","uid":"3559103571","blogAddress":"http://weibo.com/kaiyuanxu","username":"KyXu23","avatarLarge":"http://tvax2.sinaimg.cn/crop.0.0.750.750.180/d4239c53ly8foyryq6bq5j20ku0kumxy.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/ickkuZyeF70hFgc1StFIibgHbxTCuag2hgnOm47d4mHy8ib0oUplQCibouENicRsUfdtbqeEsSAxahgqfxHcKAPxZvw/132"},"github":{"username":"OpenMarshall","avatarLarge":"https://avatars1.githubusercontent.com/u/10805688?v=4","uid":"10805688"}},"collectedEntriesCount":234,"company":"胖橘网络","followersCount":17598,"followeesCount":51,"role":"guest","postedPostsCount":36,"level":3,"isAuthor":true,"postedEntriesCount":111,"totalCommentsCount":261,"ngxCachedTime":1568851484,"ngxCached":true,"viewedEntriesCount":1119,"jobTitle":"合伙人","subscribedTagsCount":57,"totalCollectionsCount":5112,"username":"KyXu","avatarLarge":"https://user-gold-cdn.xitu.io/2018/10/5/16642038c1d45fb5?w=2849&h=2849&f=jpeg&s=1747011","objectId":"55f939de60b232fc2a9ab37f"},"author":"","screenshot":"","original":false,"hotIndex":30.8997,"content":"如题","title":"【iOS 开发】使用 protocol 与 extension 来限制函数作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"ios","id":"5562b405e4b00c57d9b94a41","name":"iOS","ngxCachedTime":1568851427},"viewsCount":320,"summaryInfo":"","isCollected":false},{"collectionCount":14,"commentsCount":0,"gfw":false,"objectId":"59c0740df265da065b66a4d3","checkStatus":true,"buildTime":1572417499.0671,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571804,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571778,"ngxCached":true,"title":"jQuery","id":"5599f577e4b08a686d142949"},{"ngxCachedTime":1572571772,"ngxCached":true,"title":"Backbone.js","id":"5615338d60b249278476865d"}],"autoPass":false,"rankIndex":0.000012907527926864,"hot":false,"updatedAt":"2019-10-30T06:38:19.049Z","originalUrl":"https://github.com/cbbfcd/all-of-javascript/blob/master/deep-into-javascript/scope.mdown","verifyCreatedAt":"2017-09-19T09:50:08.333Z","createdAt":"2017-09-19T09:50:08.333Z","user":{"community":{"github":{"username":"cbbfcd","avatarLarge":"https://avatars2.githubusercontent.com/u/20987775?v=4","uid":"20987775"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJDibiaJibk0LGpMOX2icBFljzDHRtLvNE2mBCaVVibvayqicK23sVJYYQpJR3NnystFjcpFQbBApCnu9eQ/132"}},"collectedEntriesCount":545,"company":"百度","followersCount":3038,"followeesCount":114,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":65,"totalCommentsCount":168,"ngxCachedTime":1572571709,"ngxCached":true,"viewedEntriesCount":3964,"jobTitle":"打野 or 中单","subscribedTagsCount":29,"totalCollectionsCount":1341,"username":"波比小金刚","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/19/16acf2a0fc0f9f55?w=750&h=560&f=png&s=521731","objectId":"593df367128fe1006aecb3cf"},"author":"","screenshot":null,"original":false,"hotIndex":32.4836,"content":"域，在中文里面表示的是一个范围。\n所以从字面理解作用域表示的应该是可以作用的范围，这样去理解很接近作用域的实际作用了。但是还是不太准确。\n作用域本质其实是一套规则，目的是为了确定在哪里以及怎么样去查找变量(标识符)。\n为了弄…","title":"你真的了解js中的作用域吗?","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":368,"summaryInfo":"1. 什么是作用域 域，在中文里面表示的是一个范围。 所以从字面理解作用域表示的应该是可以作用的范围，这样去理解很接近作用域的实际作用了。但是还是不太准确。 作用域本质其实是一套规则，目的是为了确定在哪里以及怎么样去查找变量(标识符)。 为了弄清楚在哪里找以及怎么找的规则，我们需要先了解几个概念。...","isCollected":false},{"collectionCount":13,"userRankIndex":26.25,"buildTime":1572453272.4121,"commentsCount":2,"gfw":false,"objectId":"5cc087b4e51d456e431ada78","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571798,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-30T16:34:32.394Z","rankIndex":0.000251669197677,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cb1308df265da039b085e69","verifyCreatedAt":"2019-04-25T02:40:46.677Z","createdAt":"2019-04-25T02:40:46.677Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjJwaevDnZ163wNSa4APdzrJYlrkCAiaxfxP3iaxR7gwKu7C6d2ucD7O48LmwYrSgnEKGrdCKNeibhQ/132"}},"collectedEntriesCount":343,"company":"深演智能","followersCount":68,"followeesCount":115,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":32,"ngxCachedTime":1572571798,"viewedEntriesCount":2282,"jobTitle":"web前端","subscribedTagsCount":24,"totalCollectionsCount":169,"username":"石小阳","avatarLarge":"https://user-gold-cdn.xitu.io/2019/9/24/16d62b5a3eeecaa4?w=580&h=582&f=jpeg&s=31489","objectId":"5b7a8eb751882542da337f5d"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/4/13/16a15e64f3166d98?w=3634&h=1630&f=png&s=791559","original":true,"hotIndex":50.4033,"content":"上一篇我们讲了本书第一章中的作用域，作用域链，简单介绍了引擎，编译器，作用域是怎么合作进行编译的。本篇我们将会介绍本书第一部分的 2 ~ 6 章。 说说你对闭包的理解。（面试） 闭包是一个绑定了执行环境的函数，闭包和普通函数的区别是携带了执行的环境。 闭包由环境和表达式两部分组…","title":"【共读】《你不知道的JavaScript上》作用域与闭包","lastCommentTime":"2019-04-25T18:57:00.930Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":699,"summaryInfo":"上一篇我们讲了本书第一章中的作用域，作用域链，简单介绍了引擎，编译器，作用域是怎么合作进行编译的。本篇我们将会介绍本书第一部分的 2 ~ 6 章。 闭包是一个绑定了执行环境的函数，闭包和普通函数的区别是携带了执行的环境。 闭包由环境和表达式两部分组成。 它被广泛应用，比如在回调函数中定时器，事件监...","isCollected":false},{"collectionCount":13,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1571676085.0125,"checkStatus":true,"objectId":"5c1702efe51d452f60289a76","entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-21T16:41:24.994Z","rankIndex":0.000039427425066386,"hot":false,"autoPass":true,"originalUrl":"http://damobing.com/?p=844","verifyCreatedAt":"2018-12-17T01:59:11.936Z","createdAt":"2018-12-17T01:59:11.936Z","user":{"community":{"weibo":{"selfDescription":"你的我的，同一个世界，幸福的走过，不流伤感的泪。","uid":"2031483187","blogAddress":"http://weibo.com/csnikey","username":"damobing","avatarLarge":"http://tva1.sinaimg.cn/crop.43.12.156.156.180/7915f933gw1euo127bdwmj205k05kjrc.jpg"},"wechat":{"avatarLarge":"http://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83epBxUKEajmrvAusTL84soO7icms6Fics8MygGkcjxZGTDd7tEDzNNo3q2icQ9piaicaydJ7G9ib7vWR2Ogg/0"},"github":{"username":"robinson90","avatarLarge":"https://avatars1.githubusercontent.com/u/13726138?v=4","uid":"13726138"}},"collectedEntriesCount":1,"company":"杭州@西南交通大学~~项目管理","followersCount":5853,"followeesCount":115,"role":"editor","postedPostsCount":125,"level":4,"isAuthor":false,"postedEntriesCount":21,"totalCommentsCount":433,"ngxCachedTime":1572571541,"ngxCached":true,"viewedEntriesCount":3733,"jobTitle":"前端工程师&&职能主管，达摩兵网站主笔，达摩空间订阅号作者","subscribedTagsCount":16,"totalCollectionsCount":7606,"username":"RobinsonZhang","avatarLarge":"https://user-gold-cdn.xitu.io/2017/12/20/1607181e1a7d55a2","objectId":"5a30ce0c51882561a20a768b"},"author":"","screenshot":null,"original":false,"hotIndex":25.1376,"content":"相信自从es6出来之后，你一定多少知道或者已经在项目中实践了部分的块级作用域，在函数或者类的内部命名变量已经在使用let了，但是你知道它真正的作用是什么吗？又是因为什么我们要用这个块级作用域，本文与你一起探讨块级作用域的场景以及所有细节问题。 特点1 ：js只有函数级作用域以及…","title":"js作用域通识篇(1)","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":223,"summaryInfo":"相信自从es6出来之后，你一定多少知道或者已经在项目中实践了部分的块级作用域，在函数或者类的内部命名变量已经在使用let了，但是你知道它真正的作用是什么吗？又是因为什么我们要用这个块级作用域，本文与你一起探讨块级作用域的场景以及所有细节问题。 特点1 ：js只有函数级作用域以及全局两种 特点2 ：...","isCollected":false},{"collectionCount":13,"userRankIndex":5.6788735872676,"buildTime":1571908227.6978,"commentsCount":10,"gfw":false,"objectId":"5ce3dac9e51d4510803ce322","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571647,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571529,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-24T09:10:27.682Z","rankIndex":0.00028373076891866,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ce376c751882533207bad67","verifyCreatedAt":"2019-05-21T11:06:20.941Z","createdAt":"2019-05-21T11:06:20.941Z","user":{"community":{"github":{"username":"zhangfaliang","avatarLarge":"https://avatars1.githubusercontent.com/u/17559536?v=4","uid":"17559536"}},"collectedEntriesCount":49,"company":"邦赢科技","followersCount":39,"followeesCount":4,"role":"guest","postedPostsCount":38,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":31,"ngxCachedTime":1572571647,"viewedEntriesCount":779,"jobTitle":"前端工程师","subscribedTagsCount":84,"totalCollectionsCount":367,"username":"zhangfaliang","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e087a11959fb50a9","objectId":"5994ee32f265da246b3c126b"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/5/23/16ae416851d3474f?w=636&h=714&f=jpeg&s=139953","original":true,"hotIndex":59.2964,"content":"全局执行环境是js最外层的执行环境，在不同的执行环境最外层的执行环境也不同，在web中window是全局执行环境。该执行环境一直存在，window的变量对象也一直存在的。 执行时创建变量对象并初始化它，把该函数中的arguments、定义的变量、定义的函数都会赋值到该变量对象上…","title":"史上最详细的作用域链和闭包解释","lastCommentTime":"2019-05-27T10:28:14.041Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":712,"summaryInfo":"有关作用域链和原型链对于学习js的小伙伴都应该不陌生，今天咱们就看看最详细的作用域链解释，目录中可能有些一些不常见的，但是这些对于理解作用域链和闭包很有左右，而且基本都可以理解js运行机制了😁  定义：在每一个函数被创建的时候都会为该函数添加一个[[Scopes]]属性，该属性包含了父级（可以理解...","isCollected":false},{"collectionCount":13,"commentsCount":0,"gfw":false,"objectId":"5a3c61a4f265da431440e15d","checkStatus":true,"buildTime":1572452667.3493,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571495,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571425,"ngxCached":true,"title":"Go","id":"555e9a80e4b00c57d9955de2"},{"ngxCachedTime":1572571472,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571494,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"}],"autoPass":false,"rankIndex":0.000013510337285584,"hot":false,"updatedAt":"2019-10-30T16:24:27.329Z","originalUrl":"https://juejin.im/post/5a3c61795188257d1718b20b","verifyCreatedAt":"2017-12-22T01:36:36.422Z","createdAt":"2017-12-22T01:36:36.422Z","user":{"community":{"weibo":{"selfDescription":"小发发的大男神","uid":"5215450881","blogAddress":"http://weibo.com/u/5215450881","username":"糍粑81198","avatarLarge":"http://tva4.sinaimg.cn/crop.0.0.512.512.180/005GXv1vjw8fbb5qcs5z3j30e80e80ti.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/x1ic831ycFibnb0d1sliaqneo991BEyfDAibXHtzQxCKXM5gLpfOTzKcR0W7YJiahb9tu09ibK0ph0SpYRMMMJxfYzvQ/132"},"github":{"username":"pc859107393","avatarLarge":"https://avatars2.githubusercontent.com/u/17871184?v=4","uid":"17871184"}},"collectedEntriesCount":96,"company":"德佑地产","followersCount":3068,"followeesCount":29,"role":"editor","postedPostsCount":32,"level":3,"isAuthor":true,"postedEntriesCount":7,"totalCommentsCount":75,"ngxCachedTime":1572571439,"ngxCached":true,"viewedEntriesCount":1198,"jobTitle":"安卓和java，正在学习go","subscribedTagsCount":32,"totalCollectionsCount":2168,"username":"pc859107393","avatarLarge":"https://user-gold-cdn.xitu.io/2018/12/24/167dd0062cb5ab41?w=1119&h=1098&f=png&s=445991","objectId":"57899e587db2a2005ce8985a"},"author":"","screenshot":"","original":true,"hotIndex":28.022,"content":"学习是一个趁热打铁的过程，高效的学习能提高大脑反应。所以我们接着了解go语言的数组、变量作用域、函数。 正如我们了解的其他语言一样，go一样存在了变量以及他的作用域。同样的，跟我们以往的了解一样，go的变量作用域有以下几点： 局部变量（在函数中申明的变量。作用域只在函数体内，参…","title":"golang常用手册：数组、变量作用域、函数","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571457},"viewsCount":294,"summaryInfo":"学习是一个趁热打铁的过程，高效的学习能提高大脑反应。所以我们接着了解go语言的数组、变量作用域、函数。 正如我们了解的其他语言一样，go一样存在了变量以及他的作用域。同样的，跟我们以往的了解一样，go的变量作用域有以下几点： 注意：go语言中局部变量和全局变量可以同名，但是函数中会悠闲考虑同名的局...","isCollected":false},{"collectionCount":13,"commentsCount":0,"gfw":false,"entryView":"58d382230ce4630057f054be","subscribersCount":0,"ngxCachedTime":1572571108,"updatedAt":"2019-10-30T03:44:15.480Z","tags":[{"ngxCachedTime":1572571106,"ngxCached":true,"title":"SCSS","id":"55b5ccb800b0bb80c458b8b5"}],"objectId":"58d3803d44d90400685c7cad","rankIndex":0.0000083465153192637,"hot":false,"autoPass":false,"originalUrl":"https://webdesign.tutsplus.com/articles/understanding-variable-scope-in-sass--cms-23498","buildTime":1572407055.497,"createdAt":"2017-03-23T07:58:53.258Z","user":{"community":{"weibo":{"uid":"2848117234","nickname":"点点不一样"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJSxRCAT7qQGAJ4vKAbKQ6TgtOrwv9XwIBM7tmJJM3XUWKM3oyiaNoibIxkm8r16LdIqhRA906CnUCQ/132"},"github":{"username":"chengjianhua","avatarLarge":"https://avatars0.githubusercontent.com/u/10795207?v=4","uid":"10795207"}},"collectedEntriesCount":754,"company":"英语流利说","followersCount":23,"followeesCount":42,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":5,"totalCommentsCount":5,"ngxCachedTime":1572571027,"ngxCached":true,"viewedEntriesCount":3605,"jobTitle":"前端","subscribedTagsCount":105,"totalCollectionsCount":58,"username":"ZAZ","avatarLarge":"https://user-gold-cdn.xitu.io/2016/11/29/49724f58d0bf6064cff894e67538b5ea","objectId":"5650183160b20fc971082050"},"author":"","screenshot":"","original":false,"hotIndex":28.774,"content":"详细讲述了 scss 中我们写的变量在多种情况下的作用范围, 包括局部变量, 变量覆写, 全局变量, 变量默认值等等知识.","title":"理解 SASS 中的变量作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571039},"viewsCount":304,"summaryInfo":"In this article, we’ll take a deeper look at variables and variable in Sass. The scope of a variable describes the context within which it’s defined ...","isCollected":false},{"collectionCount":12,"userRankIndex":5.6788735872676,"buildTime":1572549922.8133,"commentsCount":1,"gfw":false,"objectId":"5d51985ff265da039401fcf5","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571651,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T19:25:22.794Z","rankIndex":0.00051839599728795,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d4fd2ed6fb9a06b1777a6c3","verifyCreatedAt":"2019-08-12T17:24:54.981Z","createdAt":"2019-08-12T17:24:54.981Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJWB5fMx2bvmNia0019AGFErADbz4hh6KhUOZWaXeVYElgiaRzYkcg6QKj4JWR7nE8M0yh5jqVLcK1A/132"}},"collectedEntriesCount":16,"company":"香格里拉","followersCount":10,"followeesCount":15,"role":"guest","postedPostsCount":6,"level":1,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":2,"ngxCachedTime":1572571651,"viewedEntriesCount":872,"jobTitle":"前端","subscribedTagsCount":1,"totalCollectionsCount":48,"username":"长安_","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/11/16c7fc03db1eb0e9?w=1772&h=1804&f=png&s=835821","objectId":"598ed55b6fb9a03c3810aaf5"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/8/13/16c86ba5f6a21569?w=500&h=211&f=jpeg&s=3774","original":true,"hotIndex":38.0364,"content":"在JS中我们所说的执行上下文栈就是图中的stack，执行的时候首先是全局上下文入栈，然后各种函数上下文入栈，当函数全部执行完之后，最后全局执行上下文出栈，图中的heap就是用于存储对象这种复杂的数据类型。Queue就是异步执行队列，用来存储我们在代码中书写的异步操作的callb…","title":"JavaScript执行上下文、作用域和闭包","lastCommentTime":"2019-08-14T14:07:28.298Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":484,"summaryInfo":"在JS中我们所说的执行上下文栈就是图中的stack，执行的时候首先是全局上下文入栈，然后各种函数上下文入栈，当函数全部执行完之后，最后全局执行上下文出栈，图中的heap就是用于存储对象这种复杂的数据类型。Queue就是异步执行队列，用来存储我们在代码中书写的异步操作的callback，用于even...","isCollected":false},{"collectionCount":12,"commentsCount":0,"gfw":false,"objectId":"59c14d82f265da06670c7713","checkStatus":true,"buildTime":1572391472.0302,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571804,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571769,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571693,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"autoPass":false,"rankIndex":0.000013441612424515,"hot":false,"updatedAt":"2019-10-29T23:24:32.012Z","originalUrl":"https://juejin.im/post/59c14d24f265da0672283a75","verifyCreatedAt":"2017-09-20T05:40:14.009Z","createdAt":"2017-09-20T05:40:14.009Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/7H0jIVKP3icpibgWGSQFpCp4cjoaZ7Mq2CUHxrnMTGtsNhOjOMWxZkwqpYNkBIeoX6Re2FGabyETvbvPDtmRKFNw/132"}},"collectedEntriesCount":0,"company":"","followersCount":1,"followeesCount":5,"role":"guest","postedPostsCount":8,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571804,"viewedEntriesCount":49,"jobTitle":"","subscribedTagsCount":15,"totalCollectionsCount":26,"username":"常好樂","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0893def26e37c81","objectId":"59c14a2b6fb9a00a3d134f51"},"author":"","screenshot":"","original":true,"hotIndex":33.7535,"content":"在大多数计算机语言中，｛｝这样一对花括弧叫一个块级作用域，也就是一个执行环境。在一个执行环境中，执行环境内部的变量在作用域外部式无法被访问到的。执行环境内部倒是可以访问外部的变量。 但由于JS中没有块级作用域，只有函数作用域。所以类似于像for(；；){ }这样的作用域，实际上…","title":"关于JS中for循环时，作用域问题和this指针指向的总结 ","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":435,"summaryInfo":"在大多数计算机语言中，｛｝这样一对花括弧叫一个块级作用域，也就是一个执行环境。在一个执行环境中，执行环境内部的变量在作用域外部式无法被访问到的。执行环境内部倒是可以访问外部的变量。但由于JS中没有块级作用域，只有函数作用域。所以类似于像for(；；){ }这样的作用域，实际上它还是在它的上层作用域...","isCollected":false},{"collectionCount":12,"userRankIndex":6.7115403358611,"buildTime":1572556525.8284,"commentsCount":5,"gfw":false,"objectId":"5d897496e51d4561fb04c024","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571651,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T21:15:25.810Z","rankIndex":0.0017380682814152,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d88df236fb9a06af7127356","verifyCreatedAt":"2019-09-24T09:24:02.562Z","createdAt":"2019-09-24T09:24:02.562Z","user":{"community":{"weibo":{"selfDescription":"这个夏天我是黑色的！bling bling bling！","uid":"3530773421","blogAddress":"http://weibo.com/u/3530773421","username":"BlackStone_999","avatarLarge":"https://tvax2.sinaimg.cn/crop.0.0.751.751.180/d27353adly8g0rt0dn4b8j20kv0kv76j.jpg?KID=imgbed,tva&Expires=1568790861&ssig=xX2f7FPyK6"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/bnuOdb2u2U6sMXQCtx9Zl0HpeamrOG7nkgGdP54bftom8X0vDcmlTQYO2pxxMiaghcuZcPoNIVWaYedlnxe8QVQ/132"}},"collectedEntriesCount":28,"company":"打杂美少女战士","followersCount":61,"followeesCount":22,"role":"guest","postedPostsCount":12,"level":2,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":32,"ngxCachedTime":1572571563,"ngxCached":true,"viewedEntriesCount":438,"jobTitle":"前端开发","subscribedTagsCount":20,"totalCollectionsCount":333,"username":"蜗牛的北极星之旅","avatarLarge":"https://user-gold-cdn.xitu.io/2019/9/22/16d5750bb0b33181?w=750&h=750&f=png&s=1003761","objectId":"5d79a5535188256df56735f5"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/9/24/16d5f1a0ff3d3c31?w=480&h=293&f=png&s=118483","original":true,"hotIndex":40.2833,"content":"我们在for循环中直接定义了变量i，通常我们只想在循环体内部的上下文环境中使用i，但是事情并不是向着我们希望的发展，i会被隐式的绑定到外面的作用域（函数作用域或者是全局作用域）。 我们声明的变量b在代码使用时，仅仅在if声明的上下文使用，如果能将它限制在if的上下文将是一件很有…","title":"JavaScript-你可能不了解的块级作用域","lastCommentTime":"2019-09-25T10:49:13.182Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":449,"summaryInfo":"我们在for循环中直接定义了变量i，通常我们只想在循环体内部的上下文环境中使用i，但是事情并不是向着我们希望的发展，i会被隐式的绑定到外面的作用域（函数作用域或者是全局作用域）。 我们声明的变量b在代码使用时，仅仅在if声明的上下文使用，如果能将它现在if的上下文将是一件很有意义的事情，但是\"理想...","isCollected":false},{"collectionCount":12,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572346494.2555,"checkStatus":true,"objectId":"5c3bd02051882525602dea14","entryView":"","subscribersCount":0,"ngxCachedTime":1572571650,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-29T10:54:54.238Z","rankIndex":0.000072340045457455,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c3b3c126fb9a049d2364923","verifyCreatedAt":"2019-01-14T02:37:51.815Z","createdAt":"2019-01-14T02:37:51.815Z","user":{"community":null,"collectedEntriesCount":168,"company":"","followersCount":118,"followeesCount":0,"role":"guest","postedPostsCount":32,"level":2,"isAuthor":false,"postedEntriesCount":12,"totalCommentsCount":29,"ngxCachedTime":1572571645,"ngxCached":true,"viewedEntriesCount":10995,"jobTitle":"","subscribedTagsCount":325,"totalCollectionsCount":450,"username":"曉宸","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/4/169e6f4c68040f0a?w=640&h=512&f=jpeg&s=18559","objectId":"57f1dbf5bf22ec00645dfc31"},"author":"","screenshot":"","original":true,"hotIndex":41.6542,"content":"作用域机制是不能直接查看的, 我们首先模拟一个场景来尽可能的说明作用域这套规则, 然后通过代码片段和开发者工具进行验证. 想必大家都有玩过游戏的经验. 刚开始的时候, 也就是第一关, 难度比较简单. 到了第二关的时候, 就在第一关的基础上加些难缠的角色, 难度相应地加大了. 关…","title":"与作用域相关的闭包、内存泄漏、this","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":586,"summaryInfo":"作用域机制是不能直接查看的, 我们首先模拟一个场景来尽可能的说明作用域这套规则, 然后通过代码片段和开发者工具进行验证. 想必大家都有玩过游戏的经验. 刚开始的时候, 也就是第一关, 难度比较简单. 到了第二关的时候, 就在第一关的基础上加些难缠的角色, 难度相应地加大了. 关卡越是往后, 难缠的...","isCollected":false},{"collectionCount":11,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572531663.0793,"checkStatus":true,"objectId":"5af5a8d56fb9a07ac90d45c0","entryView":"","subscribersCount":0,"ngxCachedTime":1572571808,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571737,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571717,"ngxCached":true,"title":"C++","id":"559a721ee4b08a686d257366"},{"ngxCachedTime":1572571782,"ngxCached":true,"title":"Java","id":"559a7207e4b08a686d25703e"}],"isEvent":false,"rankIndex":0.000017030258827926,"hot":false,"updatedAt":"2019-10-31T14:21:03.063Z","originalUrl":"https://juejin.im/post/5af59d776fb9a07a9a10eac4","verifyCreatedAt":"2018-05-14T03:22:53.776Z","createdAt":"2018-05-14T03:22:53.776Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcaoMfmV4h7VkibLkwe2WGJ3jwEPGfrK3tx8xYNdlK8ibIsRyU7D4xbqoyQBzXFOhbialkMA18cWD4A/132"}},"collectedEntriesCount":29,"company":"Meican","followersCount":1,"followeesCount":29,"role":"guest","postedPostsCount":14,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571808,"viewedEntriesCount":993,"jobTitle":"前端工程师","subscribedTagsCount":33,"totalCollectionsCount":10,"username":"帅二仔","avatarLarge":"https://user-gold-cdn.xitu.io/2019/6/19/16b6dbc71b41494e?w=1122&h=990&f=png&s=592193","objectId":"5aefdd3ff265da0b967223d5"},"author":"","screenshot":"","original":true,"hotIndex":24.8128,"content":"执行环境定义了变量或函数有权访问的其他数据，决定了它们各自的行为。 每个执行环境都有一个与之关联的变量对象（variable object），环境中定义的所有变量和函数都保存在这个对象中。（虽然我们编写的代码无法访问这个对象，但解析器在处理数据时会在后台使用它。） 根据 ECM…","title":"JavaScript——执行环境及作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":275,"summaryInfo":"执行环境定义了变量或函数有权访问的其他数据，决定了它们各自的行为。 每个执行环境都有一个与之关联的变量对象（variable object），环境中定义的所有变量和函数都保存在这个对象中。（虽然我们编写的代码无法访问这个对象，但解析器在处理数据时会在后台使用它。） 根据 ECMAScript 实现...","isCollected":false},{"collectionCount":11,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572424539.2816,"checkStatus":true,"objectId":"5bbdac63e51d450e8b13fbea","entryView":"","subscribersCount":0,"ngxCachedTime":1572571398,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571371,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"},{"ngxCachedTime":1572571349,"ngxCached":true,"title":"编程语言","id":"5597a4b6e4b08a686ce5e860"}],"isEvent":false,"rankIndex":0.00002336938499852,"hot":false,"updatedAt":"2019-10-30T08:35:39.263Z","originalUrl":"https://www.jianshu.com/p/17a9d8584530","verifyCreatedAt":"2018-10-12T06:17:56.965Z","createdAt":"2018-10-12T06:17:56.965Z","user":{"community":null,"collectedEntriesCount":19,"company":"","followersCount":1464,"followeesCount":0,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":83,"totalCommentsCount":0,"ngxCachedTime":1572571398,"viewedEntriesCount":149,"jobTitle":"全栈工程师","subscribedTagsCount":3,"totalCollectionsCount":98,"username":"andy_","avatarLarge":"https://user-gold-cdn.xitu.io/2019/6/21/16b79c656da5a1f2?w=700&h=398&f=jpeg&s=59761","objectId":"591db343a22b9d005852571b"},"author":"","screenshot":null,"original":false,"hotIndex":20.6061,"content":"","title":"Python 变量作用域及闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571339},"viewsCount":187,"summaryInfo":"最近在刷leetcode题的时候，遇到一个求最长回文子串的题目，于是，我写了如下的代码： 哎呀，写了两个函数好麻烦啊，想到之前经常有人使用嵌套函数的方式来使代码变得简洁，所以我把上述代码改成了如下的形式： 是不是变得简单了好多，不过报错了！： 咦，看来这个函数嵌套不能随便用啊，那么这里正确使用函数...","isCollected":false},{"collectionCount":9,"userRankIndex":3.4190225827029,"buildTime":1571450553.2739,"commentsCount":0,"gfw":false,"objectId":"5d0f9737f265da1bca51e510","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571652,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-19T02:02:33.256Z","rankIndex":0.00024060502311491,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d0f12b4f265da1bba590e12","verifyCreatedAt":"2019-06-24T02:21:47.900Z","createdAt":"2019-06-24T02:21:47.900Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/sqL4mp2BEXAmEg43iaqU83aKfia1BsCCpSulr3zYxAEKejFH6sxWY5tNmYc28C8203wPcDpcXkpvYXmicShUQ3TSw/132"}},"collectedEntriesCount":7,"company":"工地 抬杠","followersCount":13,"followeesCount":21,"role":"guest","postedPostsCount":9,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":4,"ngxCachedTime":1572571652,"viewedEntriesCount":2322,"jobTitle":"搬砖界扛把子","subscribedTagsCount":14,"totalCollectionsCount":86,"username":"夏天Summer","avatarLarge":"https://user-gold-cdn.xitu.io/2019/2/27/1692e3b2271eafd8?w=1080&h=1078&f=jpeg&s=155453","objectId":"5bf18b93e51d450cec7b481c"},"author":"","screenshot":"","original":true,"hotIndex":32.3954,"content":"根据上篇关于 新手秒懂 - 高逼格解释变量提升 的文章中说明了，在生成执行上下文的创建阶段，生成变量对象后会建立作用域链。那我们接下里就看看作用域和作用域链到底是个啥子玩意。 作用域是一套规则, 用于确定在何处以及如何查找变量(标识符)。(说白了就是你写代码的那块旮旯里，来确定…","title":"新手秒懂 - 作用域 & 作用域链","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":461,"summaryInfo":"根据上篇关于 新手秒懂 - 高逼格解释变量提升 的文章中说明了，在生成执行上下文的创建阶段，生成变量对象后会建立作用域链。那我们接下里就看看作用域和作用域链到底是个啥子玩意。 作用域是一套规则, 用于确定在何处以及如何查找变量(标识符)。(说白了就是你写代码的那块旮旯里，来确定你之后怎么查找变量，...","isCollected":false},{"collectionCount":9,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572008829.37,"checkStatus":true,"objectId":"5c774234518825622d74cad0","entryView":"","subscribersCount":0,"ngxCachedTime":1572571341,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571320,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"updatedAt":"2019-10-25T13:07:09.353Z","rankIndex":0.000071128060456198,"hot":false,"autoPass":true,"originalUrl":"https://github.com/forthealllight/blog/issues/44","verifyCreatedAt":"2019-02-28T02:06:45.006Z","createdAt":"2019-02-28T02:06:45.006Z","user":{"community":{"github":{"username":"forthealllight","avatarLarge":"https://avatars2.githubusercontent.com/u/17233651?v=4","uid":"17233651"}},"collectedEntriesCount":31,"company":"","followersCount":5145,"followeesCount":9,"role":"editor","postedPostsCount":25,"level":4,"isAuthor":false,"postedEntriesCount":2,"totalCommentsCount":201,"ngxCachedTime":1572571339,"ngxCached":true,"viewedEntriesCount":3118,"jobTitle":"web工程师","subscribedTagsCount":2,"totalCollectionsCount":5400,"username":"yuxiaoliang","avatarLarge":"https://user-gold-cdn.xitu.io/2018/7/2/16458e15d8c59778?w=1200&h=1200&f=jpeg&s=192186","objectId":"5b398d15f265da59bf7a1167"},"author":"","screenshot":null,"original":false,"hotIndex":30.9968,"content":"最近在代码中不小心不规范的，在switch里面定义了块级变量，导致页面在某些浏览器中出错，本文讨论以下switch语句中的块级作用域。","title":"你真的懂switch吗？聊聊switch语句中的块级作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571264},"viewsCount":433,"summaryInfo":"","isCollected":false},{"collectionCount":9,"isEvent":false,"commentsCount":5,"gfw":false,"buildTime":1572268497.1887,"checkStatus":true,"objectId":"5ca1e0a1e51d4563773f427d","entryView":"","subscribersCount":0,"ngxCachedTime":1572571803,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571773,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-28T13:14:57.171Z","rankIndex":0.00010388971274917,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ca1d5176fb9a05e3f51ec93","verifyCreatedAt":"2019-04-01T09:58:31.046Z","createdAt":"2019-04-01T09:58:31.046Z","user":{"community":{"github":{"username":"EscapeMaster","avatarLarge":"https://avatars2.githubusercontent.com/u/20112304?v=4","uid":"20112304"}},"collectedEntriesCount":0,"company":"MT","followersCount":4,"followeesCount":16,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571803,"viewedEntriesCount":208,"jobTitle":"FE","subscribedTagsCount":14,"totalCollectionsCount":9,"username":"Escape_Master","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e09543e34b3d7854","objectId":"5bc5dd28f265da0a857aa550"},"author":"","screenshot":"","original":true,"hotIndex":37.2195,"content":"匿名函数在栈追踪中不会显示出有意义的函数名,使得调试很困难。 如果没有函数名,当函数需要引用自身时只能使用已经过期的 arguments.callee 引用,比如在递归中。另一个函数需要引用自身的例子,是在事件触发后事件监听器需要解绑自身。 匿名函数省略了对于代码可读性/可理解…","title":"作用域、作用域链及闭包(一)","lastCommentTime":"2019-04-02T17:25:13.463Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571725},"viewsCount":460,"summaryInfo":"这个代码片段经过提升后，实际上会被理解为以下形式:","isCollected":false},{"collectionCount":9,"isEvent":false,"commentsCount":1,"gfw":false,"buildTime":1571100536.0783,"checkStatus":true,"objectId":"5cab3197f265da036c57632f","entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571617,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T00:48:56.058Z","rankIndex":0.00007727560946682,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5abbb5ac5188255570061515","verifyCreatedAt":"2019-04-08T14:57:39.457Z","createdAt":"2019-04-08T14:57:39.457Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdTqwK5X5eVjFXIlpQF6I6pNZ1024Wk0DV2pMjsr9vEDNP2DA7CFM9jpF70WUs2500P4OC9SkVsg/132"}},"collectedEntriesCount":16,"company":"","followersCount":8,"followeesCount":30,"role":"guest","postedPostsCount":14,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571653,"viewedEntriesCount":832,"jobTitle":"前端工程师","subscribedTagsCount":41,"totalCollectionsCount":24,"username":"YaeSakura","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/13/16c8b7115dcdec45?w=2894&h=4093&f=jpeg&s=2269432","objectId":"5884195c8d6d81006ce25594"},"author":"","screenshot":"","original":true,"hotIndex":23.6924,"content":"所有的编程语言都可以存储，访问，修改变量。但是这些变量如何存储，程序如何找到并且能够使用它们？这些问题需要设计一套规则，这套规则就被称为我们所熟知的作用域。 在介绍作用域之前，先来了解JavaScript这门语言，通常百科的说法是JavaScript是一种高级的，解释执行的编程…","title":"学习JavaScript作用域","lastCommentTime":"2019-04-09T18:52:02.631Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571608},"viewsCount":271,"summaryInfo":"所有的编程语言都可以存储，访问，修改变量。但是这些变量如何存储，程序如何找到并且能够使用它们？这些问题需要设计一套规则，这套规则就被称为我们所熟知的。 在介绍作用域之前，先来了解这门语言，通常百科的说法是是一种高级的，解释执行的编程语言。但事实上它也是一门编译语言。也需要经历传统编译语言的步骤。、...","isCollected":false},{"collectionCount":8,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572401500.4386,"checkStatus":true,"objectId":"5c5e886de51d457fd321dfa5","entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T02:11:40.420Z","rankIndex":0.000041764848287724,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c5e8723e51d45015b4c945a","verifyCreatedAt":"2019-02-09T10:24:23.508Z","createdAt":"2019-02-09T10:24:23.508Z","user":{"community":{"github":{"username":"TTtuntuntutu","avatarLarge":"https://avatars1.githubusercontent.com/u/20518103?v=4","uid":"20518103"}},"collectedEntriesCount":59,"company":"涂鸦智能","followersCount":24,"followeesCount":40,"role":"guest","postedPostsCount":16,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":10,"ngxCachedTime":1572571645,"ngxCached":true,"viewedEntriesCount":1741,"jobTitle":"前端开发","subscribedTagsCount":26,"totalCollectionsCount":96,"username":"TTtuntuntutu","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e085bc082bf84f04","objectId":"595856405188250d81247410"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/3/1/1693700653dae0a4?w=700&h=345&f=png&s=13735","original":true,"hotIndex":20.9082,"content":"考虑一个函数传统的方式是 ，声明一个函数，在它内部添加代码。标题这里做了一个角度的切换：在编写代码外围包装一个函数说明，去“隐藏”这段代码。 关注这里的变量b和doSomethingElse函数，很可能是doSomething函数的\"私有细节\"，允许外围的作用可访问不仅没必要而…","title":"作用域-函数包围代码","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":250,"summaryInfo":"考虑一个函数传统的方式是 ，声明一个函数，在它内部添加代码。标题这里做了一个角度的切换：在编写代码外围包装一个函数说明，去“隐藏”这段代码。 关注这里的变量和函数，很可能是函数的\"私有细节\"，允许外围的作用可访问不仅没必要而且可能是危险的。更加恰当的设计是将所有私有细节隐藏在内部： 驱使做这样的代...","isCollected":false},{"collectionCount":8,"userRankIndex":3.7095112913515,"buildTime":1572524697.9406,"commentsCount":0,"gfw":false,"objectId":"5d6b7346f265da03ad14688f","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571652,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T12:24:57.887Z","rankIndex":0.0006363008176591,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d68e549f265da03b76b36b6","verifyCreatedAt":"2019-09-01T15:18:19.841Z","createdAt":"2019-09-01T15:18:19.841Z","user":{"community":{"github":{"username":"Aaron-Gym","avatarLarge":"https://avatars1.githubusercontent.com/u/52185581?v=4","uid":"52185581"}},"collectedEntriesCount":5,"company":"","followersCount":6,"followeesCount":5,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571652,"viewedEntriesCount":922,"jobTitle":"代码搬运工，前端开发","subscribedTagsCount":17,"totalCollectionsCount":42,"username":"八块腹肌的二货","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/1/16c4c8415ffc9881?w=690&h=1227&f=jpeg&s=43756","objectId":"5d37b7d3f265da1b7f29c035"},"author":"","screenshot":"","original":true,"hotIndex":30.9922,"content":"作用域是JS中非常重要的一个知识点，这个特性与我们的日常开发息息相关。很多小伙伴知道这个知识点，却没有理解，没有掌握。希望大家通过这篇文章，对作用域的理解更上一层楼。 作用域规定了JS如何存储变量，以及如何在找到这些变量，即规定了变量的作用范围。 JS中只有全局作用域和函数作用…","title":"JS 你必须要理解的作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":440,"summaryInfo":"作用域是JS中非常重要的一个知识点，这个特性与我们的日常开发息息相关。很多小伙伴知道这个知识点，却没有理解，没有掌握。希望大家通过这篇文章，对作用域的理解更上一层楼。 作用域规定了JS如何存储变量，以及如何在找到这些变量，即规定了变量的作用范围。 JS中只有全局作用域和函数作用域，ES6之后新增了...","isCollected":false},{"collectionCount":8,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572499193.7524,"checkStatus":true,"objectId":"5cb197d5e51d456e4f4d29d7","entryView":"","subscribersCount":0,"ngxCachedTime":1572571654,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T05:19:53.734Z","rankIndex":0.000055988902545439,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cb19729f265da0393785947","verifyCreatedAt":"2019-04-13T11:54:41.829Z","createdAt":"2019-04-13T11:54:41.829Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAL7ysSehXWW3SP3WERLg7ngGX1eVm3Eotg4I1c6alpD83FYtRJudeEB0T1cTHQKrVUUK3xd2aoQ/132"},"github":{"username":"gentlecoder","avatarLarge":"https://avatars0.githubusercontent.com/u/10756136?v=4","uid":"10756136"}},"collectedEntriesCount":298,"company":"m","followersCount":11,"followeesCount":76,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":5,"ngxCachedTime":1572571583,"ngxCached":true,"viewedEntriesCount":1742,"jobTitle":"一无所知工程师","subscribedTagsCount":59,"totalCollectionsCount":21,"username":"gentlecoder","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e08eeed350549e0c","objectId":"5ad543f26fb9a028b92da0ae"},"author":"","screenshot":"","original":true,"hotIndex":18.7266,"content":"首先我们得理解setTimeout中函数的执行时机，这里就要讲到一个运行时的概念。 函数调用形成了一个栈帧。 当调用 bar 时，创建了第一个帧 ，帧中包含了 bar 的参数和局部变量。当 bar 调用 foo时，第二个帧就被创建，并被压到第一个帧之上，帧中包含了 foo 的参…","title":"由一道题引申出的事件循环、let-var用法、iife、块级作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":200,"summaryInfo":"为什么这里会出现10次10，而不是我们预期的0-9呢？我们要如何修改达到预期效果呢？ 首先我们得理解中函数的执行时机，这里就要讲到一个运行时的概念。 当调用 时，创建了第一个帧 ，帧中包含了 的参数和局部变量。当 调用 时，第二个帧就被创建，并被压到第一个帧之上，帧中包含了 的参数和局部变量。当 ...","isCollected":false},{"collectionCount":8,"commentsCount":0,"gfw":false,"objectId":"5a1e54ae518825293b50122d","checkStatus":true,"buildTime":1570849173.153,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571398,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571371,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"autoPass":false,"rankIndex":0.0000082829057477233,"hot":false,"updatedAt":"2019-10-12T02:59:32.839Z","originalUrl":"http://www.cnblogs.com/linxiyue/p/7911916.html","verifyCreatedAt":"2017-11-29T06:33:18.690Z","createdAt":"2017-11-29T06:33:18.690Z","user":{"community":null,"collectedEntriesCount":1610,"company":"","followersCount":5207,"followeesCount":43,"role":"guest","postedPostsCount":8,"level":0,"isAuthor":false,"postedEntriesCount":467,"totalCommentsCount":210,"ngxCachedTime":1572571318,"ngxCached":true,"viewedEntriesCount":2474,"jobTitle":"","subscribedTagsCount":5,"totalCollectionsCount":12501,"username":"红烧不是清蒸","avatarLarge":"https://user-gold-cdn.xitu.io/2017/8/10/4fe5ee3a310941e5020ade1a62efa5c1","objectId":"59845265f265da3e13575bb2"},"author":"","screenshot":null,"original":false,"hotIndex":17.341,"content":"命名空间是从名称到对象的映射，Python中主要是通过字典实现的，主要有以下几个命名空间： 内置命名空间，包含一些内置函数和内置异常的名称，在Python解释器启动时创建，一直保存到解释器退出。","title":"Python函数的作用域规则和闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571339},"viewsCount":169,"summaryInfo":"命名空间是从名称到对象的映射，Python中主要是通过字典实现的，主要有以下几个命名空间： python解析变量名的时候， 首先搜索局部命名空间。如果没有找到匹配的名称，它就会搜索全局命名空间。如果解释器在全局命名空间中也找不到匹配值，最终会检查内置命名空间。如果仍然找不到，就会引发NameErr...","isCollected":false},{"collectionCount":7,"commentsCount":0,"gfw":false,"entryView":"590fdfeea0bb9f00589eb248","subscribersCount":0,"ngxCachedTime":1572571814,"updatedAt":"2019-10-11T02:43:45.886Z","tags":[{"ngxCachedTime":1572571813,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"},{"ngxCachedTime":1572571722,"ngxCached":true,"title":"Angular.js","id":"555e99f6e4b00c57d9955642"}],"objectId":"590fdfe061ff4b006253dfec","rankIndex":0.0000051695574263372,"hot":false,"autoPass":false,"originalUrl":"http://www.jianshu.com/p/3398f1d19320","buildTime":1570761825.9031,"createdAt":"2017-05-08T03:02:56.205Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJD00683YHNmk4IQUb749FnHHMeUTMXM1LZRX5tnzMWwdTfiblexYdHCUWQ32a10uGpgggXFeJW68w/132"}},"collectedEntriesCount":67,"company":"","followersCount":0,"followeesCount":12,"role":"guest","postedPostsCount":0,"level":0,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":0,"ngxCachedTime":1572571814,"viewedEntriesCount":527,"jobTitle":"","subscribedTagsCount":23,"totalCollectionsCount":7,"username":"WW正在掘金","avatarLarge":"","objectId":"58fbf37e570c350058dad1d2"},"author":"","screenshot":"","original":false,"hotIndex":16.0303,"content":"对于 $watch 来说 有两种不同方式的监听，原因是由于不同数据类型的存在（基本类型：数字，字符串；和 引用数据类型）对于不同的数据类型监听的方式和方法不同。\n对于基本数据类型，若使用一次赋值操作，这个基本数据类型变量就会 “真正” 被复制一次，然而对于引用类型，在进行赋值的时，仅仅是将赋值的变量指向这个引用类型。","title":"angularJS 中的 $watch 方法监听作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":163,"summaryInfo":"对于$watch来说 有两种不同方式的监听，原因是由于不同数据类型的存在（基本类型：数字，字符串；和 引用数据类型）对于不同的数据类型监听的方式和方法不同。 对于基本数据类型，若使用一次赋值操作，这个基本数据类型变量就会“真正”被复制一次，然而对于引用类型，在进行赋值的时，仅仅是将赋值的变量指向这...","isCollected":false},{"collectionCount":7,"userRankIndex":4.3583953106793,"buildTime":1572247085.5467,"commentsCount":2,"gfw":false,"objectId":"5d453bf0e51d456210163b41","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-28T07:18:05.530Z","rankIndex":0.0002980173817876,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d453bde6fb9a06ade10f3a0","verifyCreatedAt":"2019-08-04T06:42:14.812Z","createdAt":"2019-08-04T06:42:14.812Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2eUMOOiaYjP8ngcMgtLRsm7hicmywTp7KGliczTmEviaS2y38CzJPhbq5hVWvFCB4wicLvHcAUibC31iaw/132"}},"collectedEntriesCount":226,"company":"","followersCount":300,"followeesCount":19,"role":"guest","postedPostsCount":226,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":55,"ngxCachedTime":1572571581,"ngxCached":true,"viewedEntriesCount":286,"jobTitle":"","subscribedTagsCount":40,"totalCollectionsCount":783,"username":"deniro","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/5/169ed5c32223eab7?w=700&h=525&f=jpeg&s=47138","objectId":"5b36e583e51d4558d64f21f2"},"author":"","screenshot":"","original":true,"hotIndex":23.133,"content":"先说说没有块级作用域，可能产生的问题。 因为变量提升，导致 if 语句体中的变量 temp 覆盖了外层变量 temp。 ES6 通过 let 来实现块级作用域。 外层的变量 i，不受内层变量 i 的影响。 使用 {...} 结构，就可以标注出一个块级作用域。如果一个变量在外层没…","title":"说说 ES6 的块级作用域","lastCommentTime":"2019-08-04T22:36:41.793Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":270,"summaryInfo":"先说说没有块级作用域，可能产生的问题。 因为变量提升，导致 if 语句体中的变量 temp 覆盖了外层变量 temp。 1.2 用于循环的计数变量，其实是全局变量 ES6 通过 let 来实现块级作用域。 外层的变量 i，不受内层变量 i 的影响。 使用 结构，就可以标注出一个块级作用域。如果一个...","isCollected":false},{"collectionCount":7,"userRankIndex":6.50871622944,"buildTime":1572327604.2533,"commentsCount":2,"gfw":false,"objectId":"5d7659f76fb9a06ada54d907","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571654,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-29T05:40:04.237Z","rankIndex":0.00062356500251386,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d7658f36fb9a06b0472262e","verifyCreatedAt":"2019-09-09T15:26:22.322Z","createdAt":"2019-09-09T15:26:22.322Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGZicQDuRPCCU0q5FqIhcRf6KWlHqnE7PNccwJGD3WC43CXKjrxPIpibIMsOEjcjBOibliauGCjKW3rQ/132"}},"collectedEntriesCount":197,"company":"中国银行","followersCount":14,"followeesCount":52,"role":"guest","postedPostsCount":2,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":13,"ngxCachedTime":1572571654,"viewedEntriesCount":1229,"jobTitle":"大专","subscribedTagsCount":20,"totalCollectionsCount":18,"username":"new个对象","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/8/16c6eed640db17b6?w=819&h=819&f=jpeg&s=145041","objectId":"5cadbec75188251b2b20abdd"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/9/9/16d164f5ade34da8?w=197&h=255&f=jpeg&s=8109","original":true,"hotIndex":19.1287,"content":"外层函数嵌套内层函数，作用域是包含关系. 如有不适，请勿喷，胆小。","title":"从入门到放弃第二天：作用域与闭包","lastCommentTime":"2019-09-23T17:25:00.983Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":198,"summaryInfo":"嘿嘿嘿 不知道也没关系的，我后面在解答这个问题； JAVASCRIPT中函数运行在它们被定义的作用域里，而不是它们被执行的作用域里; 我们让闭包的值，外部定义个变量，我们把变量定义为 如发现：内容有问题，或者作者写错内容，分析错了； 请大佬留言本24小时改善，打造一个良好的学习环境 谢谢看完的各位...","isCollected":false},{"collectionCount":7,"userRankIndex":0.90670421737462,"buildTime":1572570146.308,"commentsCount":2,"gfw":false,"objectId":"5d8c859ef265da5ba6749edc","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-11-01T01:02:26.292Z","rankIndex":0.00093779124599597,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d8aceba518825094933fb84","verifyCreatedAt":"2019-09-26T15:48:42.680Z","createdAt":"2019-09-26T15:48:42.680Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGiar1Da2JqnD6a66ibIyQuoJEZbWRUpYiagYPuS0M0JjtXTtLUMuaHRojT3EUfwmVFsE7nZQicjrKLA/132"}},"collectedEntriesCount":12,"company":"","followersCount":12,"followeesCount":13,"role":"guest","postedPostsCount":6,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":9,"ngxCachedTime":1572571653,"viewedEntriesCount":628,"jobTitle":"","subscribedTagsCount":22,"totalCollectionsCount":60,"username":"程序媛兔子","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/7/166ed41e95fa8868?w=300&h=300&f=jpeg&s=40259","objectId":"5b7f70506fb9a01a1c571af0"},"author":"","screenshot":"","original":true,"hotIndex":22.3426,"content":"本质上是一套规则，用于确定在何处以及如何查找变量（标识符）。 作用域是可以嵌套的，引擎从当前作用域开始查找，如果找不到，就会向上一级继续查找，当抵达到最外层的全局作用域查找后，无论找到还是没找到，都会停止。 严格模式下：抛出 Reference 异常。 非严格模式下，自动隐式地…","title":"Javascript进阶1--作用域和闭包","lastCommentTime":"2019-09-28T14:49:45.767Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":261,"summaryInfo":"从今天开始，我打算将我学到的js知识进行分享，欢迎大家的讨论和补充，有任何不足之处，尽情地提出来吧～😁 本质上是一套规则，用于确定在何处以及如何查找变量（标识符）。 作用域是可以嵌套的，引擎从当前作用域开始查找，如果找不到，就会向上一级继续查找，当抵达到最外层的全局作用域查找后，无论找到还是没找到...","isCollected":false},{"collectionCount":6,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1571316952.1654,"checkStatus":true,"objectId":"5b7573fcf265da27e268cd6e","entryView":"","subscribersCount":0,"ngxCachedTime":1572571717,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571709,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"},{"ngxCachedTime":1572571701,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"}],"isEvent":false,"rankIndex":0.000010586307152704,"hot":false,"updatedAt":"2019-10-17T12:55:52.149Z","originalUrl":"https://juejin.im/post/5b72ee6ae51d4566676375a5","verifyCreatedAt":"2018-08-17T02:28:10.280Z","createdAt":"2018-08-17T02:28:10.280Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKicYd8qSMx5hVExXoNB62qaIFUQJib2YoI9uOoNqicOmicDGoHtY0hiaMMOJ1Cwiaich22OibBu1yba28dew/132"}},"collectedEntriesCount":13,"company":"清华大学计算机科学与技术系","followersCount":85,"followeesCount":2,"role":"guest","postedPostsCount":24,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":15,"ngxCachedTime":1572571717,"viewedEntriesCount":59,"jobTitle":"数据挖掘与数据分析","subscribedTagsCount":2,"totalCollectionsCount":178,"username":"酱油哥在掘金","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e090ef3613f6621b","objectId":"5b1fc0456fb9a01e76291a2d"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2018/8/16/16542ccd6fdc9665?w=711&h=561&f=jpeg&s=120623","original":true,"hotIndex":10.9624,"content":"前情回顾，上一节我们介绍了变量的LEGB索引机制：对一个变量，首先在本地（函数内）查找；之后查找嵌套函数的本地作用域，然后再是查找当前的全局作用域。 到目前为止，我们还有一个作用域没有介绍，就是嵌套作用域，即E，他是嵌套函数的本地作用域。 python有一个很有意思的地方，就是…","title":"给妹子讲python-S01E19解析Python内嵌作用域与函数闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571701},"viewsCount":96,"summaryInfo":"前情回顾，上一节我们介绍了变量的LEGB索引机制：对一个变量，首先在本地（函数内）查找；之后查找嵌套函数的本地作用域，然后再是查找当前的全局作用域。 到目前为止，我们还有一个作用域没有介绍，就是嵌套作用域，即E，他是嵌套函数的本地作用域。 python有一个很有意思的地方，就是def函数可以嵌套在...","isCollected":false},{"collectionCount":6,"userRankIndex":5.0896936467371,"buildTime":1572522349.2678,"commentsCount":0,"gfw":false,"objectId":"5cd4470af265da03587c1812","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T11:45:49.251Z","rankIndex":0.000065391026902115,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cd2ff3a6fb9a031ff0d30d3","verifyCreatedAt":"2019-05-09T15:39:10.456Z","createdAt":"2019-05-09T15:39:10.456Z","user":{"community":null,"collectedEntriesCount":9,"company":"","followersCount":6,"followeesCount":37,"role":"guest","postedPostsCount":9,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":9,"ngxCachedTime":1572571643,"ngxCached":true,"viewedEntriesCount":103,"jobTitle":"前端开发工程师","subscribedTagsCount":107,"totalCollectionsCount":63,"username":"蜗牛君_","avatarLarge":"https://user-gold-cdn.xitu.io/2018/6/21/1642140629607f8a?w=234&h=198&f=png&s=74712","objectId":"5b17712c6fb9a01e516d0af0"},"author":"","screenshot":"","original":true,"hotIndex":12.6908,"content":"js的内存机制主要分成两种，一个是栈内存，一个是堆内存。 1，给js代码提供自上而下的运行机制，所有的js代码都是在栈内存运行的。 2，因为基础类型比较简单，所以栈内存会直接开辟一个空间把基础类型保存在栈内存里边。 当栈内存被销毁，存储在栈内存中的基本类型的值也会被销毁掉。 存…","title":"堆栈内存的分析以及作用域的详解","lastCommentTime":"2019-05-09T23:29:39.451Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":128,"summaryInfo":"js的内存机制主要分成两种，一个是栈内存，一个是堆内存。 1，给js代码提供自上而下的运行机制，所有的js代码都是在栈内存运行的。2，因为基础类型比较简单，所以栈内存会直接开辟一个空间把基础类型保存在栈内存里边。当栈内存被销毁，存储在栈内存中的基本类型的值也会被销毁掉。 堆内存的作用：存储引用类型...","isCollected":false},{"collectionCount":6,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572268848.308,"checkStatus":true,"objectId":"5cae04656fb9a06880143829","entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-28T13:20:48.291Z","rankIndex":0.000038790165261807,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5caded1d5188251b162f2f68","verifyCreatedAt":"2019-04-11T03:25:01.396Z","createdAt":"2019-04-11T03:25:01.396Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/6vKuicKOEII3YDTU6w80C9OPCNfdEtmoTQfib4M89DIibVqAxGuibsfJDEKFXtu9xEtNO7z3fCPmRECJsRezsOAj5A/132"}},"collectedEntriesCount":18,"company":"","followersCount":104,"followeesCount":42,"role":"guest","postedPostsCount":34,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":21,"ngxCachedTime":1572571649,"ngxCached":true,"viewedEntriesCount":1852,"jobTitle":"web前端开发","subscribedTagsCount":42,"totalCollectionsCount":270,"username":"慕斯不想说话","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e0957c373548eda1","objectId":"5bd074165188251ce71d8e2c"},"author":"","screenshot":"","original":true,"hotIndex":12.9439,"content":"越是学习js越是觉得js基础理论知识是多么的重要，所以最近花了比较多的时间去学习，并把学习所得之感悟记录下来，以加深自己的理解，同时也供将来自己复习所用。写的不对的地方还烦请各位大神指出，非常乐意跟各位同道中人交流。 执行环境是指函数或变量在js运行起来时所处的环境。执行环境定…","title":"对js中执行环境、作用域和作用域链的理解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571580},"viewsCount":132,"summaryInfo":"  越是学习js越是觉得js基础理论知识是多么的重要，所以最近花了比较多的时间去学习，并把学习所得之感悟记录下来，以加深自己的理解，同时也供将来自己复习所用。写的不对的地方还烦请各位大神指出，非常乐意跟各位同道中人交流。   执行环境是指函数或变量在js运行起来时所处的环境。执行环境定义了变量或函...","isCollected":false},{"collectionCount":6,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1572424611.7259,"checkStatus":true,"objectId":"5a9650ac6fb9a0634912cef7","entryView":"","subscribersCount":0,"ngxCachedTime":1572571399,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571347,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"isEvent":false,"rankIndex":0.0000061922388002127,"hot":false,"updatedAt":"2019-10-30T08:36:51.704Z","originalUrl":"https://zhuanlan.zhihu.com/p/33647404","verifyCreatedAt":"2018-02-28T06:48:12.034Z","createdAt":"2018-02-28T06:48:12.034Z","user":{"community":null,"collectedEntriesCount":1610,"company":"","followersCount":5207,"followeesCount":43,"role":"guest","postedPostsCount":8,"level":0,"isAuthor":false,"postedEntriesCount":467,"totalCommentsCount":210,"ngxCachedTime":1572571318,"ngxCached":true,"viewedEntriesCount":2474,"jobTitle":"","subscribedTagsCount":5,"totalCollectionsCount":12501,"username":"红烧不是清蒸","avatarLarge":"https://user-gold-cdn.xitu.io/2017/8/10/4fe5ee3a310941e5020ade1a62efa5c1","objectId":"59845265f265da3e13575bb2"},"author":"","screenshot":null,"original":false,"hotIndex":10.945,"content":"在这个系列的开始，介绍了Python文件操作相关的概念，这一节我会说一说对Python的作用域与名称空间的理解。很多同学可能会觉得说的东西比较基础似乎和安全没有什么关系，其实不然。我是这么理解的，know it,then hack it.真正牛逼的漏洞都是对程序本身有深入的理…","title":"安全开发：说一说Python的作用域与名称空间","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571340},"viewsCount":85,"summaryInfo":"在这个系列的开始，介绍了Python文件操作相关的概念，这一节我会说一说对Python的作用域与名称空间的理解。 很多同学可能会觉得说的东西比较基础似乎和安全没有什么关系，其实不然。我是这么理解的，know it,then hack it.真正牛逼的漏洞都是对程序本身有深入的理解后挖出来的，『人肉...","isCollected":false},{"collectionCount":6,"userRankIndex":6.1612006226479,"buildTime":1571488730.2159,"commentsCount":0,"gfw":false,"objectId":"5d160555f265da1ba56b3272","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-19T12:38:50.198Z","rankIndex":0.00015189349752126,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d160517f265da1bb2774548","verifyCreatedAt":"2019-06-29T06:42:23.752Z","createdAt":"2019-06-29T06:42:23.752Z","user":{"community":{"weibo":{"selfDescription":"一个连幼稚园都没上过的人👻尴尬","uid":"2708035565","blogAddress":"http://weibo.com/u/2708035565","username":"米淇淋2","avatarLarge":"http://tvax4.sinaimg.cn/crop.0.0.960.960.180/a16957edly8fo29jw1hfkj20qo0qoq54.jpg"},"github":{"username":"miqilin21","avatarLarge":"https://avatars2.githubusercontent.com/u/44596995?v=4","uid":"44596995"}},"collectedEntriesCount":15,"company":"杭州","followersCount":51,"followeesCount":8,"role":"guest","postedPostsCount":29,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":13,"ngxCachedTime":1572571636,"ngxCached":true,"viewedEntriesCount":451,"jobTitle":"半吊子前端","subscribedTagsCount":9,"totalCollectionsCount":258,"username":"米淇淋","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/23/16a47ebf1f8b90e7?w=640&h=640&f=jpeg&s=52125","objectId":"5cbe712ae51d456e88333976"},"author":"","screenshot":"","original":true,"hotIndex":15.089,"content":"在上一篇《JavaScript系列之变量对象》中，我们已经知道一个执行上下文的数据（函数的形参、函数及变量声明）作为属性储存在变量对象中。 此外，我们也知道每次进入上下文时都会创建变量对象并填充初始值，并且值会在代码执行阶段进行更新，现在就对执行上下文做更深一步的了解。 本章将…","title":"JavaScript系列之作用域和作用域链","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":178,"summaryInfo":"在上一篇《JavaScript系列之变量对象》中，我们已经知道一个执行上下文的数据（函数的形参、函数及变量声明）作为属性储存在变量对象中。 此外，我们也知道每次进入上下文时都会创建变量对象并填充初始值，并且值会在代码执行阶段进行更新，现在就对执行上下文做更深一步的了解。 本章将专门介绍与执行上下文...","isCollected":false},{"collectionCount":6,"commentsCount":0,"gfw":false,"objectId":"5a693937f265da3e3245ab8d","checkStatus":true,"buildTime":1572360412.2072,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571029,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571022,"ngxCached":true,"title":"Spring","id":"5847c9a5ac502e006ce63fa1"},{"ngxCachedTime":1572570923,"ngxCached":true,"title":"后端","id":"5597a063e4b08a686ce57030"},{"ngxCachedTime":1572571002,"ngxCached":true,"title":"单元测试","id":"584628320ce463005784fd34"},{"ngxCachedTime":1572570987,"ngxCached":true,"title":"GitHub","id":"555e9abee4b00c57d9956152"}],"autoPass":false,"rankIndex":0.0000070661022608846,"hot":false,"updatedAt":"2019-10-29T14:46:52.190Z","originalUrl":"https://juejin.im/post/5a69390d6fb9a01cb80fea63","verifyCreatedAt":"2018-01-25T01:56:07.758Z","createdAt":"2018-01-25T01:56:07.758Z","user":{"community":{"weibo":{"selfDescription":"微信公众号:程序猜想","uid":"2480076477","blogAddress":"http://weibo.com/iwtapp","username":"程序猜想","avatarLarge":"http://tvax1.sinaimg.cn/crop.0.0.1002.1002.180/93d2f6bdly8g2hd18vggkj20ru0ru0uk.jpg"}},"collectedEntriesCount":220,"company":"","followersCount":31,"followeesCount":11,"role":"guest","postedPostsCount":6,"level":1,"isAuthor":true,"postedEntriesCount":17,"totalCommentsCount":16,"ngxCachedTime":1572571008,"ngxCached":true,"viewedEntriesCount":1750,"jobTitle":"写J2EE的Android程序猿","subscribedTagsCount":61,"totalCollectionsCount":753,"username":"程序猜想","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/30/16a6cee32cd0a3ff?w=512&h=512&f=png&s=359677","objectId":"55ffbe4860b21fbf5785b261"},"author":"","screenshot":"","original":true,"hotIndex":13.5327,"content":"Spring Bean有5个作用域，但是最近有需求在多个地方获取同一个Bean，只修改其中一个参数。那么Bean只在一个地方注入，修改属性就好，名字能一样吗？一系列问题 通常我们使用的是singleton，默认也是。在测试中发现提供相同类型的Bean，需要指定不同的name标识…","title":"Spring中Bean的作用域与StepScope关系、疑问","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572570979},"viewsCount":147,"summaryInfo":"Spring Bean有5个作用域，但是最近有需求在多个地方获取同一个Bean，只修改其中一个参数。那么Bean只在一个地方注入，修改属性就好，名字能一样吗？一系列问题这个StepScope是什么鬼，5个默认的Scope能满足需求吗？ ScopeDescription通常我们使用的是singlet...","isCollected":false},{"collectionCount":6,"autoPass":false,"commentsCount":0,"gfw":false,"buildTime":1571225760.7544,"checkStatus":true,"objectId":"5a9674446fb9a0635f7ead13","entryView":"","subscribersCount":0,"ngxCachedTime":1572571814,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571722,"ngxCached":true,"title":"Angular.js","id":"555e99f6e4b00c57d9955642"},{"ngxCachedTime":1572571769,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"},{"ngxCachedTime":1572571813,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"isEvent":false,"rankIndex":0.000008818878062399,"hot":false,"updatedAt":"2019-10-16T11:36:00.736Z","originalUrl":"https://juejin.im/post/5a96741e6fb9a063523e24dd","verifyCreatedAt":"2018-03-01T02:28:37.543Z","createdAt":"2018-03-01T02:28:37.543Z","user":{"community":{"github":{"username":"lpove","avatarLarge":"https://avatars3.githubusercontent.com/u/15901239?v=4","uid":"15901239"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/lWfF1X3ty2YiaV4dzJuibu1FzjB2iangDAeNNCkaSVI47r4iaicN1ZTjFiayQTPR72Ssiccm8JzmmQWhaibhqFKHjlSkEQ/132"}},"collectedEntriesCount":149,"company":"才华有限分公司","followersCount":1218,"followeesCount":16,"role":"guest","postedPostsCount":88,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":168,"ngxCachedTime":1572571784,"ngxCached":true,"viewedEntriesCount":2267,"jobTitle":"切图仔","subscribedTagsCount":15,"totalCollectionsCount":1942,"username":"Pandaaa","avatarLarge":"https://user-gold-cdn.xitu.io/2018/9/13/165d1e57767e9d32?w=214&h=215&f=jpeg&s=7258","objectId":"5861d87961ff4b00582876cd"},"author":"","screenshot":"","original":true,"hotIndex":15.027,"content":"ng-model 指令用于绑定应用程序数据到 HTML 控制器(input, select, textarea)的值。 ng-model 指令可以将输入域的值与 AngularJS 创建的变量绑定。 上实例中，提示信息会在 ng-show 属性返回 true 的情况下显示。 S…","title":"3-进军 angular1.x 模型和作用域 scope","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":166,"summaryInfo":"上实例中，提示信息会在 ng-show 属性返回 true 的情况下显示。 Scope(作用域) 是应用在 HTML (视图) 和 JavaScript (控制器)之间的纽带。 Scope 是一个对象，有可用的方法和属性。 Scope 可应用在视图和控制器上。 使用 ng 创建控制器的时候，你可以...","isCollected":false},{"collectionCount":6,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1571389006.7913,"checkStatus":true,"objectId":"5cac6ba36fb9a068846b7534","entryView":"","subscribersCount":0,"ngxCachedTime":1572571654,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-18T08:56:46.773Z","rankIndex":0.00006304706826375,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cac633c6fb9a068af37925b","verifyCreatedAt":"2019-04-09T11:08:51.691Z","createdAt":"2019-04-09T11:08:51.691Z","user":{"community":null,"collectedEntriesCount":11,"company":"","followersCount":5752,"followeesCount":8,"role":"guest","postedPostsCount":159,"level":4,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":452,"ngxCachedTime":1572571653,"ngxCached":true,"viewedEntriesCount":1259,"jobTitle":"前端码农","subscribedTagsCount":4,"totalCollectionsCount":4334,"username":"前端先锋","avatarLarge":"https://user-gold-cdn.xitu.io/2019/2/21/1690fd0c3f7514f2?w=626&h=626&f=jpeg&s=58154","objectId":"5bcee48e518825102423e40d"},"author":"","screenshot":"","original":true,"hotIndex":19.7135,"content":"作用域决定了变量的生命周期和可见性，变量在作用域范围之外是不可见的。 JavaScript 的作用域包括：模块作用域，函数作用域，块作用域，词法作用域和全局作用域。 在任何函数、块或模块范围之外定义的变量具有全局作用域。可以在程序的任意位置访问全局变量。 当启用模块系统时，创建…","title":"一网打尽 JavaScript 的作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":259,"summaryInfo":"作用域决定了变量的生命周期和可见性，变量在作用域范围之外是不可见的。 JavaScript 的作用域包括：模块作用域，函数作用域，块作用域，词法作用域和全局作用域。 在任何函数、块或模块范围之外定义的变量具有全局作用域。可以在程序的任意位置访问全局变量。 当启用模块系统时，创建全局变量会变得困难，...","isCollected":false},{"collectionCount":5,"autoPass":true,"commentsCount":0,"gfw":false,"buildTime":1570272125.9709,"checkStatus":true,"objectId":"5af5514f6fb9a07ace58ec45","entryView":"","subscribersCount":0,"ngxCachedTime":1572571196,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571181,"ngxCached":true,"title":"Go","id":"555e9a80e4b00c57d9955de2"}],"isEvent":false,"rankIndex":0.0000072608958137334,"hot":false,"updatedAt":"2019-10-05T10:42:05.952Z","originalUrl":"https://tonybai.com/2018/05/11/the-analysis-of-a-go-code-snippet-about-code-blocks-and-scope/","verifyCreatedAt":"2018-05-11T08:16:15.897Z","createdAt":"2018-05-11T08:16:15.897Z","user":{"community":null,"collectedEntriesCount":1760,"company":"狗场","followersCount":5564,"followeesCount":25,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":634,"totalCommentsCount":295,"ngxCachedTime":1572571192,"ngxCached":true,"viewedEntriesCount":2924,"jobTitle":"","subscribedTagsCount":1,"totalCollectionsCount":17602,"username":"折叠椅","avatarLarge":"https://user-gold-cdn.xitu.io/2017/10/31/b85ad9a9b6c80a8b98c755529a35b219","objectId":"5983f1b76fb9a03c3b6c7cea"},"author":"","screenshot":null,"original":false,"hotIndex":9.8945,"content":"近期，Go team的David CrawShaw在twitter上贴出了一段代码，如下： David CrawShaw想表达的意图是gopher们很少在”else if”后面的simple statement中使用“短变量声明”形式，而这段代码是个例外。我们看到b、c两个变量…","title":"对一段有关Go Code Block和变量作用域的代码的简要分析","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571096},"viewsCount":79,"summaryInfo":"近期，Go team的David CrawShaw在twitter上贴出了一段代码，如下： David CrawShaw想表达的意图是gopher们很少在”else if”后面的simple statement中使用“短变量声明”形式，而这段代码是个例外。我们看到b、c两个变量都是在else if...","isCollected":false},{"collectionCount":5,"userRankIndex":0.91485122775258,"buildTime":1571101650.2983,"commentsCount":0,"gfw":false,"objectId":"5cce805c6fb9a0322f7c9d44","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:07:30.280Z","rankIndex":0.000093975259318009,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cce8018f265da0354031e06","verifyCreatedAt":"2019-05-05T08:08:21.934Z","createdAt":"2019-05-05T08:08:21.934Z","user":{"community":null,"collectedEntriesCount":15,"company":"","followersCount":2,"followeesCount":13,"role":"guest","postedPostsCount":7,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":2,"ngxCachedTime":1572571653,"viewedEntriesCount":183,"jobTitle":"研发工程师","subscribedTagsCount":9,"totalCollectionsCount":48,"username":"rexkentzheng","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/9/166f640a93c00964?w=1920&h=1080&f=jpeg&s=505432","objectId":"5b3c45a2f265da0f894b45a0"},"author":"","screenshot":"","original":true,"hotIndex":22.026,"content":"在任何语言中，都需要存储一些变量，之后可以对变量进行修改和查找。 首先要明确的概念就是JavaScript是一种编译型语言，但它不像是其他编译型语言会在执行前被编译完成，而是边执行边编译，具体来说，编译仅仅是在执行前几秒中完成的。 分词/词法分析：就是将你的代码拆分开发，比方说…","title":"JS从入门到放弃：作用域和闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":335,"summaryInfo":"在任何语言中，都需要存储一些变量，之后可以对变量进行修改和查找。而作用域就是一组规则，告诉你在变量是应该在什么位置查找，什么位置存储，这就是作用域 如此便是编辑器的基本概念了，当然了，实际中编辑器的操作会复杂很多，此处为了方便理解最大程度上简化了编译器的内容，理解即可，重点不在此处。 要想了解作用...","isCollected":false},{"collectionCount":5,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1571590064.5698,"checkStatus":true,"objectId":"5c219889e51d456e813928b9","entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-20T16:47:44.551Z","rankIndex":0.000019505951040138,"hot":false,"autoPass":false,"originalUrl":"http://perfectionkills.com/global-eval-what-are-the-options/","verifyCreatedAt":"2018-12-25T03:00:38.358Z","createdAt":"2018-12-25T03:00:38.358Z","user":{"community":{"github":{"username":"Jiahonzheng","avatarLarge":"https://avatars1.githubusercontent.com/u/23151637?v=4","uid":"23151637"}},"collectedEntriesCount":410,"company":"","followersCount":1180,"followeesCount":42,"role":"guest","postedPostsCount":14,"level":2,"isAuthor":false,"postedEntriesCount":14,"totalCommentsCount":35,"ngxCachedTime":1572571574,"ngxCached":true,"viewedEntriesCount":2199,"jobTitle":"","subscribedTagsCount":31,"totalCollectionsCount":805,"username":"Jiahonzheng","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e088c773f98f6fef","objectId":"59b4d7b55188257e70530607"},"author":"","screenshot":null,"original":false,"hotIndex":11.8941,"content":"在 JavaScript 中， eval 和 with 可用来实现“欺骗词法”的目的。但默认情况下，eval 是对其所处的词法作用域进行修改。如果我们要用 eval 修改全局的词法作用域时，该如何实现？这篇文章给出了一个完整、清晰的答案。","title":"如何实现全局作用域下的 eval ？","lastCommentTime":"1970-01-01T00:00:00.Z","type":"article","english":true,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":125,"summaryInfo":"David Flanagan recently wrote about global eval() in Javascript, proposing a simple one-liner like this: Even though it looked beautifully simple, it...","isCollected":false},{"collectionCount":5,"userRankIndex":3.625,"buildTime":1572401785.571,"commentsCount":3,"gfw":false,"objectId":"5cc673cdf265da034d2a2016","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571652,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-30T02:16:25.554Z","rankIndex":0.00010327389119473,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cc672f55188252e7b4a4a8b","verifyCreatedAt":"2019-04-29T06:38:37.781Z","createdAt":"2019-04-29T06:38:37.781Z","user":{"community":{"github":{"username":"AwesomeDevin","avatarLarge":"https://avatars3.githubusercontent.com/u/22369504?v=4","uid":"22369504"}},"collectedEntriesCount":64,"company":"xx","followersCount":10,"followeesCount":19,"role":"guest","postedPostsCount":14,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":33,"ngxCachedTime":1572571652,"viewedEntriesCount":1559,"jobTitle":"攻城狮","subscribedTagsCount":21,"totalCollectionsCount":37,"username":"AwesomeDevin","avatarLarge":"https://user-gold-cdn.xitu.io/2018/11/20/1672f18376a2c2c1?w=1440&h=1080&f=jpeg&s=165282","objectId":"5b6448926fb9a04f8d6bd9dc"},"author":"","screenshot":"","original":true,"hotIndex":26.6467,"content":"箭头函数 this 指向 所处环境的上下文的 this 值，与是否独立调用或作为属性被调用，没有关系。 如果调用的函数，被某一个对象所拥有，那么该函数在调用时，内部的this指向该对象。 this指向与匿名函数没有关系,如果函数在全局作用域window中被独立调用，那么该函数内…","title":"【Javascript】深入理解this作用域问题","lastCommentTime":"2019-04-29T23:12:57.406Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":362,"summaryInfo":"针对于匿名函数this具有全局性的观点仍是有争议的，可参考 https://www.zhihu.com/question/21958425 在这里，getNameFunc return了1个匿名函数,可能你会认为这就是输出值为The Window的原因  但是，我们再来尝试写1个匿名函数 可以发现...","isCollected":false},{"collectionCount":5,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1572423256.9031,"checkStatus":true,"objectId":"5cb7ced96fb9a0685a3efc4d","entryView":"","subscribersCount":0,"ngxCachedTime":1572571341,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571320,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"updatedAt":"2019-10-30T08:14:16.885Z","rankIndex":0.000054802947436078,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cb6c857f265da03981fbd87","verifyCreatedAt":"2019-04-18T03:29:33.461Z","createdAt":"2019-04-18T03:29:33.461Z","user":{"community":{"github":{"username":"TTmore","avatarLarge":"https://avatars1.githubusercontent.com/u/28292634?v=4","uid":"28292634"}},"collectedEntriesCount":9,"company":"","followersCount":3,"followeesCount":42,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":4,"ngxCachedTime":1572571341,"viewedEntriesCount":557,"jobTitle":"搬砖打地基","subscribedTagsCount":26,"totalCollectionsCount":12,"username":"Thea_more","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/18/16a2e02f0f6c07f7?w=1029&h=1029&f=jpeg&s=45113","objectId":"5916c08eda2f60005de0f3c5"},"author":"","screenshot":"","original":true,"hotIndex":17.5781,"content":"JavaScript 中，函数及变量的声明都将被提升到函数的最顶部。 注意：只有声明本身被提升，而任何赋值或者其他执行逻辑都被留在原处。 函数声明和变量声明都会被提升，但（可以拥有多个“重复”声明的代码中出现）是，函数会优先被提升。 注意var foo2是一个重复的（因此被无视…","title":"ES6深入学习（一）块级作用域详解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571264},"viewsCount":232,"summaryInfo":"JavaScript 中，函数及变量的声明都将被提升到函数的最顶部。注意：只有声明本身被提升，而任何赋值或者其他执行逻辑都被留在原处。函数声明会被提升，但函数表达式不会 函数声明和变量声明都会被提升，但（可以拥有多个“重复”声明的代码中出现）是，函数会优先被提升。考虑这段代码： 注意var foo...","isCollected":false},{"collectionCount":5,"userRankIndex":0.0098623949803491,"buildTime":1572570661.095,"commentsCount":0,"gfw":false,"objectId":"5d5d1f0651882568586f1c3d","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571654,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-11-01T01:11:01.078Z","rankIndex":0.00022774387879254,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d5d1d98f265da03bc127d5a","verifyCreatedAt":"2019-08-21T18:32:56.370Z","createdAt":"2019-08-21T18:32:56.370Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/NHc7CMnPv52QicTHZTS3HNBVGtibHRwmk5U7xG3mp3o0E7HrJ5icw8ictyGHiapK5Wiaa0j9cQmicEw6y3IpJrkZibEKNw/132"},"github":{"username":"wind4gis","avatarLarge":"https://avatars0.githubusercontent.com/u/3963291?v=4","uid":"3963291"}},"collectedEntriesCount":215,"company":"某某公司","followersCount":61,"followeesCount":24,"role":"guest","postedPostsCount":12,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":31,"ngxCachedTime":1572571654,"viewedEntriesCount":1044,"jobTitle":"搬砖工","subscribedTagsCount":34,"totalCollectionsCount":514,"username":"wind4gis","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e089deb770ca6757","objectId":"59db9772f265da431875b140"},"author":"","screenshot":"","original":true,"hotIndex":16.1175,"content":"每当js引擎执行一段新的js代码时，它都会创建一个全新的执行上下文，由执行上下文来跟踪整个代码的执行情况、当前执行函数、作用域、this指向和变量映射。js引擎通过读取执行上下文就可以管理追踪该段js代码的执行情况，那么多个上下文是通过什么来管理的呢？答案是栈，多个上下文的管理…","title":"浅谈js执行上下文和词法作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":221,"summaryInfo":"每当js引擎执行一段新的js代码时，它都会创建一个全新的执行上下文，由执行上下文来跟踪整个代码的执行情况、当前执行函数、作用域、this指向和变量映射。js引擎通过读取执行上下文就可以管理追踪该段js代码的执行情况，那么多个上下文是通过什么来管理的呢？答案是栈，多个上下文的管理是通过上下文栈来管理...","isCollected":false},{"collectionCount":4,"userRankIndex":0,"buildTime":1571992625.1244,"commentsCount":1,"gfw":false,"objectId":"5d68fe12e51d45620821cefc","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-25T08:37:05.107Z","rankIndex":0.00018826698073972,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d56ba1f51882545e41e5ce6","verifyCreatedAt":"2019-08-31T07:33:46.558Z","createdAt":"2019-08-31T07:33:46.558Z","user":{"community":{"weibo":{"selfDescription":"","uid":"2687184180","blogAddress":"http://weibo.com/u/2687184180","username":"Miss-YangCCJ","avatarLarge":"http://tvax3.sinaimg.cn/crop.0.0.664.664.180/a02b2d34ly8g3ls2ev2e3j20ig0igjsm.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpZ192bhv1b5ibPhDkC875PPMdVrwicib6dRE0OXRZczKVof7iclicWgWcS7iaSpZCA9HF63UBhoJQkmfg/132"}},"collectedEntriesCount":50,"company":"","followersCount":5,"followeesCount":7,"role":"guest","postedPostsCount":11,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571656,"viewedEntriesCount":865,"jobTitle":"前端","subscribedTagsCount":46,"totalCollectionsCount":9,"username":"Britta","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/24/16a4d19267eb32f2?w=998&h=998&f=jpeg&s=496609","objectId":"5c938bdaf265da6102098a49"},"author":"","screenshot":"","original":true,"hotIndex":9.05,"content":"在网上的很多关于闭包的文章，但是我看了这么多的文章之后对闭包的概念还是迷迷糊糊的，虽然别人问起来可以向别人解释什么是闭包（当然只是浅显的解释），但是脑子里对闭包产生的根本原因还是有疑惑，后来看了垃圾回收的文章和作用域的文章之后才完全理解透。 关于闭包的定义，我的理解是一个函数访…","title":"浅谈闭包、作用域和垃圾回收","lastCommentTime":"2019-09-03T10:41:23.744Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571563},"viewsCount":79,"summaryInfo":"在网上的很多关于闭包的文章，但是我看了这么多的文章之后对闭包的概念还是迷迷糊糊的，虽然别人问起来可以向别人解释什么是闭包（当然只是浅显的解释），但是脑子里对闭包产生的根本原因还是有疑惑，后来看了垃圾回收的文章和作用域的文章之后才完全理解透。 关于闭包的定义，我的理解是一个函数访问了它自己的作用域以...","isCollected":false},{"collectionCount":4,"userRankIndex":6.9387245918322,"buildTime":1572514949.2607,"commentsCount":0,"gfw":false,"objectId":"5db66215e51d452a0f4ae923","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T09:42:29.244Z","rankIndex":0.024310048744017,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5db661b66fb9a0202b5edf6c","verifyCreatedAt":"2019-10-28T09:07:40.296Z","createdAt":"2019-10-28T09:07:40.296Z","user":{"community":null,"collectedEntriesCount":0,"company":"","followersCount":14,"followeesCount":7,"role":"guest","postedPostsCount":4,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":21,"ngxCachedTime":1572571563,"ngxCached":true,"viewedEntriesCount":11,"jobTitle":"","subscribedTagsCount":7,"totalCollectionsCount":45,"username":"ihap技术黑洞","avatarLarge":"https://user-gold-cdn.xitu.io/2019/10/21/16ded8952f7ad201?w=600&h=394&f=jpeg&s=18156","objectId":"5dad70f351882524f640cea7"},"author":"","screenshot":"","original":true,"hotIndex":8.4049,"content":"在 JavaScript ES3 中，我们只能通过 var 来声明变量，变量在声明时会有变量提升（hoisting），即在后面声明的变量可以被提前访问，而值默认为 undefined。 在 ES3 中，最外层的作用域称为全局作用域。如果你在全局作用域下声明变量，这些变量都会被添…","title":"窥探 JavaScript 中的变量作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571582},"viewsCount":82,"summaryInfo":"在 JavaScript ES3 中，我们只能通过 来声明变量，变量在声明时会有变量提升（hoisting），即在后面声明的变量可以被提前访问，而值默认为 。 在 ES3 中，最外层的作用域称为全局作用域。如果你在全局作用域下声明变量，这些变量都会被添加到一个全局对象 上，成为它的一个属性。 这个...","isCollected":false},{"collectionCount":4,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1571100471.2411,"checkStatus":true,"objectId":"5ca06c066fb9a05e705c4e3c","entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T00:47:51.224Z","rankIndex":0.000027992732951615,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5ca062f0e51d4556a05cf45c","verifyCreatedAt":"2019-03-31T15:23:07.578Z","createdAt":"2019-03-31T15:23:07.578Z","user":{"community":null,"collectedEntriesCount":23,"company":"","followersCount":8,"followeesCount":18,"role":"guest","postedPostsCount":14,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":4,"ngxCachedTime":1572571538,"ngxCached":true,"viewedEntriesCount":1071,"jobTitle":"","subscribedTagsCount":27,"totalCollectionsCount":69,"username":"林晨熙","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/31/169d18b885e51ade?w=180&h=180&f=jpeg&s=36224","objectId":"5ad6157951882555700686e9"},"author":"","screenshot":"","original":true,"hotIndex":9.1305,"content":"通常，我们在函数内部使用函数外部的变量时会很自然，并没有想过为什么能够直接使用函数外部的变量而在函数外部却不能直接使用函数内部的变量，一切都显得理所当然。佛曰，凡事必有因，这个因就是作用域链，在了解作用域链如何起作用前我们应该知道与其息息相关的作用域和变量对象。 当我们的代码在…","title":"变量对象与作用域链","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571563},"viewsCount":98,"summaryInfo":"通常，我们在函数内部使用函数外部的变量时会很自然，并没有想过为什么能够直接使用函数外部的变量而在函数外部却不能直接使用函数内部的变量，一切都显得理所当然。佛曰，凡事必有因，这个因就是作用域链，在了解作用域链如何起作用前我们应该知道与其息息相关的执行环境和变量对象。 执行环境在JS 执行上下文一文中...","isCollected":false},{"collectionCount":4,"userRankIndex":4.2645828476598,"buildTime":1572422900.4436,"commentsCount":1,"gfw":false,"objectId":"5d4fcc7fe51d45620064bb16","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571399,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571347,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"updatedAt":"2019-10-30T08:08:20.426Z","rankIndex":0.00024636773564842,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d4fcc72e51d4561f64a07d9","verifyCreatedAt":"2019-08-11T18:39:13.425Z","createdAt":"2019-08-11T18:39:13.425Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2eUMOOiaYjP8ngcMgtLRsm7hicmywTp7KGliczTmEviaS2y38CzJPhbq5hVWvFCB4wicLvHcAUibC31iaw/132"}},"collectedEntriesCount":226,"company":"","followersCount":300,"followeesCount":19,"role":"guest","postedPostsCount":226,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":55,"ngxCachedTime":1572571336,"ngxCached":true,"viewedEntriesCount":286,"jobTitle":"","subscribedTagsCount":40,"totalCollectionsCount":783,"username":"deniro","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/5/169ed5c32223eab7?w=700&h=525&f=jpeg&s=47138","objectId":"5b36e583e51d4558d64f21f2"},"author":"","screenshot":"","original":true,"hotIndex":16.3085,"content":"在函数内定义的变量，在函数的 “局部作用域” 中；而在函数外定义的变量，在 “全局作用域” 中。 在程序启动时，会创建一个全局作用域。当程序终止时，就会销毁这个作用域，其内部保存的变量也会被一同销毁。 一个函数被调用时，会创建一个局部作用域。当这个函数返回时，这个作用域就会被销…","title":"说说 Python 的作用域","lastCommentTime":"2019-08-19T15:39:21.619Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571340},"viewsCount":216,"summaryInfo":"在函数内定义的变量，在函数的 “局部作用域” 中；而在函数外定义的变量，在 “全局作用域” 中。 在程序启动时，会创建一个全局作用域。当程序终止时，就会销毁这个作用域，其内部保存的变量也会被一同销毁。 一个函数被调用时，会创建一个局部作用域。当这个函数返回时，这个作用域就会被销毁。 1 全局作用域...","isCollected":false},{"collectionCount":4,"userRankIndex":5.8418019116956,"buildTime":1572499134.3209,"commentsCount":0,"gfw":false,"objectId":"5d5b9ee5f265da03ab425072","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571165,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571082,"ngxCached":true,"title":"Spring","id":"5847c9a5ac502e006ce63fa1"}],"updatedAt":"2019-10-31T05:18:54.305Z","rankIndex":0.00047945015520556,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d5b9eb8f265da03cc08bd57","verifyCreatedAt":"2019-08-20T07:57:25.946Z","createdAt":"2019-08-20T07:57:25.946Z","user":{"community":null,"collectedEntriesCount":43,"company":"互联网","followersCount":442,"followeesCount":10,"role":"guest","postedPostsCount":54,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":76,"ngxCachedTime":1572571055,"ngxCached":true,"viewedEntriesCount":1466,"jobTitle":"高级研发工程师","subscribedTagsCount":9,"totalCollectionsCount":357,"username":"申城异乡人","avatarLarge":"https://user-gold-cdn.xitu.io/2019/6/25/16b8d1d5414a5b58?w=180&h=180&f=png&s=39501","objectId":"5c7ce730f265da2dca388167"},"author":"","screenshot":"","original":true,"hotIndex":28.5488,"content":"1. Spring中bean的多种作用域 在默认情况下，Spring应用上下文中所有的bean都是以单例(singleton)的形式创建的，即不管给定的一个bean被注入到其他bean多少次，每次所注入的都是同一个实例。 单例(Singleton)：在整个应用中，只创建bean…","title":"Spring入门(五)：Spring中bean的作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571118},"viewsCount":483,"summaryInfo":"","isCollected":false},{"collectionCount":4,"userRankIndex":6.2759491315072,"buildTime":1571126659.1136,"commentsCount":0,"gfw":false,"objectId":"5d4840246fb9a06add4e138a","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571814,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571813,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-15T08:04:19.095Z","rankIndex":0.0002924477718416,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d4837ade51d453b7779d4e3","verifyCreatedAt":"2019-08-05T18:14:10.499Z","createdAt":"2019-08-05T18:14:10.499Z","user":{"community":{"weibo":{"avatar_url":"http://tva3.sinaimg.cn/crop.0.0.750.750.180/a6b38040jw8ezscgwg4mij20ku0kut9v.jpg","uid":"2796781632","nickname":"型男School"},"github":{"username":"jamesdanner","avatarLarge":"https://avatars0.githubusercontent.com/u/8231955?v=4","uid":"8231955"}},"collectedEntriesCount":159,"company":"...","followersCount":97,"followeesCount":53,"role":"guest","postedPostsCount":37,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":32,"ngxCachedTime":1572571781,"ngxCached":true,"viewedEntriesCount":3776,"jobTitle":"资深前端开发工程师（公众号）@新前端社区","subscribedTagsCount":100,"totalCollectionsCount":300,"username":"前端技术小哥","avatarLarge":"https://leancloud-gold-cdn.xitu.io/12uc5gK9ZYx1DLXdkyYfF9B","objectId":"57b426e3c4c971005f897095"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/8/5/16c6219c3c124b12?w=1280&h=720&f=jpeg&s=54086","original":true,"hotIndex":14.1292,"content":"我们常讨论var，let和const之间的作用域的差异。但更多的时候，我看到不少初学者仍然在尝试着理解这个观点。我认为这可能是因为这个概念很少被可视化。 让我们一起来看一看。并不是所有的作用域看起来都是一样的。 注意：我并不建议大家死记作用域变量定义和每种类型的作用域的值可见性…","title":"JavaScript变量定义和作用域的可视化指南（入门级）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571744},"viewsCount":200,"summaryInfo":"我们常讨论var，let和const之间的作用域的差异。但更多的时候，我看到不少初学者仍然在尝试着理解这个观点。我认为这可能是因为这个概念很少被可视化。让我们一起来看一看。并不是所有的作用域看起来都是一样的。注意：我并不建议大家死记作用域变量定义和每种类型的作用域的值可见性规则。相反，你们可以试着...","isCollected":false},{"collectionCount":4,"userRankIndex":8.1467354582352,"buildTime":1572538087.3262,"commentsCount":0,"gfw":false,"objectId":"5dad146cf265da5b591b7732","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571165,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571083,"ngxCached":true,"title":"Spring","id":"5847c9a5ac502e006ce63fa1"}],"updatedAt":"2019-10-31T16:08:07.307Z","rankIndex":0.0063604531220415,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5dad1455f265da5b6006fa6a","verifyCreatedAt":"2019-10-21T02:49:34.170Z","createdAt":"2019-10-21T02:49:34.170Z","user":{"community":{"weibo":{"selfDescription":"人生如逆旅，我亦是行人","uid":"2240567614","blogAddress":"http://weibo.com/u/2240567614","username":"niocoder","avatarLarge":"https://tvax4.sinaimg.cn/crop.63.0.895.895.180/858c593ely8g02g757ur0j20qn0qn0su.jpg?KID=imgbed,tva&Expires=1572109470&ssig=BfW2L5sPyH"}},"collectedEntriesCount":68,"company":"京东数科","followersCount":426,"followeesCount":11,"role":"guest","postedPostsCount":57,"level":3,"isAuthor":false,"postedEntriesCount":4,"totalCommentsCount":20,"ngxCachedTime":1572571050,"ngxCached":true,"viewedEntriesCount":2242,"jobTitle":"JAVA开发工程师","subscribedTagsCount":17,"totalCollectionsCount":1012,"username":"郑龙飞","avatarLarge":"https://user-gold-cdn.xitu.io/2019/10/21/16dec363a2df6f58?w=959&h=959&f=jpeg&s=26146","objectId":"57732ad92e958a0056d5e00d"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/10/21/16dec2bfebd86b67?w=1920&h=1280&f=jpeg&s=191025","original":true,"hotIndex":17.648,"content":"在Spring框架中，我们可以在六个内置的spring bean作用域中创建bean，还可以定义bean范围。在这六个范围中，只有在使用支持Web的applicationContext时，其中四个可用。singleton和prototype作用域可用于任何类型的ioc容器。 在…","title":"Spring系列四：Bean Scopes作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571096},"viewsCount":267,"summaryInfo":"在框架中，我们可以在六个内置的作用域中创建，还可以定义范围。在这六个范围中，只有在使用支持的时，其中四个可用。和作用域可用于任何类型的容器。 在中，可以使用中的 注解定义的作用域。下面我们已经列出这六个在应用程序上下文中使用的内置作用域。这些相同的作用域也适用于 作用域。 是容器中bean的默认作...","isCollected":false},{"collectionCount":4,"userRankIndex":0,"buildTime":1571973306.6793,"commentsCount":0,"gfw":false,"objectId":"5cd93d66518825695b6eaa5c","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571442,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571372,"ngxCached":true,"title":"HTML","id":"555eadbbe4b00c57d99623cc"}],"updatedAt":"2019-10-25T03:15:06.661Z","rankIndex":0.000037022770381436,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cd93c40f265da03ba0e4c47","verifyCreatedAt":"2019-05-13T10:40:55.078Z","createdAt":"2019-05-13T10:40:55.078Z","user":{"community":null,"collectedEntriesCount":0,"company":"千锋教育","followersCount":2,"followeesCount":0,"role":"guest","postedPostsCount":58,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571442,"viewedEntriesCount":28,"jobTitle":"千锋互联网大前端标准化研究院成员","subscribedTagsCount":4,"totalCollectionsCount":4,"username":"Eric_V","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/23/169a86d8a3fca251?w=220&h=307&f=jpeg&s=7362","objectId":"5c959cec6fb9a070ab7e2b28"},"author":"","screenshot":"","original":true,"hotIndex":9.2035,"content":"我们都知道js是一个基于对象的语言，系统内置各种对象。 而window作为一个天然存在的全局对象，它承担了所有全局资源的存储。 我们使用的任何全局变量，都是window下的。也就是说，在js中，实际上没有任何对象、方法是可以独立的，它们必须依赖于某个对象才可以被访问或执行。 这…","title":"web前端学习教程：JS的作用域链","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571384},"viewsCount":91,"summaryInfo":"我们都知道js是一个基于对象的语言，系统内置各种对象。 而window作为一个天然存在的全局对象，它承担了所有全局资源的存储。 我们使用的任何全局变量，都是window下的。也就是说，在js中，实际上没有任何对象、方法是可以独立的，它们必须依赖于某个对象才可以被访问或执行。 就像alert()，它...","isCollected":false},{"collectionCount":4,"userRankIndex":0.086336975544044,"buildTime":1571271474.6711,"commentsCount":1,"gfw":false,"objectId":"5d7ed3fc5188253e547f5bb0","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571653,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-17T00:17:54.651Z","rankIndex":0.0011433235705654,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d7ed29951882527fa7f5138","verifyCreatedAt":"2019-09-16T02:14:39.914Z","createdAt":"2019-09-16T02:14:39.914Z","user":{"community":{"github":{"username":"ExplorerCl","avatarLarge":"https://avatars2.githubusercontent.com/u/42248262?v=4","uid":"42248262"}},"collectedEntriesCount":43,"company":"","followersCount":9,"followeesCount":21,"role":"guest","postedPostsCount":6,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":2,"ngxCachedTime":1572571653,"viewedEntriesCount":365,"jobTitle":"Web前端开发工程师","subscribedTagsCount":52,"totalCollectionsCount":32,"username":"ExplorerCl","avatarLarge":"https://user-gold-cdn.xitu.io/2019/9/16/16d39def04a26f50?w=1024&h=1024&f=jpeg&s=430338","objectId":"5b7420ad518825613d38973e"},"author":"","screenshot":"","original":true,"hotIndex":23.0716,"content":"作用域是为了在我们使用变量引用之后，更方便的寻找到这些变量而制定的一套规则。 作用域在实际的使用中，会互相的嵌套，所以我们通常需要顾及多个作用域。 当一个块或者函数嵌套在另一个块或者函数中，就发生了作用域的嵌套。在当前作用域无法找到某个变量时，引擎会在外层的作用域中寻找，逐级递…","title":"【JavaScript】作用域 - 笔记","lastCommentTime":"2019-09-16T10:42:11.897Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":347,"summaryInfo":"作用域是为了在我们使用变量引用之后，更方便的寻找到这些变量而制定的一套规则。 作用域在实际的使用中，会互相的嵌套，所以我们通常需要顾及多个作用域。 当一个块或者函数嵌套在另一个块或者函数中，就发生了作用域的嵌套。在当前作用域无法找到某个变量时，引擎会在外层的作用域中寻找，逐级递增出去，直到找到该变...","isCollected":false},{"collectionCount":4,"userRankIndex":8.1081510847967,"buildTime":1572230120.4302,"commentsCount":1,"gfw":false,"objectId":"5d2e95f86fb9a07ee5665277","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571654,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-28T02:35:20.413Z","rankIndex":0.00020681974025415,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d2e9507f265da1ba432222b","verifyCreatedAt":"2019-07-17T04:03:47.910Z","createdAt":"2019-07-17T04:03:47.910Z","user":{"community":{"github":{"avatar_url":"https://avatars.githubusercontent.com/u/17241960?v=3","uid":"17241960","nickname":"Lieone"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ererXXianhd8o4HYrpFkGAUsm02la358fEGjR7qXjG5z2BaUlX2dy2Y5oI9Tsy4DEe9HbDapBhRiaxw/132"}},"collectedEntriesCount":248,"company":"","followersCount":124,"followeesCount":10,"role":"guest","postedPostsCount":42,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":44,"ngxCachedTime":1572571613,"ngxCached":true,"viewedEntriesCount":4034,"jobTitle":"小夭同学","subscribedTagsCount":47,"totalCollectionsCount":658,"username":"故事胶片","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082bd55afa23963","objectId":"576b77cc5bbb5000594262f1"},"author":"","screenshot":"","original":true,"hotIndex":17.3039,"content":"1. 基本类型和引用类型的值 因此如果想要给一个变量赋值一个引用类型的值，那么则必须在堆内存中为这个值分配空间，由于这种值的大小不固定，因此不能把她保存到栈内存中，但是内存地址的大小是固定的，因此可以将内存地址保存在栈内存中。这样，在查询引用类型的变量时，就可以首先从栈中读取内…","title":"重学js之JavaScript变量、作用域和内存问题","lastCommentTime":"2019-10-26T00:57:36.893Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":238,"summaryInfo":"将一个值赋给变量的时候，解析器必须确定这个值是基本类型还是引用类型 因此如果想要给一个变量赋值一个引用类型的值，那么则必须在堆内存中为这个值分配空间，由于这种值的大小不固定，因此不能把她保存到栈内存中，但是内存地址的大小是固定的，因此可以将内存地址保存在栈内存中。这样，在查询引用类型的变量时，就可...","isCollected":false},{"collectionCount":4,"userRankIndex":0,"buildTime":1571101520.6123,"commentsCount":3,"gfw":false,"objectId":"5cc46b6a5188251910056706","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:05:20.595Z","rankIndex":0.000049147666001769,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cbc3a146fb9a0689b6ee36f","verifyCreatedAt":"2019-04-28T03:09:40.740Z","createdAt":"2019-04-28T03:09:40.740Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAFIbEXmusb2ia2xYtp8Nqv6C4RBCpVcoicDhAqgQNRvdIQRT8IP3hagYeengZPRy5FQiaWsGIsw3Gg/132"}},"collectedEntriesCount":2,"company":"腾讯","followersCount":2,"followeesCount":1,"role":"guest","postedPostsCount":4,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":2,"ngxCachedTime":1572571655,"viewedEntriesCount":112,"jobTitle":"前端开发","subscribedTagsCount":23,"totalCollectionsCount":10,"username":"热心码农陈某","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/6/16a8d3b4b2dc1b8a?w=6000&h=4000&f=jpeg&s=3678720","objectId":"5cbc39c2f265da0363454c60"},"author":"","screenshot":"","original":true,"hotIndex":12.8033,"content":"万丈高楼平地起，欲练此功，必先打好基本功: )。 ES6已经融入到了我们的日常开发当中，甚至一些ES7的特性也已经在普遍使用，但由于浏览器的支持问题，ES6的代码在大多数情况下，还是需要编译成ES5才能正常地在各浏览器上正常运行。 ES6支持6中形式的变量命名方式：var、le…","title":"通俗易懂理解ES6 - 变量声明命令及其块级作用域","lastCommentTime":"2019-04-30T13:17:11.821Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":104,"summaryInfo":"万丈高楼平地起，欲练此功，必先打好基本功: )。ES6已经融入到了我们的日常开发当中，甚至一些ES7的特性也已经在普遍使用，但由于浏览器的支持问题，ES6的代码在大多数情况下，还是需要编译成ES5才能正常地在各浏览器上正常运行。ES6支持6中形式的变量命名方式：、、、、、，本文主要讨论的是、、。和...","isCollected":false},{"collectionCount":4,"userRankIndex":4.654086409154,"buildTime":1572256495.9413,"commentsCount":0,"gfw":false,"objectId":"5d6f7e81e51d4561a91850d8","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-28T09:54:55.925Z","rankIndex":0.00036051192194696,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d6f7e58e51d4561fa2ec0d5","verifyCreatedAt":"2019-09-04T09:25:26.623Z","createdAt":"2019-09-04T09:25:26.623Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/VQNzIpm3egje02qb7bAyfwGpoM8whV4rhrvBKbUoMn56RHciaicC9rjd7ma9ic1vwYLQibX74hwCHstziay2oLicrd4A/132"}},"collectedEntriesCount":114,"company":"","followersCount":40,"followeesCount":24,"role":"guest","postedPostsCount":21,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":10,"ngxCachedTime":1572571581,"ngxCached":true,"viewedEntriesCount":1683,"jobTitle":"iOS开发工程师、业余前端工程师","subscribedTagsCount":50,"totalCollectionsCount":119,"username":"ALLen、LAS","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/27/16cd0bba9e4e4d07?w=598&h=598&f=jpeg&s=18625","objectId":"5b3ee7f2e51d4519846946c7"},"author":"","screenshot":"","original":true,"hotIndex":12.195,"content":"this 是 JavaScript 中的一个关键字，当一个函数被调用时，除了传入函数的显式参数以外，名为this 的隐式参数也被传入函数。 1. 全局&调用普通函数 在全局环境中，this 永远指向 window。 普通函数在调用时候 (注意不是构造函数,前面不加new)，其中…","title":"全面解析JavaScript - this作用域详解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":145,"summaryInfo":"是 JavaScript 中的一个关键字，当一个函数被调用时，除了传入函数的显式参数以外，名为 的隐式参数也被传入函数。 参数指向了一个自动生成的内部对象，这个内部对象被成为函数上下文 1. 全局&调用普通函数 在全局环境中，this 永远指向 window。 普通函数在调用时候 (注意不是构造函...","isCollected":false},{"collectionCount":3,"userRankIndex":0.77737243608834,"buildTime":1570801997.0711,"commentsCount":0,"gfw":false,"objectId":"5d1db94e51882579cd5b0c47","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571341,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571264,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"updatedAt":"2019-10-11T13:53:17.054Z","rankIndex":0.000060208059760552,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d1c94f3e51d4510803ce413","verifyCreatedAt":"2019-07-04T15:27:23.494Z","createdAt":"2019-07-04T15:27:23.494Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/hbl8y4dicvmWfkBzznrtF8EKORpc8s1NdZITc0heqiamIKnZTpoZDQT0b5MV0yz1cHNCUbficOhEMLRuvF3LiblO6g/132"}},"collectedEntriesCount":8,"company":"移动云","followersCount":4,"followeesCount":1,"role":"guest","postedPostsCount":6,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571341,"viewedEntriesCount":180,"jobTitle":"前端","subscribedTagsCount":10,"totalCollectionsCount":13,"username":"Nomad_Lau","avatarLarge":"https://mirror-gold-cdn.xitu.io/169704e6be4f0c89d75","objectId":"5c873f13e51d457dc359496c"},"author":"","screenshot":"","original":true,"hotIndex":6.1932,"content":"在写js代码时，很多人会使用var关键字来声明变量。var关键字声明的变量使得我们无论在函数作用域还是全局作用域中任意地方声明的一个变量都会被当成在当前作用域的顶部声明的，这就是我们常说的变量提升（Hoisting）机制。用一个函数举例子： 不了解js的人可能认为只有当flag…","title":"深入理解es6读后总结--块级作用域绑定","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571248},"viewsCount":63,"summaryInfo":"在写js代码时，很多人会使用var关键字来声明变量。var关键字声明的变量使得我们无论在函数作用域还是全局作用域中任意地方声明的一个变量都会被当成在当前作用域的顶部声明的，这就是我们常说的变量提升（HOISTING）机制。用一个函数举例子： 不了解js的人可能认为只有当flag为true的时候才能...","isCollected":false},{"collectionCount":3,"userRankIndex":0,"buildTime":1572525248.4179,"commentsCount":0,"gfw":false,"objectId":"5db82c66f265da4d385fec48","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571341,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571264,"ngxCached":true,"title":"ECMAScript 6","id":"5597a13de4b08a686ce58b7e"}],"updatedAt":"2019-10-31T12:34:08.399Z","rankIndex":0.01739826896178,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5db82b3af265da4d3761d4b7","verifyCreatedAt":"2019-10-29T12:17:54.798Z","createdAt":"2019-10-29T12:17:54.798Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIDhIpvB4hJns1Amsv33aAia6tqtZFTwR3ic699icgtib8dLmqe6JjkENQlOh2IQopOdMicWyOmzRSXofg/132"}},"collectedEntriesCount":1,"company":"","followersCount":0,"followeesCount":21,"role":"guest","postedPostsCount":1,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571341,"viewedEntriesCount":44,"jobTitle":"前端工程师","subscribedTagsCount":47,"totalCollectionsCount":3,"username":"莫晓寒","avatarLarge":"https://mirror-gold-cdn.xitu.io/16d8052c228f0125d75","objectId":"5d917da0f265da5b783ef978"},"author":"","screenshot":"","original":true,"hotIndex":6.0171,"content":"在以前的ES5中，作用域只有全局作用域和函数作用域，没有块级作用域。 在函数作用域或全局作用域中通过关键字var声明的变量，无论实际上是在哪里声明的，都会被当成在当前作用域顶部声明的变量，这就是我们常说的提升（Hoisting）机制。 这会导致函数作用域覆盖了全局作用域；亦或者…","title":"ES6学习-块级作用域、let和const","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571248},"viewsCount":50,"summaryInfo":" 在以前的ES5中，作用域只有全局作用域和函数作用域，没有块级作用域。  在函数作用域或全局作用域中通过关键字var声明的变量，无论实际上是在哪里声明的，都会被当成在当前作用域顶部声明的变量，这就是我们常说的提升（Hoisting）机制。  这会导致函数作用域覆盖了全局作用域；亦或者循环中的变量泄...","isCollected":false},{"collectionCount":3,"userRankIndex":0.78540353966433,"buildTime":1571107205.2735,"commentsCount":0,"gfw":false,"objectId":"5d5b4d08e51d4561d106cbd9","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T02:40:05.251Z","rankIndex":0.00015664452841363,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d5b3fcd5188253761069301","verifyCreatedAt":"2019-08-20T01:33:48.528Z","createdAt":"2019-08-20T01:33:48.528Z","user":{"community":{"github":{"username":"ladny","avatarLarge":"https://avatars1.githubusercontent.com/u/10241942?v=4","uid":"10241942"}},"collectedEntriesCount":11,"company":"","followersCount":8,"followeesCount":5,"role":"guest","postedPostsCount":12,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571656,"ngxCached":true,"viewedEntriesCount":109,"jobTitle":"前端开发工程师","subscribedTagsCount":20,"totalCollectionsCount":17,"username":"前端娃娃","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e084b73f19e1622e","objectId":"59157fe144d904006c4b0d6f"},"author":"","screenshot":"","original":true,"hotIndex":6.9509,"content":"网上关于JS的变量和作用域的文章有很多，但真正能讲清楚，能深入理解的文章很少。在阅读了很多人的文章以后，我决定综合起来，结合实际代码，会不断丰富提炼总结更新，希望能够以一个比较清楚完整的方式让大家真正理解。直接撸起袖子,开始干吧。 1. 作用域是可访问变量的集合 在 JavaS…","title":"javascript之作用域一（理解作用域）","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571582},"viewsCount":74,"summaryInfo":"网上关于JS的变量和作用域的文章有很多，但真正能讲清楚，能深入理解的文章很少。在阅读了很多人的文章以后，我决定综合起来，结合实际代码，会不断丰富提炼总结更新，希望能够以一个比较清楚完整的方式让大家真正理解。直接撸起袖子,开始干吧。 1. 作用域是可访问变量的集合 在 JavaScript 中, 对...","isCollected":false},{"collectionCount":3,"userRankIndex":3.4190225827029,"buildTime":1571296949.8553,"commentsCount":0,"gfw":false,"objectId":"5d6247d9e51d456201486e62","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-17T07:22:29.838Z","rankIndex":0.00036864021797008,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d6247afe51d4561de20b5ff","verifyCreatedAt":"2019-08-26T01:50:17.144Z","createdAt":"2019-08-26T01:50:17.144Z","user":{"community":{"github":{"username":"LIJING0906","avatarLarge":"https://avatars3.githubusercontent.com/u/13495382?v=4","uid":"13495382"}},"collectedEntriesCount":7,"company":"","followersCount":6,"followeesCount":0,"role":"guest","postedPostsCount":21,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":3,"ngxCachedTime":1572571616,"ngxCached":true,"viewedEntriesCount":153,"jobTitle":"","subscribedTagsCount":44,"totalCollectionsCount":32,"username":"LIJING0906","avatarLarge":"https://user-gold-cdn.xitu.io/2019/1/18/168619ffb4f32f91?w=1239&h=1071&f=png&s=1589928","objectId":"59c5259e5188254f962ccacc"},"author":"","screenshot":"","original":true,"hotIndex":12.9615,"content":"今天来啃闭包和作用域这块难啃的骨头。 作用域是一个变量和函数的作用范围，JS中函数内声明的所有变量在函数体内始终是可见的，在ES6前有全局作用域和局部作用域，但是没有块级作用域（catch只在其内部生效），局部变量的优先级高于全局变量。 Javascript中有一个执行上下文(…","title":"JS闭包和作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":182,"summaryInfo":"此文首发于 https://lijing0906.github.io 今天来啃闭包和作用域这块难啃的骨头。 作用域是一个变量和函数的作用范围，JS中函数内声明的所有变量在函数体内始终是可见的，在ES6前有全局作用域和局部作用域，但是没有块级作用域（catch只在其内部生效），局部变量的优先级高于全...","isCollected":false},{"collectionCount":3,"userRankIndex":0.29550822622199,"buildTime":1571107201.3549,"commentsCount":0,"gfw":false,"objectId":"5d5c0210f265da03c1289b39","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T02:40:01.337Z","rankIndex":0.00015832576823051,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d5c01016fb9a06aec2640fd","verifyCreatedAt":"2019-08-20T14:33:56.305Z","createdAt":"2019-08-20T14:33:56.305Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eribqGX98EmLzRu74pacl5JeFnSDfG15mogxibjibQYA8icAoCTia3EJ7wtPg8ibUaXFZDGUE9f9B5LwUSQ/132"},"github":{"username":"William-Cao","avatarLarge":"https://avatars3.githubusercontent.com/u/22885397?v=4","uid":"22885397"}},"collectedEntriesCount":12,"company":"null","followersCount":46,"followeesCount":5,"role":"guest","postedPostsCount":6,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":8,"ngxCachedTime":1572571656,"viewedEntriesCount":1100,"jobTitle":"FED","subscribedTagsCount":3,"totalCollectionsCount":246,"username":"WilliamCao","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/1/169397b645c9e0a3?w=1239&h=1209&f=png&s=1059303","objectId":"5c6664e66fb9a049b41cfdda"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/8/20/16caf67fa04db15f?w=1024&h=682&f=jpeg&s=93592","original":true,"hotIndex":7.4108,"content":"上下文(context)是一段程序运行所需要的最小数据集合。我们可以从上下文交换(context switch)来理解上下文，在多进程或多线程环境中，任务切换时首先要中断当前的任务，将计算资源交给下一个任务。因为稍后还要恢复之前的任务，所以中断的时候要保存现场，即当前任务的上下…","title":"从执行上下文，到作用域闭包","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":82,"summaryInfo":"(context)是一段程序运行所需要的最小数据集合。我们可以从(context switch)来理解上下文，在多进程或多线程环境中，任务切换时首先要中断当前的任务，将计算资源交给下一个任务。因为稍后还要恢复之前的任务，所以中断的时候要保存现场，即当前任务的上下文，也可以叫做环境。 (scope)...","isCollected":false},{"collectionCount":3,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1571100826.6484,"checkStatus":true,"objectId":"5cb9c714518825324664dff1","entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T00:53:46.631Z","rankIndex":0.000038892747204168,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cb995186fb9a06886421a7e","verifyCreatedAt":"2019-04-20T10:46:33.436Z","createdAt":"2019-04-20T10:46:33.436Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ermQY2VFxkvibcePHmrgQlXV3sMOpbb2Rl59d4n6zP6fVKzh0iaomrI6hOxZpmTjiawAJ2U1n5ThleiaA/132"}},"collectedEntriesCount":3,"company":"街电","followersCount":14,"followeesCount":0,"role":"guest","postedPostsCount":12,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571655,"viewedEntriesCount":312,"jobTitle":"前端","subscribedTagsCount":40,"totalCollectionsCount":43,"username":"会会会","avatarLarge":"https://user-gold-cdn.xitu.io/2019/9/26/16d6ca4f7b83de47?w=1242&h=1209&f=png&s=1708462","objectId":"580477f10e3dd9005715b1d6"},"author":"","screenshot":"","original":true,"hotIndex":10.8258,"content":"这里的(function foo(){ .. })是一个函数表达式；而不是一 个标准的函数声明； 所以，foo 被绑定在函数表达式自身的函数中而不是所在作用域中。 换句话说，(function foo(){ .. })作为函数表达式意味着foo只能在..所代表的位置中被访问，外…","title":"JavaScript 作用域和闭包理解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":142,"summaryInfo":"分为函数作用域，和块级作用域； 此时，foo里面就是一个函数作用域，可以bar里面又是一个作用域；最外面当然就是全局作用域； 这样就可以访问外面的a了，因为访问变量a的时候就近原则，就得到了3； 用 with 从对象中创建出的作用域仅在 with 声明中而非外 部作用域中有效。 JavaScrip...","isCollected":false},{"collectionCount":3,"userRankIndex":0,"buildTime":1571822479.6603,"commentsCount":0,"gfw":false,"objectId":"5d8fd1ff5188254cf76c5e08","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-23T09:21:19.641Z","rankIndex":0.00035758550729974,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d8fd1e75188252e09755f5a","verifyCreatedAt":"2019-09-29T07:29:22.076Z","createdAt":"2019-09-29T07:29:22.076Z","user":{"community":null,"collectedEntriesCount":0,"company":"","followersCount":1,"followeesCount":0,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571656,"viewedEntriesCount":80,"jobTitle":"","subscribedTagsCount":0,"totalCollectionsCount":3,"username":"upboyu","avatarLarge":"","objectId":"5d64f3326fb9a06ae3727011"},"author":"","screenshot":"","original":true,"hotIndex":4.9802,"content":"作用域是指程序源代码中定义变量的区域。 作用域规定了如何查找变量，也就是确定当前执行代码对变量的访问权限。 JavaScript 采用词法作用域(lexical scoping)，也就是静态作用域。 因为 JavaScript 采用的是词法作用域，函数的作用域在函数定义的时候就…","title":"JavaScript深入之词法作用域和动态作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571582},"viewsCount":26,"summaryInfo":"作用域是指程序源代码中定义变量的区域。 作用域规定了如何查找变量，也就是确定当前执行代码对变量的访问权限。 JavaScript 采用词法作用域(lexical scoping)，也就是静态作用域。 因为 JavaScript 采用的是词法作用域，函数的作用域在函数定义的时候就决定了。 而与词法作...","isCollected":false},{"collectionCount":3,"userRankIndex":0,"buildTime":1571292624.5894,"commentsCount":0,"gfw":false,"objectId":"5d5e8932518825786938681a","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571818,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571797,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-17T06:10:24.570Z","rankIndex":0.00013548155943316,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d5d4261518825053c7d74d7","verifyCreatedAt":"2019-08-22T13:26:21.887Z","createdAt":"2019-08-22T13:26:21.887Z","user":{"community":null,"collectedEntriesCount":6,"company":"","followersCount":0,"followeesCount":0,"role":"guest","postedPostsCount":6,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571818,"viewedEntriesCount":66,"jobTitle":"","subscribedTagsCount":11,"totalCollectionsCount":8,"username":"本账号已注销","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/13/16c8ad11e8825c59?w=640&h=640&f=jpeg&s=41958","objectId":"5d52a2bff265da03cb122efc"},"author":"","screenshot":"","original":true,"hotIndex":6.6288,"content":"在此时，a便是fn函数的私有变量，在函数体外不能获取到。 函数执行过程：先开辟一个私有作用域（栈内存），形参赋值，变量提升，然后代码从上向下执行；私有变量有形参和在私有作用域中声明过的变量，其他的变量都是上级作用域的。 以上就是本文的全部内容，希望对大家的学习有所帮助。","title":"JavaScript 作用域和全局变量","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571803},"viewsCount":61,"summaryInfo":"在此时，a便是fn函数的私有变量，在函数体外不能获取到。 函数执行过程：先开辟一个私有作用域（栈内存），形参赋值，变量提升，然后代码从上向下执行；私有变量有形参和在私有作用域中声明过的变量，其他的变量都是上级作用域的。 以上就是本文的全部内容，希望对大家的学习有所帮助。","isCollected":false},{"collectionCount":3,"userRankIndex":3.0182015841808,"buildTime":1571974078.793,"commentsCount":0,"gfw":false,"objectId":"5d295d55f265da1bc64bf0b2","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571815,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-25T03:27:58.773Z","rankIndex":0.00012138213412785,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d295cd1f265da1b88120a76","verifyCreatedAt":"2019-07-13T04:38:57.103Z","createdAt":"2019-07-13T04:38:57.103Z","user":{"community":null,"collectedEntriesCount":34,"company":"","followersCount":542,"followeesCount":0,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":11,"totalCommentsCount":19,"ngxCachedTime":1572571815,"viewedEntriesCount":2065,"jobTitle":"前端开发人员","subscribedTagsCount":2,"totalCollectionsCount":680,"username":"gtshen","avatarLarge":"https://user-gold-cdn.xitu.io/2017/7/11/4df451dc6b173583b1802f1a317f2ab3","objectId":"596464995188250d9f1b0470"},"author":"","screenshot":"","original":true,"hotIndex":12.1165,"content":"“闭包(closure)”实际上就是被返回的函数有权访问其包含函数中定义的变量和标识符。 “闭包”可以访问其包含函数中的变量标识符，原理在于闭包函数的作用域链中引用了包含函数的作用域。 在这个“防抖”的示例中，debounce 就是“包含函数”，而 debounce 函数内部通…","title":"从闭包到作用域再到具体的应用","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":167,"summaryInfo":"那么，本篇文章你能学到什么？ “闭包(closure)”实际上就是被返回的函数有权访问其包含函数中定义的变量和标识符。“闭包”可以访问其包含函数中的变量标识符，原理在于闭包函数的作用域链中引用了包含函数的作用域。 在这个“防抖”的示例中， 就是“包含函数”，而 函数内部通过  语句返回的匿名函数就...","isCollected":false},{"collectionCount":2,"isEvent":false,"commentsCount":6,"gfw":false,"buildTime":1572507373.8846,"checkStatus":true,"objectId":"5c735198f265da2de6610e81","entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T07:36:13.867Z","rankIndex":0.000029812386555129,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5c7350c7f265da2dde06f3aa","verifyCreatedAt":"2019-02-25T02:33:02.525Z","createdAt":"2019-02-25T02:33:02.525Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/7xUB95hcQqiaNDzsfIx0D1jF8Azb7d6RKyn8Eyq837UKAoiaNnJGA2WV08Lho23gFNN64E2GEPKLtY51CjjWrL0w/132"},"github":{"username":"iotale","avatarLarge":"https://avatars3.githubusercontent.com/u/13507637?v=4","uid":"13507637"}},"collectedEntriesCount":129,"company":"","followersCount":9,"followeesCount":192,"role":"guest","postedPostsCount":3,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":12,"ngxCachedTime":1572571642,"ngxCached":true,"viewedEntriesCount":1512,"jobTitle":"前端","subscribedTagsCount":82,"totalCollectionsCount":117,"username":"慎玄","avatarLarge":"https://user-gold-cdn.xitu.io/2019/1/15/1685106477ad5fa1?w=50&h=50&f=png&s=1833","objectId":"59b961f2f265da065c5e6a72"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/2/25/16922769fe592ac2?w=493&h=376&f=png&s=9038","original":true,"hotIndex":13.7105,"content":"本篇是对ECMAScript 6 入门函数参数默认值一章中的作用域一节的学习总结，并且寻找了一些相关问题，同时还注意到 Babel 的一个转译问题。 在 ECMA-262 中的9.2.12 FunctionDeclarationInstantiation(func, argum…","title":"函数参数默认值的作用域问题【从0 到 0.1】","lastCommentTime":"2019-05-25T18:07:24.707Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":97,"summaryInfo":"在 ECMA-262 中的9.2.12 FunctionDeclarationInstantiation(func, argumentsList)章节有相关说明。 PS：上面几种情况只是通过表现和结果进行总结，并没有严格按照规范进行分析。如有不对，请不吝赐教。 按我的理解，既然形参作用域和函数体作...","isCollected":false},{"collectionCount":2,"userRankIndex":2.0542066537398,"buildTime":1572498588.4007,"commentsCount":0,"gfw":false,"objectId":"5d11c4c2f265da1bad5713bc","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T05:09:48.376Z","rankIndex":0.000071814347966092,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d11c4ab51882532774ee611","verifyCreatedAt":"2019-06-25T06:54:28.501Z","createdAt":"2019-06-25T06:54:28.501Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXMniasIBZSeZgD4uU0hf9P9BxSdcmQ3CVmv9nlm7q1ukeEm8F5z0peAy1HhQ5Ac7z3lYicOzRkiavg/132"}},"collectedEntriesCount":60,"company":"","followersCount":6,"followeesCount":18,"role":"guest","postedPostsCount":13,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571655,"viewedEntriesCount":986,"jobTitle":"前端程序员","subscribedTagsCount":25,"totalCollectionsCount":19,"username":"焦糖丶瓜子","avatarLarge":"https://user-gold-cdn.xitu.io/2018/4/3/1628c3ae865643c3?w=997&h=998&f=jpeg&s=271694","objectId":"5a17dcf8f265da431955f64b"},"author":"","screenshot":"","original":true,"hotIndex":10.169,"content":"1、每次新创建的一个执行上下文会被添加到作用域链的顶部，有时也称为执行或调用栈。浏览器总是运行位于作用域链顶部的当前执行上下文。一旦完成，当前执行上下文将从栈顶被移除并且将控制权归还给之前的执行上下文。 2、不同执行上下文之间的变量命名冲突通过攀爬作用域链解决，从局部直到全局。…","title":"JavaScript之闭包、this和作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":156,"summaryInfo":"","isCollected":false},{"collectionCount":2,"userRankIndex":0,"buildTime":1571845536.8535,"commentsCount":0,"gfw":false,"objectId":"5d050aa26fb9a07eea3270b9","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571000,"verifyStatus":true,"tags":[{"ngxCachedTime":1572570953,"ngxCached":true,"title":"Shell","id":"5840ee66a22b9d006c12be16"}],"updatedAt":"2019-10-23T15:45:36.835Z","rankIndex":0.000027912111170008,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d050a816fb9a07edf274260","verifyCreatedAt":"2019-06-15T16:05:46.671Z","createdAt":"2019-06-15T16:05:46.671Z","user":{"community":{"weibo":{"selfDescription":"我就是我，是不一样的烟火～","uid":"1913557310","blogAddress":"http://weibo.com/778951104","username":"罗蜀黍lf","avatarLarge":"http://tvax3.sinaimg.cn/crop.48.72.111.111.180/720e913ely8fd1sxjq098j205k05kwec.jpg"},"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/F7MLMsa1OqGf2fiaa3DsRUCGA07X7ibWH94B6gnJELicMqUMRwwpJunibibjnjr9brzuOc93QOUUbb5qx4Rw2qDUz9A/132"},"github":{"username":"ilssio","avatarLarge":"https://avatars0.githubusercontent.com/u/46130819?v=4","uid":"46130819"}},"collectedEntriesCount":46,"company":"","followersCount":17,"followeesCount":11,"role":"guest","postedPostsCount":21,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":7,"ngxCachedTime":1572571000,"viewedEntriesCount":453,"jobTitle":"后端开发","subscribedTagsCount":74,"totalCollectionsCount":44,"username":"苡仁","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/1/16c4a9b9695ae5cc?w=960&h=960&f=jpeg&s=98444","objectId":"5d037d8c6fb9a07ef44403fd"},"author":"","screenshot":"","original":true,"hotIndex":4.8659,"content":"这里后面所有用到的定义都是用function name { command.. }这样的方法 *相同，但是使用时加引号，并在引号中返回每个参数。 $- 显示Shell使用的当前选项，与set命令功能相同。 $? 显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误 再次…","title":"Shell编程—【04】函数的定义、参数、变量作用域、函数库","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572570979},"viewsCount":40,"summaryInfo":"再次提醒： 需要先SH 这个文件 然后再在命令行中使用下列命令。","isCollected":false},{"collectionCount":2,"userRankIndex":0,"buildTime":1570975492.7326,"commentsCount":0,"gfw":false,"objectId":"5d6742226fb9a06b2e3d05e5","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571817,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571780,"ngxCached":true,"title":"前端","id":"5597a05ae4b08a686ce56f6f"}],"updatedAt":"2019-10-13T14:04:52.715Z","rankIndex":0.00026545960387129,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d667a30f265da03bf0f5490","verifyCreatedAt":"2019-08-29T04:45:05.556Z","createdAt":"2019-08-29T04:45:05.556Z","user":{"community":{"github":{"username":"FannieGirl","avatarLarge":"https://avatars2.githubusercontent.com/u/19258229?v=4","uid":"19258229"}},"collectedEntriesCount":8,"company":"","followersCount":0,"followeesCount":0,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571817,"viewedEntriesCount":231,"jobTitle":"前端开发工程师","subscribedTagsCount":26,"totalCollectionsCount":5,"username":"FannieGirl","avatarLarge":"https://mirror-gold-cdn.xitu.io/168e082ea0ca27cd978","objectId":"57a1a373d342d300573417ba"},"author":"","screenshot":"","original":true,"hotIndex":9.5573,"content":"","title":"你不知道的JavaScript之作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571728},"viewsCount":137,"summaryInfo":"","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1572089677.2535,"commentsCount":0,"gfw":false,"objectId":"5daea4706fb9a04e3142261f","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-26T11:34:37.235Z","rankIndex":0.0040617927245455,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5daea45ef265da5ba838f74e","verifyCreatedAt":"2019-10-22T07:32:26.375Z","createdAt":"2019-10-22T07:32:26.375Z","user":{"community":null,"collectedEntriesCount":2,"company":"","followersCount":0,"followeesCount":9,"role":"guest","postedPostsCount":5,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571655,"ngxCached":true,"viewedEntriesCount":593,"jobTitle":"","subscribedTagsCount":20,"totalCollectionsCount":6,"username":"大束","avatarLarge":"https://user-gold-cdn.xitu.io/2019/2/11/168da66a9ff42449?w=640&h=639&f=jpeg&s=51628","objectId":"5af94600f265da0b8e7f8551"},"author":"","screenshot":"","original":true,"hotIndex":4.1251,"content":"","title":"深入作用域链","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":56,"summaryInfo":"结合变量对象和执行上下文栈，总结一下函数执行上下文中作用域链和变量对象的创建过程：","isCollected":false},{"collectionCount":1,"isEvent":false,"commentsCount":0,"gfw":false,"buildTime":1571100828.6281,"checkStatus":true,"objectId":"5cbc8283f265da03b446103f","entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T00:53:48.611Z","rankIndex":0.000045174234410033,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cb5efc9f265da03b4460890","verifyCreatedAt":"2019-04-22T11:38:12.208Z","createdAt":"2019-04-22T11:38:12.208Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdTqwK5X5eVjFXIlpQF6I6pNZ1024Wk0DV2pMjsr9vEDNP2DA7CFM9jpF70WUs2500P4OC9SkVsg/132"}},"collectedEntriesCount":16,"company":"","followersCount":8,"followeesCount":30,"role":"guest","postedPostsCount":14,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571655,"viewedEntriesCount":832,"jobTitle":"前端工程师","subscribedTagsCount":41,"totalCollectionsCount":24,"username":"YaeSakura","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/13/16c8b7115dcdec45?w=2894&h=4093&f=jpeg&s=2269432","objectId":"5884195c8d6d81006ce25594"},"author":"","screenshot":"","original":true,"hotIndex":12.3587,"content":"通过之前的文章，我们熟悉了作用域的基本概念。但是作用域中的变量，函数声明在什么地方查找，引用它们的时候又发生了什么。正是我们将要讨论的内容。 在我们的认知中JavaScript代码在执行的时候是由上到下一行一行执行的。但实际上并不完全正确。例如： 按照我们之前的认知由上到下，最…","title":"学习作用域中的“名词”","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571580},"viewsCount":215,"summaryInfo":"通过之前的文章，我们熟悉了作用域的基本概念。但是作用域中的变量，函数声明在什么地方查找，引用它们的时候又发生了什么。正是我们将要讨论的内容。 在我们的认知中代码在执行的时候是由上到下一行一行执行的。但实际上并不完全正确。例如： 按照我们之前的认知由上到下，最后输出，因为声明在后面，但最后输出的结果...","isCollected":false},{"collectionCount":1,"userRankIndex":1.4744474649003,"buildTime":1571102910.3123,"commentsCount":0,"gfw":false,"objectId":"5d04b040e51d454d1d628512","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:28:30.295Z","rankIndex":0.000044248733374489,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d04afb7f265da1ba2525c9c","verifyCreatedAt":"2019-06-15T15:09:16.294Z","createdAt":"2019-06-15T15:09:16.294Z","user":{"community":{"github":{"username":"Knight174","avatarLarge":"https://avatars0.githubusercontent.com/u/43068756?v=4","uid":"43068756"}},"collectedEntriesCount":4,"company":"","followersCount":3,"followeesCount":7,"role":"guest","postedPostsCount":17,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":6,"ngxCachedTime":1572571655,"ngxCached":true,"viewedEntriesCount":160,"jobTitle":"","subscribedTagsCount":15,"totalCollectionsCount":24,"username":"Knight174","avatarLarge":"https://mirror-gold-cdn.xitu.io/16ada6755c247a4b921","objectId":"5ce3f17b6fb9a07ed2244306"},"author":"","screenshot":"","original":true,"hotIndex":5.4907,"content":"作用域、作用域链是JavaScript中重要的组成部分和重点知识，是我们务必要掌握的内容。 如果没有掌握，那么作为重点难点之一的函数的闭包将会难以理解、无从下手。 1. 函数作用域 [[scope]] JS中，只有函数级别的作用域，没有块级作用域。也就是说，只有在进入或者退出函…","title":"JavaScript的作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":84,"summaryInfo":"作用域、作用域链是JavaScript中重要的组成部分和重点知识，是我们务必要掌握的内容。 如果没有掌握，那么作为重点难点之一的函数的闭包将会难以理解、无从下手。 1. 函数作用域 [[SCOPE]] 执行环境（execution context），也就是执行期上下文，它定义了执行期间可以访问的变...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1572524695.7235,"commentsCount":0,"gfw":false,"objectId":"5d6e1fcae51d453b7403f9ec","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T12:24:55.706Z","rankIndex":0.0001083175145787,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d6e0ee851882558bb56cccc","verifyCreatedAt":"2019-09-03T09:15:13.176Z","createdAt":"2019-09-03T09:15:13.176Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7yEjaYpzFgj9xVtclRR8I2icq4HvcH4JAYeFE1CdzPxlgmKKxMByr97UJDeBZ9ovLWkSbPaib1beQ/132"}},"collectedEntriesCount":7,"company":"","followersCount":6,"followeesCount":15,"role":"guest","postedPostsCount":18,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":6,"ngxCachedTime":1572571656,"viewedEntriesCount":304,"jobTitle":"一个做WebGIS的小前端","subscribedTagsCount":15,"totalCollectionsCount":7,"username":"Criska","avatarLarge":"https://user-gold-cdn.xitu.io/2019/8/27/16cd3992bb91b268?w=640&h=640&f=png&s=278068","objectId":"5b63f9e2e51d45195e0fa762"},"author":"","screenshot":"","original":true,"hotIndex":5.6507,"content":"，变量没有在函数内声明或者声明的时候没有带var就是全局变量，拥有全局作用域。特殊：var a = b = c = 0; b与c是全局变量。 在javascript中，函数里面定义的变量，可以在函数里面被访问，但在函数外无法访问。而由花括号封闭的代码块都有自己的作用域，因而支持…","title":"《JavaScript高级程序设计》总结（六）—— 作用域和变量提升","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"article","id":"5562b428e4b00c57d9b94b9d","name":"阅读","ngxCachedTime":1572571582},"viewsCount":79,"summaryInfo":"就是变量声明的区域,就是变量和函数的可访问范围 在全局作用域中声明的变量叫做全局变量，全局作用域的变量可以在js中任何地方调用，变量没有在函数内声明或者声明的时候没有带var就是全局变量，拥有全局作用域。 如，在函数内部声明的变量只能在函数内部访问 在javascript中，函数里面定义的变量，可...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1572523563.8855,"commentsCount":0,"gfw":false,"objectId":"5daeda1551882554c07586f1","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-31T12:06:03.866Z","rankIndex":0.0030021451051788,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5daed9ff518825527a4cf158","verifyCreatedAt":"2019-10-22T16:27:07.573Z","createdAt":"2019-10-22T16:27:07.573Z","user":{"community":null,"collectedEntriesCount":1,"company":"xialei","followersCount":16,"followeesCount":0,"role":"guest","postedPostsCount":45,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":8,"ngxCachedTime":1572571586,"ngxCached":true,"viewedEntriesCount":685,"jobTitle":"全栈工程师","subscribedTagsCount":6,"totalCollectionsCount":24,"username":"xialeistudio","avatarLarge":"https://user-gold-cdn.xitu.io/2019/9/5/16d0108418e96b21?w=132&h=132&f=jpeg&s=4123","objectId":"5ca1f53751882544002cf0f6"},"author":"","screenshot":"","original":true,"hotIndex":9.3095,"content":"ES6新增了两个重要的关键字let和const，相信大家都不陌生，但是包括我在内，在系统学习ES6之前也只使用到了【不存在变量提升】这个特性。 var定义的变量会提升到整个函数作用域内，let/const则支持块级作用域。 此时输出1，因为var没有块级作用域。 与var不同的…","title":"不只是块级作用域，你不知道的let和const","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":149,"summaryInfo":"ES6新增了两个重要的关键字和，相信大家都不陌生，但是包括我在内，在系统学习ES6之前也只使用到了【不存在变量提升】这个特性。 定义的变量会提升到整个函数作用域内，则支持块级作用域。 此时输出1，因为没有块级作用域。 此时会报错，因为支持块级作用域，所以定义的只在可以访问 与不同的是，声明的变量不...","isCollected":false},{"collectionCount":1,"userRankIndex":0.093325959287503,"buildTime":1571102593.9339,"commentsCount":0,"gfw":false,"objectId":"5cfdaf426fb9a07ee63f5912","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:23:13.916Z","rankIndex":0.000028329792829891,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cfdaf00f265da1b9253cea8","verifyCreatedAt":"2019-06-10T04:28:35.553Z","createdAt":"2019-06-10T04:28:35.553Z","user":{"community":null,"collectedEntriesCount":27,"company":"","followersCount":110,"followeesCount":8,"role":"guest","postedPostsCount":32,"level":3,"isAuthor":false,"postedEntriesCount":1,"totalCommentsCount":18,"ngxCachedTime":1572571588,"ngxCached":true,"viewedEntriesCount":327,"jobTitle":"后端开发工程师","subscribedTagsCount":27,"totalCollectionsCount":783,"username":"CoderFocus","avatarLarge":"https://user-gold-cdn.xitu.io/2018/5/10/16347f2eeab39aab?w=179&h=179&f=png&s=48119","objectId":"5af3b110f265da0b74522ca9"},"author":"","screenshot":"","original":true,"hotIndex":4.669,"content":"对于几乎所有编程语言，最基本的功能之一就是能够存储变量的值，并且能在之后对这个值进行访问和修改。这样就会带来几个问题，这些变量存储在哪里？程序在需要的时候又是如何找到它们的？要解决这些问题，就需要引入一套规则来存储变量和访问变量，这套规则就是作用域。 在刚开始接触 JavaSc…","title":"JavaScript 作用域不完全指北","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":55,"summaryInfo":"对于几乎所有编程语言，最基本的功能之一就是能够存储变量的值，并且能在之后对这个值进行访问和修改。这样就会带来几个问题，这些变量存储在哪里？程序在需要的时候又是如何找到它们的？要解决这些问题，就需要引入一套规则来存储变量和访问变量，这套规则就是作用域。 在刚开始接触 JavaScript 这门语言时...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1571106117.9043,"commentsCount":0,"gfw":false,"objectId":"5d2cb855f265da1bbe5e3574","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T02:21:57.879Z","rankIndex":0.000059982728339757,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d2b4d25e51d454f723025a3","verifyCreatedAt":"2019-07-16T02:40:06.134Z","createdAt":"2019-07-16T02:40:06.134Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/k5r6L01rTcMqDdHrs2qPuohfp8RApLcq0dCPFR5z4UyB3uh2nX8DVQSEeZia5gG7oEL3b6oypdicernb5Jh43hmA/132"}},"collectedEntriesCount":29,"company":"前端打杂","followersCount":3,"followeesCount":27,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":1,"ngxCachedTime":1572571626,"ngxCached":true,"viewedEntriesCount":532,"jobTitle":"打杂","subscribedTagsCount":26,"totalCollectionsCount":1,"username":"我真的不会敲代码","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/19/16acf8c306534cb0?w=819&h=819&f=jpeg&s=180827","objectId":"5be1b685518825171c6afe3b"},"author":"","screenshot":"https://user-gold-cdn.xitu.io/2019/7/16/16bf6af3025e9379?w=750&h=422&f=jpeg&s=45306","original":true,"hotIndex":6.1251,"content":"最近在看《你不知道的JavaScript》的第一卷，写文章总结一下自己的感悟。 作用域本质就是程序源代码中定义变量的区域，它可以解释为一套规则，是关于JS引擎如何寻找变量以及会在何处找到变量的规则。 从大的方面来讲，作用域分为两种，分别是词法作用域和动态作用域，两者的区别是词法…","title":"Javascript中的作用域和闭包详解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":85,"summaryInfo":"作用域可以解释为一套规则，是关于JS引擎如何寻找变量以及会在何处找到变量的规则。 从大的方面来讲，作用域分为两种，分别是词法作用域和动态作用域，两者的区别是词法作用域是在写代码时就确定了作用域（不使用eval和with的前提下），即静态作用域，而动态作用域是在代码运行时动态确定的。包括JS在内的大...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1571106164.6141,"commentsCount":0,"gfw":false,"objectId":"5d1b2765518825392a5cfd0c","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571649,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T02:22:44.593Z","rankIndex":0.000048479858716562,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d19a1a8e51d45109b01b1e0","verifyCreatedAt":"2019-07-02T15:29:13.589Z","createdAt":"2019-07-02T15:29:13.589Z","user":{"community":{"github":{"username":"Rewa-Fang","avatarLarge":"https://avatars3.githubusercontent.com/u/22268681?v=4","uid":"22268681"}},"collectedEntriesCount":2,"company":"","followersCount":1,"followeesCount":10,"role":"guest","postedPostsCount":3,"level":1,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":0,"ngxCachedTime":1572571656,"viewedEntriesCount":120,"jobTitle":"前端老菜鸟","subscribedTagsCount":48,"totalCollectionsCount":1,"username":"Rewa-Fang","avatarLarge":"https://user-gold-cdn.xitu.io/2019/6/26/16b919b1410b7051?w=959&h=959&f=jpeg&s=67943","objectId":"59f2a823f265da43310d10b5"},"author":"","screenshot":"","original":true,"hotIndex":6.0887,"content":"在学习作用域之前先简单了解一下JavaScript的编译、执行过程。 JavaScript被称之为解释性语言，与Java等这类编译语言区别在于：JavaScript代码写好了就可以直接立即执行，Java则需要相对较长时间的编译过程才可生成可执行的机器码。 但其实JavaScri…","title":"JavaScript必须要掌握的知识-作用域","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571624},"viewsCount":90,"summaryInfo":"在学习作用域之前先简单了解一下JavaScript的编译、执行过程。 JavaScript被称之为解释性语言，与Java等这类编译语言区别在于：JavaScript代码写好了就可以直接立即执行，Java则需要相对较长时间的编译过程才可生成可执行的机器码。 但其实JavaScript也是有编译过程的...","isCollected":false},{"collectionCount":1,"userRankIndex":8,"buildTime":1572343506.4353,"commentsCount":2,"gfw":false,"objectId":"5cc6b34ef265da035a1f28fe","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571655,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571597,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-29T10:05:06.417Z","rankIndex":0.000062669973928205,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cc6b336f265da036b4a6fd2","verifyCreatedAt":"2019-04-29T16:09:22.849Z","createdAt":"2019-04-29T16:09:22.849Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyNIia6IFvSwsWvfdlia1mPXbHBVDNCMj7vibvibdACIVicFafjhgo9iaQ2vkEALxr3RibAmXH4riamlzKag/132"},"github":{"username":"MYQ1996","avatarLarge":"https://avatars1.githubusercontent.com/u/17963690?v=4","uid":"17963690"}},"collectedEntriesCount":15,"company":"","followersCount":188,"followeesCount":63,"role":"guest","postedPostsCount":19,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":25,"ngxCachedTime":1572571655,"viewedEntriesCount":1625,"jobTitle":"前端工程师","subscribedTagsCount":67,"totalCollectionsCount":544,"username":"AsGiant","avatarLarge":"https://user-gold-cdn.xitu.io/2019/3/26/169b98fcf7dde04d?w=614&h=614&f=jpeg&s=233234","objectId":"5b4e88986fb9a04fba6e752b"},"author":"","screenshot":"","original":true,"hotIndex":10.2096,"content":"在私有作用域中，我们代码执行的时候遇到一个变量，首先我们需要确定当前它，是否是私有变量，如果是私有的变量，那么和外面的任何东西都没有关系；如果不是私有的，则往当前作用域上级作用域进行查找，如果上级作用域也没有则继续查找，一直找到window为止.. num，所以都输出的num为…","title":"JavaScript进阶入门(一)   预解释作用域this","lastCommentTime":"2019-05-04T11:19:33.972Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571639},"viewsCount":136,"summaryInfo":"3.1 声明（DECLARE） 告诉浏览器在全局作用域中有一个num的变量了如果一个变量只是声明了，但是没有进行变量的定义，那就是undefined 在预解释的时候，提前的声明+定义都完成了 3.5 预解释只发生在当前的作用域之下 例如:开始只对window下得进行预解释，只有函数执行的时候才会对...","isCollected":false},{"collectionCount":1,"userRankIndex":4.2645828476598,"buildTime":1571321146.6901,"commentsCount":0,"gfw":false,"objectId":"5d4fdaec6fb9a06b2b4769fc","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571399,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571347,"ngxCached":true,"title":"Python","id":"559a7227e4b08a686d25744f"}],"updatedAt":"2019-10-17T14:05:46.673Z","rankIndex":0.0002094579694338,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5d4fdada6fb9a06b1b19b1eb","verifyCreatedAt":"2019-08-12T01:10:04.021Z","createdAt":"2019-08-12T01:10:04.021Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2eUMOOiaYjP8ngcMgtLRsm7hicmywTp7KGliczTmEviaS2y38CzJPhbq5hVWvFCB4wicLvHcAUibC31iaw/132"}},"collectedEntriesCount":226,"company":"","followersCount":300,"followeesCount":19,"role":"guest","postedPostsCount":226,"level":3,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":55,"ngxCachedTime":1572571336,"ngxCached":true,"viewedEntriesCount":286,"jobTitle":"","subscribedTagsCount":40,"totalCollectionsCount":783,"username":"deniro","avatarLarge":"https://user-gold-cdn.xitu.io/2019/4/5/169ed5c32223eab7?w=700&h=525&f=jpeg&s=47138","objectId":"5b36e583e51d4558d64f21f2"},"author":"","screenshot":"","original":true,"hotIndex":9.1147,"content":"global 标识用于在函数内部，修改全局变量的值。 变量定义在全局作用域，那就是全局变量。 变量在函数中定义，并且加了 global 标识，就是全局变量。 如果变量在函数中仅做了定义，那么就是局部变量。 如果变量在函数中仅仅是使用，那么就是全局变量。 因为在函数中，存在对 d…","title":"说说 Python 的 global 标识对变量作用域的影响","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"backend","id":"5562b419e4b00c57d9b94ae2","name":"后端","ngxCachedTime":1572571340},"viewsCount":149,"summaryInfo":"global 标识用于在函数内部，修改全局变量的值。 我们可以通过以下规则，来判定一个变量到底是在全局作用域还是局部作用域： 下面的示例，有助于理解上述规则： 注意： 在函数中，如果在变量定义之前先使用它，就会抛错： 因为在函数中，存在对 dumplings 的定义赋值语句，所以被认为是局部变量。...","isCollected":false},{"collectionCount":1,"userRankIndex":0,"buildTime":1571101945.2997,"commentsCount":0,"gfw":false,"objectId":"5cdd46976fb9a0323120b5e3","checkStatus":true,"isEvent":false,"entryView":"","subscribersCount":0,"ngxCachedTime":1572571656,"verifyStatus":true,"tags":[{"ngxCachedTime":1572571630,"ngxCached":true,"title":"JavaScript","id":"55964d83e4b08a686cc6b353"}],"updatedAt":"2019-10-15T01:12:25.281Z","rankIndex":0.000019976856414707,"hot":false,"autoPass":false,"originalUrl":"https://juejin.im/post/5cdd4688518825686b121023","verifyCreatedAt":"2019-05-16T15:51:38.727Z","createdAt":"2019-05-16T15:51:38.727Z","user":{"community":{"wechat":{"avatarLarge":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erJpZhhpSkqZCsoiczzVNPEkzM3xiawF2tprv0C21QXwVcmtRib9HohmCewgrXsibUq1fmnQTRMBYwaLg/132"},"github":{"username":"klivitam-Jiang","avatarLarge":"https://avatars0.githubusercontent.com/u/38111357?v=4","uid":"38111357"}},"collectedEntriesCount":53,"company":"不知名公司","followersCount":69,"followeesCount":4,"role":"guest","postedPostsCount":47,"level":2,"isAuthor":false,"postedEntriesCount":0,"totalCommentsCount":29,"ngxCachedTime":1572571542,"ngxCached":true,"viewedEntriesCount":166,"jobTitle":"android/前端工程师","subscribedTagsCount":49,"totalCollectionsCount":225,"username":"klivitamJ","avatarLarge":"https://user-gold-cdn.xitu.io/2019/5/16/16ac04f5f078c09f?w=340&h=237&f=jpeg&s=43308","objectId":"599ed5fdf265da2491510a00"},"author":"","screenshot":"","original":true,"hotIndex":4.3769,"content":"谈到作用域这一块，很多人其实都不怎么熟悉这一块，我今天趁着闲暇跟大家来扯一扯。 js(es6以前)没有块级作用域（你可以自己闭包或其他方法实现），只有函数级作用域，函数外面的变量函数里面可以找到，函数里面的变量外面找不到。 从上面的代码我们可以清楚的看出：最外层函数定义的变量拥…","title":"关于作用域、变量提升和闭包的理解","lastCommentTime":"1970-01-01T00:00:00.Z","type":"post","english":false,"category":{"ngxCached":true,"title":"frontend","id":"5562b415e4b00c57d9b94ac8","name":"前端","ngxCachedTime":1572571605},"viewsCount":62,"summaryInfo":"谈到作用域这一块，很多人其实都不怎么熟悉这一块，我今天趁着闲暇跟大家来扯一扯。 js(es6以前)没有块级作用域（你可以自己闭包或其他方法实现），只有函数级作用域，函数外面的变量函数里面可以找到，函数里面的变量外面找不到。 从上面的代码我们可以清楚的看出：最外层函数定义的变量拥有全局作用域，即对任...","isCollected":false},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0},{"collectionCount":0}]